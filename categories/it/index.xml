<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IT on Kamil Pro</title>
    <link>https://kamilpro.com/categories/it/</link>
    <description>Recent content in IT on Kamil Pro</description>
    <image>
      <title>Kamil Pro</title>
      <url>https://kamilpro.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://kamilpro.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Nov 2020 17:46:00 +0000</lastBuildDate>
    <atom:link href="https://kamilpro.com/categories/it/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerShell for IT Professionals [#20] – Next Steps with PowerShell</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-20-next-steps-with-powershell/</link>
      <pubDate>Thu, 26 Nov 2020 17:46:00 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-20-next-steps-with-powershell/</guid>
      <description>Congratulations! This is 20th and last lesson in the course – and my aim here is to show you various paths you can take your PowerShell journey to.
I’m going to show what else you can do within PowerShell itself, as well how to keep up-to-day plus – what other doors writing code has opened for you – I’d love to hear back about this!
I hope you’ve enjoyed the course so far and it will be helped you in some way – either solve a problem, got promotion, or simply learnt something new.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#19] – Websites and APIs</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-19-websites-and-apis/</link>
      <pubDate>Sun, 15 Nov 2020 20:57:20 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-19-websites-and-apis/</guid>
      <description>PowerShell is a great server automation tool, but what about Internet and any other web served services?
As it turns out, PowerShell is great in scrapping websites and consuming APIs – and it’s been one of the main development areas of the tool in the last couple of years.
In this lesson we are going to see how to use PowerShell to download files, scrap websites, discover links.
We will then use an API of PasswordPusher (pwpush.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#18] – Working with text strings</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-18-working-with-text-strings/</link>
      <pubDate>Tue, 03 Nov 2020 17:33:18 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-18-working-with-text-strings/</guid>
      <description>Although PowerShell treats everything as object - including text strings - working with text might be particularly difficult - at least when first approached.
In this lesson we are going to have a closer look at what is possible with built in text methods and see how these can help us e.g. by extracting a substring of text.
PowerShell can also be great at parsing log files - we will use Select-String to quickly filter out the lines of text with the phrase we are looking for e.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#17] – Scripting part 4 – parameters, running remotely and formatting</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-17-scripting-part-4-parameters-running-remotely-and-formatting/</link>
      <pubDate>Mon, 19 Oct 2020 18:32:20 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-17-scripting-part-4-parameters-running-remotely-and-formatting/</guid>
      <description>In the last part of scripting series, we will make the script to be able to query remote machines, e.g. servers.
We will also check how to add parameters to the script (and configure the default value of parameter) so that user will able to pass the parameter name like in a standard PowerShell cmdlet.
Finally, we are going to format the script so that it looks more reliable and make some refactoring so that the logic is simpler.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#16] – Scripting part 3 – Add-Member and network</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-16-scripting-part-3-add-member-and-network/</link>
      <pubDate>Tue, 13 Oct 2020 19:12:40 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-16-scripting-part-3-add-member-and-network/</guid>
      <description>In this lesson we are taking our script further by adding details about IP configuration and last installed hotfixes.
But it turns out, the networking information is not that shallow as it seems at the first glance – thus I’ll show you how to retrieve the information from the configuration.
We will also look on how to reuse our already created object so that we don’t need to duplicate code.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#15] – Scripting part 2 – IF and psobject</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-15-scripting-part-2-if-and-psobject/</link>
      <pubDate>Mon, 05 Oct 2020 17:16:21 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-15-scripting-part-2-if-and-psobject/</guid>
      <description>In this lesson we carry on writing the scripting by gathering requirements and putting them together as comments in code.
Then we will retrieve OS information with the help of WMI and display it on the screen with Write-Host.
Although using Write-Host is easy to use, it doesn’t really allow us to do very much e.g. we cannot export information to the CSV, therefore we change it and start using custom PSObject – that way our script will start returning information like a regular PowerShell command.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#14] – Scripting – Hello World!</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-14-scripting-hello-world/</link>
      <pubDate>Sat, 26 Sep 2020 13:00:35 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-14-scripting-hello-world/</guid>
      <description>In this lesson we will be preparing our workstation for writing PowerShell scripts. We will start by enabling RSAT and then install Visual Studio Code which is a recommended and free PowerShell code editor.
We will then have a look at the basic function of VS Code and create a simple “Hello World” script.
Exercises If you haven’t followed along, you definitely would like to install VS Code and create a *.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#13] – Is PowerShell secure?</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-13-is-powershell-secure/</link>
      <pubDate>Sat, 12 Sep 2020 16:09:00 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-13-is-powershell-secure/</guid>
      <description>In this lesson we will have a look on PowerShell built in security features and how it differs from e.g. BAT files.
We will then have a look how execution policy can help to control on what basis the PowerShell scripts can be executed.
At the end, we will configure some GPOs to control the execution and transcription of scripts.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#12] – WMI – Windows Management Instrumentation</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-12-wmi-windows-management-instrumentation/</link>
      <pubDate>Sat, 05 Sep 2020 16:27:10 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-12-wmi-windows-management-instrumentation/</guid>
      <description>In this lesson we learn how to use PowerShell to access WMI (Windows Management Instrumentation), so that we can gain often hidden or obscure information.
We will then use WMI Explorer graphical tool to ease discovering all possible classes and instances that WMI provides.
Finally, we will use WMI queries to add another level of granularity in GPO so that we can target very specific computers in it.
Exercises There’s a WMI class that lists all the installed software – find it and list all currently installed software with PowerShell.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#11] – Variables</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-11-variables/</link>
      <pubDate>Sat, 29 Aug 2020 10:39:05 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-11-variables/</guid>
      <description>In this lesson we’re going to learn how what Variables are, why it’s good to use them and how to actually create them. We will then assign various values to variables to and use them solely, and in parameters.
We will also have a look at foreach loop so that we can e.g. ping multiple computers using single variable with multiple objects in it.
Exercises Use Get-Command to find all commands that allow you to manage variables.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#10] – Remote management with PowerShell</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-10-remote-management-with-powershell/</link>
      <pubDate>Mon, 24 Aug 2020 10:00:00 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-10-remote-management-with-powershell/</guid>
      <description>In this lesson we’re going to learn how to do one-to-one and one-to-many remote management with PowerShell. There’s no need for telnet, ssh or psexec as PowerShell has its own protocol that’s built in right into Windows. We will look at how to create interactive sessions and send commands to multiple servers at once.
Exercises Notes Enable-Psremoting Enter-PSSesion ps-svr1 Hostname Get-Service GIP # I can even run commands that are not available on my source machine Get-ADDomainController Get-ADUser Exit or Exit-PSSession # Caution about double hoping Invoke-Command Invoke-Command -computerName ps-svr1 -command { get-service} # Invoke command executes commands on the remote comptuers and brings back the results # Can you tell a difference?</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#9] – Setting up Active Directory</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-9-setting-up-active-directory/</link>
      <pubDate>Wed, 19 Aug 2020 12:49:09 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-9-setting-up-active-directory/</guid>
      <description>Exercises On domain controller, find module that allows to manage Active Directory List all the Active Directory users List members of “Enterprise Administrators” Find the feature name for Windows Server Backup and install it with PowerShell Commands ### Server # Check IP configuration # Show steps in Server how to install # Check hostname Hostname # Rename server Rename-Computer ps-svr1 # Restart computer Reboot-computer # Get-WindowsFeature # Install-WindowsFeature Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools Install-ADDSForest -DomainName posh.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#8] – Manage everything with PowerShell</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-8-manage-everything-with-powershell/</link>
      <pubDate>Fri, 14 Aug 2020 16:31:00 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-8-manage-everything-with-powershell/</guid>
      <description>Exercises Can you uninstall module that was installed with Install-Module? Confirm your answer with Get-Module -ListAvaiable Can you update the installed module? Perhaps, you’d like to install version 1.0.0.0 of SNMP module, how can you force Install-Module to do so? Install-Module error If you encounter the issue with downloading modules, run this commandlet as a temporary workaround (it must be applied every time the shell is restarted):
Source of solution, and also permanent solution can be found at:</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#7] – Formatting output</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-7-formatting-output/</link>
      <pubDate>Tue, 11 Aug 2020 12:35:44 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-7-formatting-output/</guid>
      <description>Exercises Send output of any commandlet, e.g. get service to Printer
Lesson notes # So far, we&amp;#39;ve been using default PowerShell behaviour for formatting output # Although in the last lesson we did filtering data with Where-Object and Select-Object # We didn&amp;#39;t really focus on how data is presented on the screen. Let&amp;#39;s see what can be done here. # Let&amp;#39;s have a look at local Get-LocalGroup Get-LocalGroup | Format-List #Alias is FL #Like with Select-Object, we can specify properties we&amp;#39;re after Get-LocalGroup | fl -Property name,sid #Another example when List might be easier to read then table Get-CimInstance win32_ComputerSystem ## Format Table #ipconfig.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#6] – Filtering output</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-6-filtering-output/</link>
      <pubDate>Fri, 07 Aug 2020 12:00:32 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-6-filtering-output/</guid>
      <description>Exercises List all services that are stopped List all service that are stopped and they name begins with W Display only the Display Name of services that stopped and their name begins with W Lesson notes ### Filtering # Some commands accept wild cards in the search or have a filter parameter Get-Service -Name w*,b* #But there&amp;#39;s more universal method, based on property names Get-Service | Where-Object -Filter {$_.Status -eq &amp;#39;running&amp;#39; } #So let&amp;#39;s break it down #Where-Object allows to filter out the incoming object based on the comparation operator #Most popular operators are: -eq - Equals -ne - Not equals -gt - Greather than -lt - Less then -le - Less than or equal -ge - Greater than or equal -Like -Notlike #There are more many, you can check these help topics: Help about_Operators Help about_Comparison_Operators #$_ is current object; it&amp;#39;s what we&amp;#39;re piping in our case Get-Service # .</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#5] – Providers</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-5-providers/</link>
      <pubDate>Tue, 04 Aug 2020 10:55:00 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-5-providers/</guid>
      <description>Exercises Create a folder in root of C: with the name of PowerShell Create a file inside the folder with the name of your choice and no content Retrieve all items from Env: drive Check the version of Notepad.exe in Windows directory Discover current Windows build version by registry property: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion Notes from the lesson # Provider allows to access some data storage (e.g. File system, registry, remote system, Active Directory) # This concept might sound a bit abstract at first, but becomes very straight forward once you&amp;#39;ve used it for a while # Provider once connected to the data storage, kind of &amp;#34;mounts&amp;#34; it like a network drive, allowing to browse and manage it # Once the storage is mounted PowerShell creates so called PSDrive # Let&amp;#39;s review available providers Get-Psprovider # Let&amp;#39;s review some PSDrives Get-PSDrive # A quick refresher how file system is organised: Drives, Folders, Files # Since PowerShell connects to many different file data storages, it uses the generic term Item and specifies with type.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#4] – Pipeline</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-4-pipeline/</link>
      <pubDate>Thu, 30 Jul 2020 07:45:57 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-4-pipeline/</guid>
      <description>Exercises There’s one particular command that allows you output anything from shell to file, find that command and use with any commands like Get-Service or Get-Process. Does it behave differently than Export-CSV?
Programs often use CSV but don’t use comma for delimiter – try to exporting to CSV but change the delimiter
Can you print directly from shell? See if there are any commands available and if so, print some Event Logs!</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#3] – Running Commands</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-2-running-commands/</link>
      <pubDate>Mon, 27 Jul 2020 19:08:38 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-2-running-commands/</guid>
      <description>Exercises Display a list of all services that start with the letter W Display all processes (you might need to use Help to discover the right command. Remember the noun might be singular). Open Notepad (you can simply punch in notepad in the shell) Display only processes that have a name “Notepad” Once you can there’s only one instance of Notepad running, close it with PowerShell! (Verb would be Stop) Confirm with Shell there are no more Notepad processes running Display last 10 lines of C:\windows\setupact.</description>
    </item>
    <item>
      <title>PowerShell for IT Professionals [#1] [#2] – Help</title>
      <link>https://kamilpro.com/powershell-for-it-professionals-1-help/</link>
      <pubDate>Thu, 23 Jul 2020 16:32:54 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-for-it-professionals-1-help/</guid>
      <description>About files solve issue If after running Update-Help you don’t have About topics, you might want to manually download them and extract the archive to the root of:
C:\Windows\System32\WindowsPowerShell\v1.0\en
PowerShell help – Exercises PowerShell is great in working with CSV files. Can you find help for any CSV related commands (you will need to use a wildcard)
Can you tell what’s a difference between ConvertTo-CSV and Export-CSV commands
We often need to review event logs – which command would allow you to retrieve event logs?</description>
    </item>
    <item>
      <title>Deploying software with GPO</title>
      <link>https://kamilpro.com/deploying-software-with-gpo/</link>
      <pubDate>Sun, 15 Mar 2020 14:25:59 +0000</pubDate>
      <guid>https://kamilpro.com/deploying-software-with-gpo/</guid>
      <description>Having software consistently deployed across the fleet of computers is one of the key points that can be automated.
If I have a choice (and it makes sense), I will always choose GPO over any other solution because it’s embedded into Active Directory thus not requiring installation, learning and maintenance of additional management tool.
MSI – Software Installation One of the main advantages of MSI installers is that in 99% of cases you can just use the “Software Installation” option in GPO, and GPO will take care of the silent installation.</description>
    </item>
    <item>
      <title>Prepare Hyper-V template of Windows Server 2016/2019</title>
      <link>https://kamilpro.com/prepare-hyper-v-template-of-windows-server-2016-2019/</link>
      <pubDate>Sun, 08 Mar 2020 10:52:17 +0000</pubDate>
      <guid>https://kamilpro.com/prepare-hyper-v-template-of-windows-server-2016-2019/</guid>
      <description>Deploying a new server is always fun! Well, at least the part after ISO download, installation, patching. Having said that, why not create a template so that you jump right into the fun?
So we are essentially going to create a preconfigured VHDX file that can be attached to the newly created VM, and it will take you straight to the login screen.
What’s needed Windows server or Windows 10 with Hyper-V role and management tools enabled Windows Assessment and Deployment Toolkit (ADK) – I always pick the latest version available, at the moment of writing this – Windows 10, version 1903 – is latest.</description>
    </item>
    <item>
      <title>Restarting VSS Writers with PowerShell script</title>
      <link>https://kamilpro.com/restarting-vss-writers-with-powershell-script/</link>
      <pubDate>Sun, 01 Dec 2019 18:27:18 +0000</pubDate>
      <guid>https://kamilpro.com/restarting-vss-writers-with-powershell-script/</guid>
      <description>VSS Writers are responsible for backups – if they stop working, then backups might fail. The solution to that is restarting VSS Writers, but the problem here is that there are many, and at least out of the box, there’s no mechanism to make this automatic… but there’s PowerShell.
I’m not interested in your code, I just want to restart these VSS Writers In that case, head on to: mygithub, use the code and run:</description>
    </item>
    <item>
      <title>Monitoring – why you need it</title>
      <link>https://kamilpro.com/monitoring-why-you-need-it/</link>
      <pubDate>Tue, 09 Jul 2019 06:45:00 +0000</pubDate>
      <guid>https://kamilpro.com/monitoring-why-you-need-it/</guid>
      <description>It’s Friday. 5.20PM. So close to the long weekend. Monday is bank holiday – thus three days off. Very happy Friday.
You’re going to the server room to check some minor details. Upon opening the main door, you can feel that cold breeze and characteristic noise of hundreds of spinning fans. You quickly skim through all flashy lights, as it’s a good habit.
And then you notice there’s something wrong. An orange light – why is there an orange light?</description>
    </item>
    <item>
      <title>The automation process stages</title>
      <link>https://kamilpro.com/the-automation-process-stages/</link>
      <pubDate>Tue, 25 Jun 2019 07:50:11 +0000</pubDate>
      <guid>https://kamilpro.com/the-automation-process-stages/</guid>
      <description>This will be a high level experience I’ve been gaining whenever automating manual processes.
What does it mean to automate? Simply put, is to remove a person from equation in order to complete the task. It can go as far as automating the whole process, or just part of it. The main goal here is to release the resource – that is a person’s time and energy – and redirect it toward something more valuable.</description>
    </item>
    <item>
      <title>Backup Exec – cataloging multiple tapes with a single tape drive</title>
      <link>https://kamilpro.com/backup-exec-cataloging-multiple-tapes-with-a-single-tape-drive/</link>
      <pubDate>Sun, 30 Sep 2018 20:33:33 +0000</pubDate>
      <guid>https://kamilpro.com/backup-exec-cataloging-multiple-tapes-with-a-single-tape-drive/</guid>
      <description>Recently I’ve had a request to restore a certain backup from the old backup tapes. We’ve had a new Backup exec installation which didn’t have the catalogue/record of these tapes nor the actual tape drive to recover them – I knew it was going to be one in the world task. And the hell it was.
Locating tapes in the storage unit was a pure joy – no need to go to the gym after this.</description>
    </item>
    <item>
      <title>Use Windows Server as iSCSI target with ESXi</title>
      <link>https://kamilpro.com/use-windows-server-as-iscsi-target-with-esxi/</link>
      <pubDate>Wed, 15 Aug 2018 17:54:47 +0000</pubDate>
      <guid>https://kamilpro.com/use-windows-server-as-iscsi-target-with-esxi/</guid>
      <description>The task: to move a virtual machine from one ESXi to another. The ESXis are on two completely separate networks. VM size is 5.5 TB, with one file being 5TB.
The problem: VM cannot be started due to maxed out resources. There’s no NAS or any other means of storage where the files could be transferred to. From previous experience, I knew that transfer over SSH or USB would be well too slow, as the task was time critical.</description>
    </item>
    <item>
      <title>Resolve IP and DNS with Powershell tool</title>
      <link>https://kamilpro.com/powershell-tool-resolve-ip-and-dns/</link>
      <pubDate>Sun, 29 Apr 2018 21:40:00 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-tool-resolve-ip-and-dns/</guid>
      <description>I’ve been asked to prepare a simple tool which would:
Resolve IP address or DNS Return all results to table Import addresses from a file The reason behind was to check how IP/DNS records change over the period of time, therefore there was a need for something like that:
A file with all addresses in question Tool which could import all these addresses and resolve them Save the results into a new file Once having at least a couple of files, the results could be compared.</description>
    </item>
    <item>
      <title>Ultimate Windows Update fix</title>
      <link>https://kamilpro.com/ultimate-windows-update-fix/</link>
      <pubDate>Sun, 29 Oct 2017 22:12:15 +0000</pubDate>
      <guid>https://kamilpro.com/ultimate-windows-update-fix/</guid>
      <description>The reason I manage hundreds of workstations working on various Windows versions. As we know, Windows (and other Microsoft’s software) is updated monthly. While usually the process is just working fine, sometimes it simply doesn’t want to work.
And yes, probably Google is your best friend here… but really, who has time to search for the solution, and apply it, manually, if there is more than 1 computer?
Use the script I used technet, different posts and own knowledge of fixing that kind of issues.</description>
    </item>
    <item>
      <title>Powershell – resolve full names to usernames from CSV file</title>
      <link>https://kamilpro.com/powershell-resolve-full-names-usernames-csv-file/</link>
      <pubDate>Sat, 21 Oct 2017 14:03:58 +0000</pubDate>
      <guid>https://kamilpro.com/powershell-resolve-full-names-usernames-csv-file/</guid>
      <description>It’s unbelievable how long it took me to figure out this simple Powershell script, but yet it does the trick :).
Often you receive a request to do a certain action with a bunch of accounts, and (obviously) the list provided contains the full names rather usernames. Pain to do it manually, but yet we can utilise Powershell here.
What you need: CSV file, with only one column, and the header of the column must be called “Name”, if you prefer to use something different, simply amend Name in line 6 to reflect your header.</description>
    </item>
    <item>
      <title>Add any drivers to Windows – on example of GPU drivers</title>
      <link>https://kamilpro.com/add-any-drivers-to-windows-on-example-of-gpu-drivers/</link>
      <pubDate>Mon, 29 May 2017 18:53:05 +0000</pubDate>
      <guid>https://kamilpro.com/add-any-drivers-to-windows-on-example-of-gpu-drivers/</guid>
      <description>Today we are going to inject drivers into the Windows image with the help of built-in tools in Windows.
What do you need? Just a few things:
Any hardware to which you’d like drivers to be added to Reference computer with the hardware attached to it Drivers Windows image which is going to be deployed I think there’s not much to explain, so let’s analyse the actual process.
What we are going to do?</description>
    </item>
    <item>
      <title>Mastering PNPUTIL – how to add drivers to the Windows image</title>
      <link>https://kamilpro.com/mastering-pnputil-add-drivers-windows-image/</link>
      <pubDate>Mon, 01 May 2017 20:32:06 +0000</pubDate>
      <guid>https://kamilpro.com/mastering-pnputil-add-drivers-windows-image/</guid>
      <description>Drivers – that’s what makes a harmony between hardware and software. Appropriate drivers can make a huge difference between computer’s performance, stability and even temperature. Therefore it’s super important to make sure you’ve got up-to-date files included with your image or Windows installation.
We are going to review PNPUTIL tool – the versatile tool for handling drivers within the Windows.
Why do you need PNPUTIL? Yes, why bother with some command line tool (PNPUTIL is command line only) when there are dedicated installers and device manager?</description>
    </item>
    <item>
      <title>How to prepare Windows 10 1607 image</title>
      <link>https://kamilpro.com/prepare-windows-10-1607-image/</link>
      <pubDate>Mon, 03 Apr 2017 22:35:09 +0000</pubDate>
      <guid>https://kamilpro.com/prepare-windows-10-1607-image/</guid>
      <description>&lt;p&gt;Sooner or later every company will come to the point when using standard Windows image is just not enough. Manual installation, fetching all updates or installing software etc. etc. takes time, and in IT, we really can use that time for something way more productive.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
