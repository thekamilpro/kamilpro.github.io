<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>pwsh - Tag - Kamil Pro</title><link>https://kamilpro.github.io/tags/pwsh/</link><description>pwsh - Tag - Kamil Pro</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Kamil Procyszyn</copyright><lastBuildDate>Mon, 07 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kamilpro.github.io/tags/pwsh/" rel="self" type="application/rss+xml"/><item><title>PowerShell Parameter Attributes - validate, group, require params and add pipeline to your function</title><link>https://kamilpro.github.io/powershell-parameter/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-parameter/</guid><description>Having properly configured parameters help your users to understand the use of your function. It also helps fellow developers to appreciate the intended use of the function. In addition, it gives you more control of how the code flows through your script.
Parameter attributes is what takes parameters to the next level - you can specify that certain parameters are mandatory, group them together so that only certain combination of parameters is meant to work together, we can even add pipeline support so that function can be used as any other built-in function.</description></item><item><title>PowerShell function - converting script into function with parameters</title><link>https://kamilpro.github.io/powershell-function/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-function/</guid><description><![CDATA[So you&rsquo;ve been writing your scripts for some time and wondering how to make them more PowerShell-like, so that they can be invoked from the console like all the other cmdlets?
In this quick video I&rsquo;ll show you how to convert a sample script into function, add parameters and indicated to your user how to use your function with mandatory parameters and types.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Sample script which asks user for basic information, then manipulates it and # display some information # There&#39;s no way (at least easy) to pass these parameters from prompt, nor validate $Name = Read-Host -Prompt &#34;What&#39;s your name?]]></description></item><item><title>PowerShell PSCustomObject - Custom Object, the way it was meant to be</title><link>https://kamilpro.github.io/powershell-pscustomobject/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-pscustomobject/</guid><description>Everything is an object in PowerShell, and ability to create own object allows for one more way of controlling and handling data.
In this video I&amp;rsquo;ll take you through the steps of creating PSCustomObject, working with its properties to doing more advanced topics - like adding methods and types to the object.
amp;lt;#PSScriptInfo .</description></item></channel></rss>