<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>username on Kamil Pro</title><link>https://kamilpro.com/tags/username/</link><description>Recent content in username on Kamil Pro</description><image><title>Kamil Pro</title><url>https://kamilpro.com/logo.png</url><link>https://kamilpro.com/logo.png</link></image><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Kamil Procyszyn</copyright><lastBuildDate>Tue, 03 Nov 2020 17:33:18 +0000</lastBuildDate><atom:link href="https://kamilpro.com/tags/username/index.xml" rel="self" type="application/rss+xml"/><item><title>PowerShell for IT Professionals [#18] – Working with text strings</title><link>https://kamilpro.com/powershell-for-it-professionals-18-working-with-text-strings/</link><pubDate>Tue, 03 Nov 2020 17:33:18 +0000</pubDate><guid>https://kamilpro.com/powershell-for-it-professionals-18-working-with-text-strings/</guid><description>Although PowerShell treats everything as object - including text strings - working with text might be particularly difficult - at least when first approached.
In this lesson we are going to have a closer look at what is possible with built in text methods and see how these can help us e.g. by extracting a substring of text.
PowerShell can also be great at parsing log files - we will use Select-String to quickly filter out the lines of text with the phrase we are looking for e.</description></item><item><title>Powershell – resolve full names to usernames from CSV file</title><link>https://kamilpro.com/powershell-resolve-full-names-usernames-csv-file/</link><pubDate>Sat, 21 Oct 2017 14:03:58 +0000</pubDate><guid>https://kamilpro.com/powershell-resolve-full-names-usernames-csv-file/</guid><description>It’s unbelievable how long it took me to figure out this simple Powershell script, but yet it does the trick :).
Often you receive a request to do a certain action with a bunch of accounts, and (obviously) the list provided contains the full names rather usernames. Pain to do it manually, but yet we can utilise Powershell here.
What you need: CSV file, with only one column, and the header of the column must be called “Name”, if you prefer to use something different, simply amend Name in line 6 to reflect your header.</description></item></channel></rss>