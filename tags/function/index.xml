<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>function on Kamil Pro</title><link>https://kamilpro.github.io/tags/function/</link><description>Recent content in function on Kamil Pro</description><image><title>Kamil Pro</title><url>https://kamilpro.github.io/logo.png</url><link>https://kamilpro.github.io/logo.png</link></image><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Kamil Procyszyn</copyright><lastBuildDate>Fri, 21 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kamilpro.github.io/tags/function/index.xml" rel="self" type="application/rss+xml"/><item><title>PowerShell function - converting script into function with parameters</title><link>https://kamilpro.github.io/powershell-function/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><guid>https://kamilpro.github.io/powershell-function/</guid><description>So you&amp;rsquo;ve been writing your scripts for some time and wondering how to make them more PowerShell-like, so that they can be invoked from the console like all the other cmdlets?
In this quick video I&amp;rsquo;ll show you how to convert a sample script into function, add parameters and indicated to your user how to use your function with mandatory parameters and types.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Sample script which asks user for basic information, then manipulates it and # display some information # There&amp;#39;s no way (at least easy) to pass these parameters from prompt, nor validate $Name = Read-Host -Prompt &amp;#34;What&amp;#39;s your name?</description></item><item><title>PowerShell for IT Professionals [#20] – Next Steps with PowerShell</title><link>https://kamilpro.github.io/powershell-for-it-professionals-20-next-steps-with-powershell/</link><pubDate>Thu, 26 Nov 2020 17:46:00 +0000</pubDate><guid>https://kamilpro.github.io/powershell-for-it-professionals-20-next-steps-with-powershell/</guid><description>Congratulations! This is 20th and last lesson in the course – and my aim here is to show you various paths you can take your PowerShell journey to.
I’m going to show what else you can do within PowerShell itself, as well how to keep up-to-day plus – what other doors writing code has opened for you – I’d love to hear back about this!
I hope you’ve enjoyed the course so far and it will be helped you in some way – either solve a problem, got promotion, or simply learnt something new.</description></item></channel></rss>