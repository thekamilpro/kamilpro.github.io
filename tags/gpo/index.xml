<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>gpo - Tag - Kamil Pro</title><link>https://kamilpro.github.io/tags/gpo/</link><description>gpo - Tag - Kamil Pro</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Kamil Procyszyn</copyright><lastBuildDate>Sat, 12 Sep 2020 16:09:00 +0000</lastBuildDate><atom:link href="https://kamilpro.github.io/tags/gpo/" rel="self" type="application/rss+xml"/><item><title>PowerShell for IT Professionals [#13] – Is PowerShell secure?</title><link>https://kamilpro.github.io/powershell-for-it-professionals-13-is-powershell-secure/</link><pubDate>Sat, 12 Sep 2020 16:09:00 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-for-it-professionals-13-is-powershell-secure/</guid><description>&lt;div class="featured-image">
&lt;img src="/wp-content/uploads/2020/09/Is-PowerShell-secure.jpg" referrerpolicy="no-referrer">
&lt;/div>In this lesson we will have a look on PowerShell built in security features and how it differs from e.g. BAT files.
We will then have a look how execution policy can help to control on what basis the PowerShell scripts can be executed.
At the end, we will configure some GPOs to control the execution and transcription of scripts.</description></item><item><title>PowerShell for IT Professionals [#12] – WMI – Windows Management Instrumentation</title><link>https://kamilpro.github.io/powershell-for-it-professionals-12-wmi-windows-management-instrumentation/</link><pubDate>Sat, 05 Sep 2020 16:27:10 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-for-it-professionals-12-wmi-windows-management-instrumentation/</guid><description>&lt;div class="featured-image">
&lt;img src="/wp-content/uploads/2020/09/WMI.jpg" referrerpolicy="no-referrer">
&lt;/div>In this lesson we learn how to use PowerShell to access WMI (Windows Management Instrumentation), so that we can gain often hidden or obscure information.
We will then use WMI Explorer graphical tool to ease discovering all possible classes and instances that WMI provides.
Finally, we will use WMI queries to add another level of granularity in GPO so that we can target very specific computers in it.
Exercises There’s a WMI class that lists all the installed software – find it and list all currently installed software with PowerShell.</description></item><item><title>Deploying software with GPO</title><link>https://kamilpro.github.io/deploying-software-with-gpo/</link><pubDate>Sun, 15 Mar 2020 14:25:59 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/deploying-software-with-gpo/</guid><description>&lt;div class="featured-image">
&lt;img src="/wp-content/uploads/2020/03/ferdinand-stohr-rzA7ZuI8M5o-unsplash.jpg" referrerpolicy="no-referrer">
&lt;/div>Having software consistently deployed across the fleet of computers is one of the key points that can be automated.
If I have a choice (and it makes sense), I will always choose GPO over any other solution because it’s embedded into Active Directory thus not requiring installation, learning and maintenance of additional management tool.
MSI – Software Installation One of the main advantages of MSI installers is that in 99% of cases you can just use the “Software Installation” option in GPO, and GPO will take care of the silent installation.</description></item></channel></rss>