<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>error - Tag - Kamil Pro</title><link>https://kamilpro.github.io/tags/error/</link><description>error - Tag - Kamil Pro</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Kamil Procyszyn</copyright><lastBuildDate>Sat, 21 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kamilpro.github.io/tags/error/" rel="self" type="application/rss+xml"/><item><title>PowerShell Error Handling - One error at the time please</title><link>https://kamilpro.github.io/powershell-error-handling/</link><pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-error-handling/</guid><description><![CDATA[Code fails - whether because of reasons out of our control, or because we didn&rsquo;t consider the situation it might fail. Expired credentials, timeout connections, lack of permissions go genuine software bug - each of these are potential problem which might fall our code over. And if we don&rsquo;t handle the error, our script will simply throw and terminate. It&rsquo;s certainly not desired state.
In this video I&rsquo;ll show you different ways PowerShell can error, how to debug such errors and how to handle them - so that we are in control.]]></description></item><item><title>PowerShell for IT Professionals [#3] – Running Commands</title><link>https://kamilpro.github.io/powershell-for-it-professionals-2-running-commands/</link><pubDate>Mon, 27 Jul 2020 19:08:38 +0000</pubDate><author>Kamil</author><guid>https://kamilpro.github.io/powershell-for-it-professionals-2-running-commands/</guid><description>&lt;div class="featured-image">
&lt;img src="/wp-content/uploads/2020/07/Running-Commands.jpg" referrerpolicy="no-referrer">
&lt;/div>Exercises Display a list of all services that start with the letter W Display all processes (you might need to use Help to discover the right command. Remember the noun might be singular). Open Notepad (you can simply punch in notepad in the shell) Display only processes that have a name “Notepad” Once you can there’s only one instance of Notepad running, close it with PowerShell! (Verb would be Stop) Confirm with Shell there are no more Notepad processes running Display last 10 lines of C:\windows\setupact.</description></item></channel></rss>