[{"content":" Side note, I was meant to publish this back in March 2023\u0026hellip;\nWhen I attended my first PowerShell meetup back in 2017, I had no idea it would lead me to where I am today.\nFast forward to 3rd of March 2023, I was privileged to speak and share my knowledge with other #PowerShell enthusiasts at #PsDayUk conference. I presented the PowerShell based web server and web framework, which enables anyone familiar with the language, to create web applications.\nThere were questions, there were raised hands, there was a conversation between me and other attendees - I hope everyone left with a wonderful experience.\nLooking back and thinking that a few years ago I knew nothing about PowerShell, let alone writing code is just mind blowing.\nI would like to thank everyone who came to my presentation, and everyone who has been with me on the journey.\nIt’s the support and encouragement of the community that keeps me motivated!\nThe journey is never ending. Journey before destination.\nCode and slides\n","permalink":"https://kamilpro.github.io/speaking-at-psdayuk-2023/","summary":"Side note, I was meant to publish this back in March 2023\u0026hellip;\nWhen I attended my first PowerShell meetup back in 2017, I had no idea it would lead me to where I am today.\nFast forward to 3rd of March 2023, I was privileged to speak and share my knowledge with other #PowerShell enthusiasts at #PsDayUk conference. I presented the PowerShell based web server and web framework, which enables anyone familiar with the language, to create web applications.","title":"Speaking at PsDayUk 2023"},{"content":" Code fails - whether because of reasons out of our control, or because we didn\u0026rsquo;t consider the situation it might fail. Expired credentials, timeout connections, lack of permissions go genuine software bug - each of these are potential problem which might fall our code over. And if we don\u0026rsquo;t handle the error, our script will simply throw and terminate. It\u0026rsquo;s certainly not desired state.\nIn this video I\u0026rsquo;ll show you different ways PowerShell can error, how to debug such errors and how to handle them - so that we are in control.\nCode\n","permalink":"https://kamilpro.github.io/powershell-error-handling/","summary":"Code fails - whether because of reasons out of our control, or because we didn\u0026rsquo;t consider the situation it might fail. Expired credentials, timeout connections, lack of permissions go genuine software bug - each of these are potential problem which might fall our code over. And if we don\u0026rsquo;t handle the error, our script will simply throw and terminate. It\u0026rsquo;s certainly not desired state.\nIn this video I\u0026rsquo;ll show you different ways PowerShell can error, how to debug such errors and how to handle them - so that we are in control.","title":"PowerShell Error Handling - One error at the time please"},{"content":"I’ve just passed 1000 subscribers on my #YouTube channel - thank you! https://lnkd.in/e6mBpUZA\nBack in 2020 I have started a little experiment and since then it has been slowly growing and growing. I wanted to share my knowledge and experience with like-minded IT professionals. I wanted to create a community where people could come to learn more about #powershell and how to become modern #sysadmin, while being free to ask any questions on the topic! Yet I didn’t want to write something for sake of writing something. So I decided to record series of coding videos for absolute beginners - so that hopefully I would help and convert more users into PowerShell.\nAnd although I used to write a blog, I have switched to a videoblog. Video gave me more possibilities to express myself, and allowed viewers to follow and see exactly what’s was going on my screen and what results I get - something I find invaluable while learning and practicing anything.\nIn the course of working on new videos, I’ve learnt some basics of video editing - if you compare the very first video to one of the recent… I mean the first video was recorded live, without any post editing - just me talking to the microphone and recording screen, I hope you can see and hear the progress.\nAnd even though I’ve been recording videos for over two years, I’ve only started talking openly about it recently. I’m not pushing it in any way - if the conversation we’re having is about a topic I happen to have a video about, I might drop you a link. Perhaps, now it’s time to learn bit more about online marketing ;).\nAnyways, I’m glad my persistence paid off and the numbers of subscribers is growing steadily. I hope you’ll enjoy this ride with me!\n","permalink":"https://kamilpro.github.io/1000-subscribers/","summary":"I’ve just passed 1000 subscribers on my #YouTube channel - thank you! https://lnkd.in/e6mBpUZA\nBack in 2020 I have started a little experiment and since then it has been slowly growing and growing. I wanted to share my knowledge and experience with like-minded IT professionals. I wanted to create a community where people could come to learn more about #powershell and how to become modern #sysadmin, while being free to ask any questions on the topic!","title":"1000 Subscribers!"},{"content":" Web Applications are popular, and often require to either knowing some front-end development or using some other products which allow to build some applications. What about PowerShell, can you actually build a web app using only PowerShell language?\nYes, you can write a web app in PowerShell, and I\u0026rsquo;m going to show you how in this video.\nIt comes down to two PowerShell modules - Pode and Pode.Web - all you need to do is to run Install-Module Pode,Pode.Web and you can start building your applications.\nI will be writing a simple password generation and management web app during video, and source code is available on GitHub - so that you can either follow me, or just grab source code and see how this whole Pode module works yourself. And since the video touches only briefly what Pode is capable of, I\u0026rsquo;m really looking forward your views and feedback.\nCode\nPode website\nPode.Web website\nPode Discord\n","permalink":"https://kamilpro.github.io/powershell-powerful-pode-podeweb/","summary":"Web Applications are popular, and often require to either knowing some front-end development or using some other products which allow to build some applications. What about PowerShell, can you actually build a web app using only PowerShell language?\nYes, you can write a web app in PowerShell, and I\u0026rsquo;m going to show you how in this video.\nIt comes down to two PowerShell modules - Pode and Pode.Web - all you need to do is to run Install-Module Pode,Pode.","title":"Developing a Web Application with PowerShell - Pode, the PowerFul Module"},{"content":" The World talks constantly about DevOps, CI/CI pipelines, automation - which great, but where to actually start? Especially when you\u0026rsquo;ve been writing PowerShell which is often used as automation language, but not actually as programming language?\nIn this video I\u0026rsquo;ll show you how to create a build pipeline for PowerShell module, from scratch. We will start from creating a project, creating new Git repository, pushing code to repository to finally create a pipeline which takes care of building the module, versioning it and finally publishing. And I\u0026rsquo;ll be writing all these steps in front of you.\nIf you\u0026rsquo;ve been writing PowerShell for some time and would like to get step closer to the DevOps world - this is great video for you! If on the other hand you\u0026rsquo;ve been using Azure Pipelines for other languages and need to quickly pick how to build PowerShell module, then later part of video might be useful, or even just open repo git below, and just look at the yml file in there.\nGit repository with all the files I\u0026rsquo;ve been writing and using during the video\nVideo where I go in more detail about using ModuleBuilder\nHow to create PowerShell module and manifest\n","permalink":"https://kamilpro.github.io/powershell-module-building-azure-devops/","summary":"The World talks constantly about DevOps, CI/CI pipelines, automation - which great, but where to actually start? Especially when you\u0026rsquo;ve been writing PowerShell which is often used as automation language, but not actually as programming language?\nIn this video I\u0026rsquo;ll show you how to create a build pipeline for PowerShell module, from scratch. We will start from creating a project, creating new Git repository, pushing code to repository to finally create a pipeline which takes care of building the module, versioning it and finally publishing.","title":"Building PowerShell module on Azure DevOps pipeline - step by step guide"},{"content":" My story on how I turned from Sysadmin to DevOps engineer, with PowerShell driving my journey!\nIt\u0026rsquo;s crazy to think that 5 years ago I couldn\u0026rsquo;t code, and one tweet simply started a snowball effect on my career.\nI wanted to document this moment in my life as I\u0026rsquo;ve passed Azure DevOps engineer exam and been working as DevOps engineer - something I wouldn\u0026rsquo;t even about thinking without PowerShell and its great community.\nJoin me in my story, and please share your own story - whether you\u0026rsquo;re just starting, or you are already there! There\u0026rsquo;s nothing better than listening to real life stories!\nThis Saturday I\u0026#39;ve passed Az-400 #Azure DevOps Engineer exam! And while passing any exam is an achievement on its own, this one marks a certain and important turning point in my #career. Here\u0026#39;s my story in a thread:\n\u0026mdash; Kamil Pro (@thekamilpro) April 10, 2022 ","permalink":"https://kamilpro.github.io/sysadmin-to-devops/","summary":"My story on how I turned from Sysadmin to DevOps engineer, with PowerShell driving my journey!\nIt\u0026rsquo;s crazy to think that 5 years ago I couldn\u0026rsquo;t code, and one tweet simply started a snowball effect on my career.\nI wanted to document this moment in my life as I\u0026rsquo;ve passed Azure DevOps engineer exam and been working as DevOps engineer - something I wouldn\u0026rsquo;t even about thinking without PowerShell and its great community.","title":"Sysadmin to DevOps - My PowerShell ignited story"},{"content":" Organising all files, scripts and functions required to build a module might give one a headache. PowerShell doesn\u0026rsquo;t come with native way of building the module, which doesn\u0026rsquo;t make our job easier.\nHence, we\u0026rsquo;re going to use ModuleBuilder from PowerShell community so that the way we organise the code is predictable and used widely across other PowerShell projects.\nIn this video I\u0026rsquo;ll walk you through the process of preparing, organising and finally building the module.\nSample Files\nModule Builder\n","permalink":"https://kamilpro.github.io/powershell-module-building/","summary":"Organising all files, scripts and functions required to build a module might give one a headache. PowerShell doesn\u0026rsquo;t come with native way of building the module, which doesn\u0026rsquo;t make our job easier.\nHence, we\u0026rsquo;re going to use ModuleBuilder from PowerShell community so that the way we organise the code is predictable and used widely across other PowerShell projects.\nIn this video I\u0026rsquo;ll walk you through the process of preparing, organising and finally building the module.","title":"Building PowerShell Module - how to organise your source files and build with ease"},{"content":" The more PowerShell code you write results in more and more scripts. Often you have multiple scripts managing one domain or application. What in situation when scripts start to use other scripts to work, creating so called dependency?\nPowerShell module is the answer - it\u0026rsquo;s the native way of bundling in multiple functions together as a single file. And the best comes with Module\u0026rsquo;s Manifest, a file that describes things like version of your module, requirements for it to run, author\u0026rsquo;s details etc.\nIn this video I\u0026rsquo;ll present to you how to convert scripts into a module and use manifest to add more information about your module.\n1 2 3 4 #cat.ps1 function Get-CatFact { Invoke-RestMethod https://catfact.ninja/fact } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 #mystuff.psd1 # # Module manifest for module \u0026#39;mystuff\u0026#39; # # Generated by: Kamil # # Generated on: 22/02/2022 # @{ # Script module or binary module file associated with this manifest. RootModule = \u0026#39;mystuff.psm1\u0026#39; # Version number of this module. ModuleVersion = \u0026#39;1.3.34\u0026#39; # Supported PSEditions # CompatiblePSEditions = @() # ID used to uniquely identify this module GUID = \u0026#39;583dda2e-b132-4929-8d89-a27f4d5cad7c\u0026#39; # Author of this module Author = \u0026#39;KamilKrzysztof\u0026#39; # Company or vendor of this module CompanyName = \u0026#39;Unknown\u0026#39; # Copyright statement for this module Copyright = \u0026#39;(c) KamilKrzysztof. All rights reserved.\u0026#39; # Description of the functionality provided by this module Description = \u0026#39;This bundles together my important functions\u0026#39; # Minimum version of the PowerShell engine required by this module PowerShellVersion = \u0026#39;5.1\u0026#39; # Name of the PowerShell host required by this module # PowerShellHostName = \u0026#39;\u0026#39; # Minimum version of the PowerShell host required by this module # PowerShellHostVersion = \u0026#39;\u0026#39; # Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only. # DotNetFrameworkVersion = \u0026#39;\u0026#39; # Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only. # ClrVersion = \u0026#39;\u0026#39; # Processor architecture (None, X86, Amd64) required by this module # ProcessorArchitecture = \u0026#39;\u0026#39; # Modules that must be imported into the global environment prior to importing this module RequiredModules = @(@{ModuleName = \u0026#34;Az.Storage\u0026#34;; ModuleVersion = \u0026#39;1.0.0\u0026#39;} ) # Assemblies that must be loaded prior to importing this module # RequiredAssemblies = @() # Script files (.ps1) that are run in the caller\u0026#39;s environment prior to importing this module. # ScriptsToProcess = @() # Type files (.ps1xml) to be loaded when importing this module # TypesToProcess = @() # Format files (.ps1xml) to be loaded when importing this module # FormatsToProcess = @() # Modules to import as nested modules of the module specified in RootModule/ModuleToProcess # NestedModules = @() # Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export. FunctionsToExport = @(\u0026#34;Get-CatFact\u0026#34;) # Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export. CmdletsToExport = @() # Variables to export from this module VariablesToExport = \u0026#39;*\u0026#39; # Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export. AliasesToExport = @() # DSC resources to export from this module # DscResourcesToExport = @() # List of all modules packaged with this module # ModuleList = @() # List of all files packaged with this module # FileList = @() # Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell. PrivateData = @{ PSData = @{ # Tags applied to this module. These help with module discovery in online galleries. Tags = @(\u0026#34;PSMODULE\u0026#34;) # A URL to the license for this module. # LicenseUri = \u0026#39;\u0026#39; # A URL to the main website for this project. # ProjectUri = \u0026#39;\u0026#39; # A URL to an icon representing this module. # IconUri = \u0026#39;\u0026#39; # ReleaseNotes of this module # ReleaseNotes = \u0026#39;\u0026#39; # Prerelease string of this module # Prerelease = \u0026#39;\u0026#39; # Flag to indicate whether the module requires explicit user acceptance for install/update/save # RequireLicenseAcceptance = $false # External dependent modules of this module # ExternalModuleDependencies = @() } # End of PSData hashtable } # End of PrivateData hashtable # HelpInfo URI of this module # HelpInfoURI = \u0026#39;\u0026#39; # Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix. DefaultCommandPrefix = \u0026#39;KP\u0026#39; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #mystuff.psm1 function Get-CatFact { Invoke-RestMethod https://catfact.ninja/fact Get-Quote } function Get-Quote { $quotes = Invoke-RestMethod https://type.fit/api/quotes $random = Get-Random -Minimum 0 -Maximum $quotes.Count return $quotes[$random] } function Get-Weather { Invoke-RestMethod https://wttr.in/ } 1 2 3 4 5 6 7 #quote.ps1 function Get-Quote { $quotes = Invoke-RestMethod https://type.fit/api/quotes $random = Get-Random -Minimum 0 -Maximum $quotes.Count return $quotes[$random] } 1 2 3 4 5 6 7 #weather.ps1 function Get-Weather { Invoke-RestMethod https://wttr.in/ } 1 2 3 4 5 #wrapper.ps1 . .\\cat.ps1 . .\\quote.ps1 . .\\weather.ps1 ","permalink":"https://kamilpro.github.io/powershell-module-manifest/","summary":"The more PowerShell code you write results in more and more scripts. Often you have multiple scripts managing one domain or application. What in situation when scripts start to use other scripts to work, creating so called dependency?\nPowerShell module is the answer - it\u0026rsquo;s the native way of bundling in multiple functions together as a single file. And the best comes with Module\u0026rsquo;s Manifest, a file that describes things like version of your module, requirements for it to run, author\u0026rsquo;s details etc.","title":"PowerShell Module and Manifest- create and configure your tools"},{"content":" Having properly configured parameters help your users to understand the use of your function. It also helps fellow developers to appreciate the intended use of the function. In addition, it gives you more control of how the code flows through your script.\nParameter attributes is what takes parameters to the next level - you can specify that certain parameters are mandatory, group them together so that only certain combination of parameters is meant to work together, we can even add pipeline support so that function can be used as any other built-in function.\nI will show you all the above with even more, as I always strive to go profoundly in PowerShell explanation!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # Sample script which asks user for basic information, then manipulates it and # display some information # There\u0026#39;s no way (at least easy) to pass these parameters from prompt, nor validate $Name = Read-Host -Prompt \u0026#34;What\u0026#39;s your name?\u0026#34; $Age = Read-Host -Prompt \u0026#34;What\u0026#39;s your age?\u0026#34; Write-Host \u0026#34;==================\u0026#34; $email = \u0026#39;{0}@company.com\u0026#39; -f $Name.ToLower() Write-Host \u0026#34;Hi $($Name.ToUpper())\u0026#34; Write-Host \u0026#34;your email address is: $email\u0026#34; if ($Age -gt 17) { Write-Host \u0026#34;You will be able to access any website\u0026#34; } else { Write-Host \u0026#34;We will turn on content blocker approriate to your age\u0026#34; } ```ps1 @{ users = @( @{ID = 1; FirstName = \u0026#34;John\u0026#34;; Surname = \u0026#34;Smith\u0026#34;; Active = $true; Region = \u0026#34;EU\u0026#34; } @{ID = 2; FirstName = \u0026#34;Elen\u0026#34;; Surname = \u0026#34;Smith\u0026#34;; Active = $true; Region = \u0026#34;NZ\u0026#34;} @{ID = 3; FirstName = \u0026#34;Andy\u0026#34;; Surname = \u0026#34;Oliver\u0026#34;; Active = $true; Region = \u0026#34;US\u0026#34; } @{ID = 4; FirstName = \u0026#34;Richard\u0026#34;; Surname = \u0026#34;Mann\u0026#34;; Active = $false; Region = \u0026#34;EU\u0026#34; } ) } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 function Get-Person { [cmdletbinding()] param ( #[Parameter(Mandatory)] [string]$Surname, [string]$Firstname, [Parameter(Mandatory)] [int]$Id, [switch]$All, [switch]$IncludeInactive, [string]$Region ) $items = [System.Collections.Generic.List[pscustomobject]]::new() $data = Import-PowerShellDataFile -Path \u0026#34;$PSScriptRoot\\data.psd1\u0026#34; $users = $data.users if (!($IncludeInactive.IsPresent)) { $users = $users | Where-Object {$_.Active -eq $true} } if ($PSBoundParameters.ContainsKey(\u0026#39;Region\u0026#39;)) { $users = $users | Where-Object {$_.Region -eq $Region} } foreach ($u in $users) { $items.Add([pscustomobject]$u) } if ($PSBoundParameters.ContainsKey(\u0026#39;All\u0026#39;)) { return $items } if ($PSBoundParameters.ContainsKey(\u0026#39;ID\u0026#39;)) { return $items.Where({$_.ID -eq $Id}) } if ($PSBoundParameters.ContainsKey(\u0026#39;Surname\u0026#39;)) { if ($PSBoundParameters.ContainsKey(\u0026#34;Firstname\u0026#34;)) { return $items.Where( { $_.Surname -eq $Surname -and $_.FirstName -eq $Firstname }) } else { return $items.Where( { $_.Surname -eq $Surname }) } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function Get-Person { [cmdletbinding(DefaultParameterSetName = \u0026#34;All\u0026#34;)] param ( [Parameter(Mandatory, ParameterSetName = \u0026#34;byName\u0026#34;)] [string]$Surname, [Parameter(ParameterSetName = \u0026#34;byName\u0026#34;)] [string]$Firstname, [Parameter(Mandatory, ParameterSetName = \u0026#34;byId\u0026#34;)] [int]$Id, [Parameter(ParameterSetName = \u0026#34;All\u0026#34;)] [switch]$All, [switch]$IncludeInactive, [string]$Region ) $items = [System.Collections.Generic.List[pscustomobject]]::new() $data = Import-PowerShellDataFile -Path \u0026#34;$PSScriptRoot\\data.psd1\u0026#34; $users = $data.users if (!($IncludeInactive.IsPresent)) { $users = $users | Where-Object {$_.Active -eq $true} } if ($PSBoundParameters.ContainsKey(\u0026#39;Region\u0026#39;)) { $users = $users | Where-Object {$_.Region -eq $Region} } foreach ($u in $users) { $items.Add([pscustomobject]$u) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;All\u0026#34;) { return $items } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byId\u0026#34;) { return $items.Where({$_.ID -eq $Id}) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byName\u0026#34;) { if ($PSBoundParameters.ContainsKey(\u0026#34;Firstname\u0026#34;)) { return $items.Where( { $_.Surname -eq $Surname -and $_.FirstName -eq $Firstname }) } else { return $items.Where( { $_.Surname -eq $Surname }) } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function Get-Person { [cmdletbinding(DefaultParameterSetName = \u0026#34;All\u0026#34;)] param ( [Parameter(Mandatory, ParameterSetName = \u0026#34;byName\u0026#34;, Position = 1)] [string]$Surname, [Parameter(ParameterSetName = \u0026#34;byName\u0026#34;, Position = 2)] [string]$Firstname, [Parameter(Mandatory, ParameterSetName = \u0026#34;byId\u0026#34;, Position = 1)] [int]$Id, [Parameter(ParameterSetName = \u0026#34;All\u0026#34;)] [switch]$All, [switch]$IncludeInactive, [string]$Region ) $items = [System.Collections.Generic.List[pscustomobject]]::new() $data = Import-PowerShellDataFile -Path \u0026#34;$PSScriptRoot\\data.psd1\u0026#34; $users = $data.users if (!($IncludeInactive.IsPresent)) { $users = $users | Where-Object {$_.Active -eq $true} } if ($PSBoundParameters.ContainsKey(\u0026#39;Region\u0026#39;)) { $users = $users | Where-Object {$_.Region -eq $Region} } foreach ($u in $users) { $items.Add([pscustomobject]$u) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;All\u0026#34;) { return $items } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byId\u0026#34;) { return $items.Where({$_.ID -eq $Id}) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byName\u0026#34;) { if ($PSBoundParameters.ContainsKey(\u0026#34;Firstname\u0026#34;)) { return $items.Where( { $_.Surname -eq $Surname -and $_.FirstName -eq $Firstname }) } else { return $items.Where( { $_.Surname -eq $Surname }) } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 function Get-Person { [cmdletbinding(DefaultParameterSetName = \u0026#34;All\u0026#34;)] param ( [Parameter(Mandatory, ParameterSetName = \u0026#34;byName\u0026#34;, Position = 1, ValueFromPipeline)] [string]$Surname, [Parameter(ParameterSetName = \u0026#34;byName\u0026#34;, Position = 2)] [string]$Firstname, [Parameter(Mandatory, ParameterSetName = \u0026#34;byId\u0026#34;, Position = 1, ValueFromPipeline)] [int]$Id, [Parameter(ParameterSetName = \u0026#34;All\u0026#34;)] [switch]$All, [switch]$IncludeInactive, [string]$Region ) $items = [System.Collections.Generic.List[pscustomobject]]::new() $data = Import-PowerShellDataFile -Path \u0026#34;$PSScriptRoot\\data.psd1\u0026#34; $users = $data.users if (!($IncludeInactive.IsPresent)) { $users = $users | Where-Object {$_.Active -eq $true} } if ($PSBoundParameters.ContainsKey(\u0026#39;Region\u0026#39;)) { $users = $users | Where-Object {$_.Region -eq $Region} } foreach ($u in $users) { $items.Add([pscustomobject]$u) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;All\u0026#34;) { return $items } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byId\u0026#34;) { return $items.Where({$_.ID -eq $Id}) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byName\u0026#34;) { if ($PSBoundParameters.ContainsKey(\u0026#34;Firstname\u0026#34;)) { return $items.Where( { $_.Surname -eq $Surname -and $_.FirstName -eq $Firstname }) } else { return $items.Where( { $_.Surname -eq $Surname }) } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 function Get-Person { [cmdletbinding(DefaultParameterSetName = \u0026#34;All\u0026#34;)] param ( [Parameter(Mandatory, ParameterSetName = \u0026#34;byName\u0026#34;, Position = 1, ValueFromPipeline)] [string]$Surname, [Parameter(ParameterSetName = \u0026#34;byName\u0026#34;, Position = 2)] [ValidateNotNullOrEmpty()] [string]$Firstname, [Parameter(Mandatory, ParameterSetName = \u0026#34;byId\u0026#34;, Position = 1, ValueFromPipeline)] [ValidateRange(1,4)] [int]$Id, [Parameter(ParameterSetName = \u0026#34;All\u0026#34;)] [switch]$All, [switch]$IncludeInactive, [ValidateSet(\u0026#34;EU\u0026#34;, \u0026#34;US\u0026#34;, \u0026#34;NZ\u0026#34;)] [string]$Region ) $items = [System.Collections.Generic.List[pscustomobject]]::new() $data = Import-PowerShellDataFile -Path \u0026#34;$PSScriptRoot\\data.psd1\u0026#34; $users = $data.users if (!($IncludeInactive.IsPresent)) { $users = $users | Where-Object {$_.Active -eq $true} } if ($PSBoundParameters.ContainsKey(\u0026#39;Region\u0026#39;)) { $users = $users | Where-Object {$_.Region -eq $Region} } foreach ($u in $users) { $items.Add([pscustomobject]$u) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;All\u0026#34;) { return $items } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byId\u0026#34;) { return $items.Where({$_.ID -eq $Id}) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byName\u0026#34;) { if ($PSBoundParameters.ContainsKey(\u0026#34;Firstname\u0026#34;)) { return $items.Where( { $_.Surname -eq $Surname -and $_.FirstName -eq $Firstname }) } else { return $items.Where( { $_.Surname -eq $Surname }) } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 function Get-Person { [cmdletbinding(DefaultParameterSetName = \u0026#34;All\u0026#34;)] param ( [Parameter(Mandatory, ParameterSetName = \u0026#34;byName\u0026#34;, Position = 1, ValueFromPipeline)] [Alias(\u0026#34;SecondName\u0026#34;)] [string]$Surname, [Parameter(ParameterSetName = \u0026#34;byName\u0026#34;, Position = 2)] [ValidateNotNullOrEmpty()] [Alias(\u0026#34;GivenName\u0026#34;)] [string]$Firstname, [Parameter(Mandatory, ParameterSetName = \u0026#34;byId\u0026#34;, Position = 1, ValueFromPipeline)] [ValidateRange(1,4)] [int]$Id, [Parameter(ParameterSetName = \u0026#34;All\u0026#34;)] [switch]$All, [switch]$IncludeInactive, [ValidateSet(\u0026#34;EU\u0026#34;, \u0026#34;US\u0026#34;, \u0026#34;NZ\u0026#34;)] [string]$Region ) $items = [System.Collections.Generic.List[pscustomobject]]::new() $data = Import-PowerShellDataFile -Path \u0026#34;$PSScriptRoot\\data.psd1\u0026#34; $users = $data.users if (!($IncludeInactive.IsPresent)) { $users = $users | Where-Object {$_.Active -eq $true} } if ($PSBoundParameters.ContainsKey(\u0026#39;Region\u0026#39;)) { $users = $users | Where-Object {$_.Region -eq $Region} } foreach ($u in $users) { $items.Add([pscustomobject]$u) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;All\u0026#34;) { return $items } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byId\u0026#34;) { return $items.Where({$_.ID -eq $Id}) } if ($PSCmdlet.ParameterSetName -eq \u0026#34;byName\u0026#34;) { if ($PSBoundParameters.ContainsKey(\u0026#34;Firstname\u0026#34;)) { return $items.Where( { $_.Surname -eq $Surname -and $_.FirstName -eq $Firstname }) } else { return $items.Where( { $_.Surname -eq $Surname }) } } } ","permalink":"https://kamilpro.github.io/powershell-parameter/","summary":"Having properly configured parameters help your users to understand the use of your function. It also helps fellow developers to appreciate the intended use of the function. In addition, it gives you more control of how the code flows through your script.\nParameter attributes is what takes parameters to the next level - you can specify that certain parameters are mandatory, group them together so that only certain combination of parameters is meant to work together, we can even add pipeline support so that function can be used as any other built-in function.","title":"PowerShell Parameter Attributes - validate, group, require params and add pipeline to your function"},{"content":" So you\u0026rsquo;ve been writing your scripts for some time and wondering how to make them more PowerShell-like, so that they can be invoked from the console like all the other cmdlets?\nIn this quick video I\u0026rsquo;ll show you how to convert a sample script into function, add parameters and indicated to your user how to use your function with mandatory parameters and types.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Sample script which asks user for basic information, then manipulates it and # display some information # There\u0026#39;s no way (at least easy) to pass these parameters from prompt, nor validate $Name = Read-Host -Prompt \u0026#34;What\u0026#39;s your name?\u0026#34; $Age = Read-Host -Prompt \u0026#34;What\u0026#39;s your age?\u0026#34; Write-Host \u0026#34;==================\u0026#34; $email = \u0026#39;{0}@company.com\u0026#39; -f $Name.ToLower() Write-Host \u0026#34;Hi $($Name.ToUpper())\u0026#34; Write-Host \u0026#34;your email address is: $email\u0026#34; if ($Age -gt 17) { Write-Host \u0026#34;You will be able to access any website\u0026#34; } else { Write-Host \u0026#34;We will turn on content blocker approriate to your age\u0026#34; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # In this step we formalised parameters, but user must explicitly provide them param ( $Name, $Age ) Write-Host \u0026#34;==================\u0026#34; $email = \u0026#39;{0}@company.com\u0026#39; -f $Name.ToLower() Write-Host \u0026#34;Hi $($Name.ToUpper())\u0026#34; Write-Host \u0026#34;your email address is: $email\u0026#34; if ($Age -gt 17) { Write-Host \u0026#34;You will be able to access any website\u0026#34; } else { Write-Host \u0026#34;We will turn on content blocker approriate to your age\u0026#34; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # In this case user can either pass parameters, or will be prompted as they are mandatory # type is specified, therefore $Age only accepts integers param ( [Parameter(Mandatory)] [string]$Name, [Parameter(Mandatory)] [int]$Age ) Write-Host \u0026#34;==================\u0026#34; $email = \u0026#39;{0}@company.com\u0026#39; -f $Name.ToLower() Write-Host \u0026#34;Hi $($Name.ToUpper())\u0026#34; Write-Host \u0026#34;your email address is: $email\u0026#34; if ($Age -gt 17) { Write-Host \u0026#34;You will be able to access any website\u0026#34; } else { Write-Host \u0026#34;We will turn on content blocker approriate to your age\u0026#34; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # Now we converted script into function, it must be first loaded to memory before it # can be executed. function Get-Person { param ( [Parameter(Mandatory)] [string]$Name, [Parameter(Mandatory)] [int]$Age ) Write-Host \u0026#34;==================\u0026#34; $email = \u0026#39;{0}@company.com\u0026#39; -f $Name.ToLower() Write-Host \u0026#34;Hi $($Name.ToUpper())\u0026#34; Write-Host \u0026#34;your email address is: $email\u0026#34; if ($Age -gt 17) { Write-Host \u0026#34;You will be able to access any website\u0026#34; } else { Write-Host \u0026#34;We will turn on content blocker approriate to your age\u0026#34; } } ","permalink":"https://kamilpro.github.io/powershell-function/","summary":"So you\u0026rsquo;ve been writing your scripts for some time and wondering how to make them more PowerShell-like, so that they can be invoked from the console like all the other cmdlets?\nIn this quick video I\u0026rsquo;ll show you how to convert a sample script into function, add parameters and indicated to your user how to use your function with mandatory parameters and types.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Sample script which asks user for basic information, then manipulates it and # display some information # There\u0026#39;s no way (at least easy) to pass these parameters from prompt, nor validate $Name = Read-Host -Prompt \u0026#34;What\u0026#39;s your name?","title":"PowerShell function - converting script into function with parameters"},{"content":" Everything is an object in PowerShell, and ability to create own object allows for one more way of controlling and handling data.\nIn this video I\u0026rsquo;ll take you through the steps of creating PSCustomObject, working with its properties to doing more advanced topics - like adding methods and types to the object.\nu0026lt;#PSScriptInfo .VERSION 1.0.0 .GUID f5228c81-d25c-4984-bb0c-e64576487b3e .AUTHOR Kamil Procyszyn .COPYRIGHT Kamil Procyszyn .PROJECTURI https://github.com/kprocyszyn/About-PowerShell .RELEASENOTES 2021 November .DESCRIPTION Link to the video: https://youtu.be/DAVGyCytsqM #\u0026gt; \u0026lt;# About PsCustomObject: https://forums.powershell.org/t/what-is-the-difference-between-pscustomobject-and-psobject/3887/4 [PSCustomObject] is a type accelerator. It constructs a PSObject, but does so in a way that results in hash table keys becoming properties. PSCustomObject isn’t an object type per se - it’s a process shortcut. The docs are relatively clear about it (https://msdn.microsoft.com/en-us/library/system.management.automation.pscustomobject(v=vs.85).aspx) PSCustomObject is a placeholder that’s used when PSObject is called with no constructor parameters. #\u0026gt; # Creating custom object: $obj = [PSCustomObject]@{ Name = \u0026#34;Mr Fiber\u0026#34; Species = \u0026#34;Domestic cat\u0026#34; Type = \u0026#34;Tabby cat\u0026#34; } $obj $obj.Name # Saving to a file (JSON): # We could save CSV, however CSV doesn\u0026#39;t support nested properties, thus why JSON is preferable $Path = \u0026#34;$env:TEMP\\pstojson.json\u0026#34; $obj | ConvertTo-Json -Depth 99 | Set-Content -Path $path $imported = Get-Content -Path $Path $imported $imported | ConvertFrom-Json ############## # PROPERTIES # ############## # Accessing properties $obj.Species # Dynamically accessing properties $prop = \u0026#39;Type\u0026#39; $obj.$prop # Adding property $obj | Add-Member -MemberType NoteProperty -Name \u0026#39;Favourite Snack\u0026#39; -Value \u0026#39;Dental treats\u0026#39; $obj.\u0026#39;Favourite Snack\u0026#39; # Removing properties $obj.psobject.Properties.Remove(\u0026#39;Favourite Snack\u0026#39;) $obj.\u0026#39;Favourite Snack\u0026#39; # Listing properteis $obj.psobject.properties.name $obj | Get-Member -MemberType NoteProperty | Select-Object -ExpandProperty Name ############# # Hashtable # ############# # Converting hashtable to psobject: $ht = @{ Name = \u0026#34;Mr Fiber\u0026#34; Species = \u0026#34;Domestic cat\u0026#34; Type = \u0026#34;Tabby cat\u0026#34; } $ht $htobj = [pscustomobject]$ht $htobj # Converting psobject to hashtable $newHt = @{} foreach ($property in $htobj.psobject.Properties.name) { $newHt[$property] = $htobj.$property } $newHt ########### # Methods # ########### # We can actually have some action! $method = { \u0026#34;Hi, my name is $($this.name) and I like to sleep.\u0026#34; } $params = @{ MemberType = \u0026#34;ScriptMethod\u0026#34; Name = \u0026#34;SayHi\u0026#34; Value = $method } $obj | Add-Member @params $obj.SayHi() # How about, converting Object to Hashtable, as the actual method? $params = @{ MemberType = \u0026#34;ScriptMethod\u0026#34; Name = \u0026#34;OutHashtable\u0026#34; Value = { $hash = @{} $this.psobject.properties.name.foreach({ $hash[$_] = $this.$_ }) return $hash } } $obj | Add-Member @params $obj.OutHashtable() ######### # Types # ######### $obj | Get-Member # now it is PSCustomObject, duh $obj.psobject.TypeNames # this looks familiar $obj.psobject.TypeNames.Insert(0, \u0026#34;Kp.CatsAreAwesome\u0026#34;) $obj | Get-Member function Invoke-CAA { param ( # We only accept parameter of type Kp.CatsAreAwesome [PSTypeName(\u0026#39;Kp.CatsAreAwesome\u0026#39;)] [Parameter(ValueFromPipeline)] $Cat ) # If $Cat has been passed, we call method SayHi(), otherwise we just say that cats are awesome (generally) if ($PSBoundParameters.ContainsKey(\u0026#39;Cat\u0026#39;)) { \u0026#34;Here\u0026#39;s an awesome cat:\u0026#34; return $Cat.SayHi() } else { \u0026#34;Cats are awesome!\u0026#34; } } Invoke-CAA Invoke-Caa -Cat $obj Invoke-Caa -Cat \u0026#34;BLA\u0026#34; # We can also specify type name at creation $obj2 = [pscustomobject]@{ PSTypeName = \u0026#39;Kp.CatsAreAwesome\u0026#39; Name = \u0026#39;Whiskers\u0026#39; Species = \u0026#34;Domestic cat\u0026#34; Type = \u0026#34;Persian\u0026#34; } $method = { \u0026#34;Hi, my name is $($this.name) and I like to sleep.\u0026#34; } $params = @{ MemberType = \u0026#34;ScriptMethod\u0026#34; Name = \u0026#34;SayHi\u0026#34; Value = $method } $obj2 | Add-Member @params $obj2 | Invoke-CAA # Specify default output Update-TypeData -TypeName kp.CatsAreAwesome -DefaultDisplayPropertySet Name,Type $obj # list is now limited to only Name and Type properties $obj2 $obj | Format-List -Property * #displays all # Let\u0026#39;s see arrays and pscustomobjects working together $list = [System.Collections.Generic.List[pscustomobject]]::new() $locations = @(\u0026#34;London\u0026#34;, \u0026#34;Sligo\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Paphos\u0026#34;, \u0026#34;Ubud\u0026#34;, \u0026#34;Valdemosa\u0026#34;) $baseUri = \u0026#34;wttr.in/\u0026#34; foreach ($location in $locations) { \u0026#34;Currently retrieving weather for: $location\u0026#34; $Uri = \u0026#34;{0}{1}?format=j1\u0026#34; -f $baseUri, $location $Uri $data = Invoke-RestMethod $Uri $result = [pscustomobject]@{ City = $Location Temperature = $data.current_condition.temp_C Pressure = $data.current_condition.pressure } $list.Add($result) } $list ","permalink":"https://kamilpro.github.io/powershell-pscustomobject/","summary":"Everything is an object in PowerShell, and ability to create own object allows for one more way of controlling and handling data.\nIn this video I\u0026rsquo;ll take you through the steps of creating PSCustomObject, working with its properties to doing more advanced topics - like adding methods and types to the object.\nu0026lt;#PSScriptInfo .","title":"PowerShell PSCustomObject - Custom Object, the way it was meant to be"},{"content":" Quick crash course into using hash tables in PowerShell.\nu0026lt;#PSScriptInfo .VERSION 1.0.0 .GUID 50fa84c4-080d-45cd-82a8-9e8dba10b187 .AUTHOR Kamil Procyszyn .COPYRIGHT Kamil Procyszyn .PROJECTURI https://github.com/kprocyszyn/About-PowerShell .RELEASENOTES 2021 September .DESCRIPTION Link to the video: https://youtu.be/oti2l8EmAT8 Documentation: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_hash_tables?view=powershell-7.1#:~:text=In%20PowerShell%2C%20each%20hash%20table%20is%20a%20Hashtable,to%20create%20an%20ordered%20dictionary%20%28System.Collections.Specialized.OrderedDictionary%29%20in%20PowerShell. #\u0026gt; \u0026lt;# About hashtable: A hash table, also known as a dictionary or associative array, is a compact data structure that stores one or more key/value pairs. For example, a hash table might contain a series of IP addresses and computer names, where the IP addresses are the keys and the computer names are the values, or vice versa. #\u0026gt; #Creating a hashtable $hash = @{} ############################# # Adding items to hashtable # ############################# $hash.Add(\u0026#34;Person\u0026#34;, \u0026#34;John\u0026#34;) $hash.Add(\u0026#34;Email\u0026#34;, \u0026#34;John@john.com\u0026#34;) $hash.Add(\u0026#34;Pet\u0026#34;, \u0026#34;Cat\u0026#34;) $hash.Add(\u0026#34;Surname\u0026#34;, \u0026#34;Smith\u0026#34;) $hash # Removing Key from hashtable $hash.Remove(\u0026#34;Surname\u0026#34;) $hash # Prepopulating hashtable $details = @{ Person = \u0026#34;Mike\u0026#34; Email = \u0026#34;Mike@Mike.com\u0026#34; Pet = \u0026#34;Dog\u0026#34; } $details # Adding key that already exists throws $details.Add(\u0026#34;Pet\u0026#34;, \u0026#34;Snake\u0026#34;) ################### # Accessing items # ################### # Accessing with property name $details[\u0026#39;Pet\u0026#39;] $details.Pet # We can use variable $property = \u0026#34;Email\u0026#34; $details[$property] # Accessing multiple properties $details[\u0026#34;Email\u0026#34;, \u0026#34;Person\u0026#34;] # Non existent value doesn\u0026#39;t throw $details[\u0026#39;Surname\u0026#39;] $details.Surname # Although we can check for true/false [bool]$details[\u0026#39;Surname\u0026#39;] ################### # Updating values # ################### # We can update and add new values $details[\u0026#39;Pet\u0026#39;] = \u0026#34;Snake\u0026#34; $details[\u0026#39;Drink\u0026#39;] = \u0026#34;Flat white\u0026#34; $details $details.pet = \u0026#34;Dog\u0026#34; $details.Food = \u0026#34;Lamb Shish Kebab\u0026#34; $details ########### # Looping # ########### # using foreach foreach ($key in $details.Keys) { \u0026#34;{0} is {1}\u0026#34; -f $key, $details[$key] } # piping to foreach-object $details.Keys | ForEach-Object { \u0026#34;{0} is {1}\u0026#34; -f $_, $details[$_] } # GetEnumerator() allows us to work with properties $details.GetEnumerator() | ForEach-Object { \u0026#34;{0} is {1}\u0026#34; -f $_.Key, $_.Value } # Values can\u0026#39;t be updated while enumarated! foreach ($key in $details.Keys) { $details[$key] = \u0026#39;BLAH\u0026#39; } # Keys must be cloned before updating $details.Keys.Clone() | ForEach-Object { $details[$_] = \u0026#34;SANITISED\u0026#34; } $details ###### # IF # ###### # checking if hashtable exists if ($details) {\u0026#34;It\u0026#39;s there\u0026#34;} $empty = @{} if ($empty) {\u0026#34;It\u0026#39;s empty, but it\u0026#39;s there!\u0026#34;} # Checking if key exists if ($details.Person) {\u0026#34;There\u0026#39;s some info about a person\u0026#34;} # Deailing with false $details.Add(\u0026#34;Empty\u0026#34;, \u0026#34;\u0026#34;) $details.Add(\u0026#34;Null\u0026#34;, $Null) $details.Add(\u0026#34;False\u0026#34;, $false) $details if ($details.Empty) {\u0026#34;It\u0026#39;s there\u0026#34;} if ($details.Null) {\u0026#34;It\u0026#39;s there\u0026#34;} if ($details.False) {\u0026#34;It\u0026#39;s there\u0026#34;} if ($details.ContainsKey(\u0026#39;Null\u0026#39;)) {\u0026#34;It\u0026#39;s null!\u0026#34;} ###################### # Custom expressions # ###################### $employee = @{ Name = \u0026#34;Beth\u0026#34; HourlyWage = 10 HoursWorked = 7.5 } $employee | Select-Object -Property *,@{N = \u0026#34;Wage\u0026#34;; E = {$_.HourlyWage * $_.HoursWorked } } ############# # Splatting # ############# Invoke-RestMethod -Uri catfact.ninja/facts -Method Get | Select-Object Data -ExpandProperty Data $params = @{ Uri = \u0026#34;catfact.ninja/facts\u0026#34; Method = \u0026#34;Get\u0026#34; } Invoke-RestMethod @params | Select-Object Data -ExpandProperty Data # Adding parameters $Verbose = $true if ($Verbose) { $params[\u0026#39;Verbose\u0026#39;] = $true } Invoke-RestMethod @params ##################### # Nested hashtables # ##################### $Environments = @{ Development = @{ Server = \u0026#34;Server1\u0026#34; Admin = \u0026#34;Rachel Green\u0026#34; Credentials = @{ Username = \u0026#34;Serv1\u0026#34; Password = \u0026#34;Secret\u0026#34; } } Test = @{ Server = \u0026#34;Server2\u0026#34; Admin = \u0026#34;Joe Triviani\u0026#34; Credentials = @{ Username = \u0026#34;Serv2\u0026#34; Password = \u0026#34;Letmein\u0026#34; } } } # Accessing nested properties $Environments $Environments.Keys $Environments.Values $Environments.Test $Environments.Test.Credentials $Environments[\u0026#39;Test\u0026#39;][\u0026#39;Credentials\u0026#39;] # Updating nested properties $Environments.Test.Credentials.Username = \u0026#34;admin\u0026#34; $Environments.Test.Credentials # Quickly unwrapping all properties $Environments | ConvertTo-Json -Depth 99 # Adding nested properties $Environments[\u0026#39;Production\u0026#39;] = @{} $Environments.Production.Server = \u0026#34;Server3\u0026#34; $Environments.Production.Admin = \u0026#34;Ross Geller\u0026#34; $Environments.Production[\u0026#39;Credentials\u0026#39;] = @{} $Environments.Production.Credentials.Username = \u0026#34;Serv3\u0026#34; $Environments.Production.Credentials.Password = \u0026#34;Nosuchplace\u0026#34; ##################### # Working with JSON # ##################### $Environments | ConvertTo-Json | Out-File C:\\temp\\envs.json Get-Content C:\\Temp\\envs.json | ConvertFrom-Json #This will create pscustomobject ################## # PSCustomObject # ################## # Creating a new object $EnvironmentsObject = [pscustomobject]@{ Development = @{ Server = \u0026#34;Server1\u0026#34; Admin = \u0026#34;Rachel Green\u0026#34; Credentials = @{ Username = \u0026#34;Serv1\u0026#34; Password = \u0026#34;Secret\u0026#34; } } Test = @{ Server = \u0026#34;Server2\u0026#34; Admin = \u0026#34;Joe Triviani\u0026#34; Credentials = @{ Username = \u0026#34;Serv2\u0026#34; Password = \u0026#34;Letmein\u0026#34; } } } # Casting hashtable to object [PSCustomObject]$Environments ","permalink":"https://kamilpro.github.io/powershell-hash-table/","summary":"Quick crash course into using hash tables in PowerShell.\nu0026lt;#PSScriptInfo .","title":"PowerShell Hash Table - Storing key value pairs"},{"content":" Array is a basic data structure that allows to store multiple items in one variable. In this short video, I\u0026rsquo;ll show you how to create a basic array, populate it with items, how to add, access and modify items within array.\nIn addition, I\u0026rsquo;ll present to you how to use ArrayList - which is much more flexible array, especially for adding more items.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 # Link to the video: https://youtu.be/rvGd8kxXlVc # What is an array and why do I need it? \u0026lt;# Array is data structure that allows to collect multiple items under one collection so that these items can be accessed individually, iterated over or even changed. In other words, arrays allow us to stash bunch of values under one variable, and work with it. #\u0026gt; # How to create an empty array $stuff = @() $stuff \u0026#34;I\u0026#39;ve got lot\u0026#39;s of stuff: $($stuff.Count)\u0026#34; # Create an array with some stuff $stuff = @(\u0026#34;Fork\u0026#34;, \u0026#34;Knife\u0026#34;, \u0026#34;Salt\u0026#34;) $stuff \u0026#34;Now really, I\u0026#39;ve got lot\u0026#39;s of stuff: $($stuff.Count)\u0026#34; # Comma separating also works for creating an array $stuff = \u0026#34;Table\u0026#34;, \u0026#34;Cup\u0026#34;, \u0026#34;Coffe\u0026#34;, \u0026#34;Milk\u0026#34; $stuff ############################### # Accessing items in an array # ############################### #Arrays are 0 based indexed $stuff[0] $stuff[2] $stuff[-1] $stuff[2,1,2,0] $stuff[0..2] $stuff[2..0] # Accessing items outside of an array is silent $stuff[20] [bool]$stuff[20] # Mixing different types in array $mix = @(\u0026#34;Hi\u0026#34;, 74, (Get-Date), \u0026#34;Bye\u0026#34;) $mix # More often, we can store projects $people = @( [pscustomobject]@{Name = \u0026#34;John\u0026#34;; Email = \u0026#34;john@john.com\u0026#34;} [pscustomobject]@{Name = \u0026#34;Tony\u0026#34;; Email = \u0026#34;tony@tony.com\u0026#34;} [pscustomobject]@{Name = \u0026#34;Fiber\u0026#34;; Email = \u0026#34;fiber@optics.com\u0026#34;} ) $people $people[-1] $people.Email $people | Where-Object {$_.Name -eq \u0026#34;John\u0026#34;} $people.Where({$_.Name -eq \u0026#34;John\u0026#34;}).Email # Null will throw an error $IDidntCreateThis[3] ########### # Looping # ########### $domains = @(\u0026#39;bbc.com\u0026#39;, \u0026#39;github.com\u0026#39;, \u0026#39;youtube.com\u0026#39;, \u0026#39;blah.blah\u0026#39;) $ProgressPreference = \u0026#39;SilentlyContinue\u0026#39; foreach ($domain in $domains) { $Result = Test-NetConnection -ComputerName $domain -InformationLevel Quiet \u0026#34;$domain is pinging: $Result\u0026#34; } $domains | ForEach-Object { $Result = Test-NetConnection -ComputerName $_ -InformationLevel Quiet \u0026#34;$_ is pinging: $Result\u0026#34; } $domains.ForEach{ $Result = Test-NetConnection -ComputerName $_ -InformationLevel Quiet \u0026#34;$_ is pinging: $Result\u0026#34;} for ($i = 0; $i -lt $domains.Count; $i++) { $Result = Test-NetConnection -ComputerName $domains[$i] -InformationLevel Quiet \u0026#34;$($domains[$i]) is pinging: $Result\u0026#34; } ################### # Updating values # ################### $Week = @(\u0026#34;Monday\u0026#34;, \u0026#34;Tuesday\u0026#34;, \u0026#34;Wednesday\u0026#34;, \u0026#34;Thursday\u0026#34;, \u0026#34;Friday\u0026#34;, \u0026#34;Saturday\u0026#34;, \u0026#34;Sunday\u0026#34;) $Week[2] #Now it is Wednesday $Week[2] = \u0026#34;Boo\u0026#34; $Week[2] $Week # Update out of index throws error $Week[8] = \u0026#34;Hi\u0026#34; ############# # Operators # ############# # Join $Week $Week -join \u0026#34;|\u0026#34; $Week -join $null # In \u0026#34;Tuesday\u0026#34; -in $Week # Match $Week -match \u0026#34;es\u0026#34; ################### # Adding to array # ################### # Arrays have by definition fixed size in memory, in other words # you shouldn\u0026#39;t be able to add more items to it. # PowerShell however allows you to do that, hiding all complexity # by creating a new array, copying all existing item, adding new one # and finally removing old array. # If you plan to add items to your array, look at ArrayList and List below # Adding elements to array $Week $Week.Add(\u0026#34;January\u0026#34;) #this throws an error $Week += \u0026#34;January\u0026#34; $Week # Adding arrays together $ArrayA = 1..10 $ArrayB = 11..20 $ArrayA + $ArrayB ############# # ArrayList # ############# #Adding items to ArrayList $alist = [System.Collections.ArrayList]::new() #This is .Net framework $alist.Add(\u0026#34;January\u0026#34;) [void]$alist.Add(\u0026#34;February\u0026#34;) #Void stops prevents writing to console $alist # Removing from ArrayList $alist.Remove($alist[1]) $alist ","permalink":"https://kamilpro.github.io/powershell-array-and-arraylist/","summary":"Array is a basic data structure that allows to store multiple items in one variable. In this short video, I\u0026rsquo;ll show you how to create a basic array, populate it with items, how to add, access and modify items within array.\nIn addition, I\u0026rsquo;ll present to you how to use ArrayList - which is much more flexible array, especially for adding more items.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 # Link to the video: https://youtu.","title":"PowerShell Array and ArrayList - storing multiple items as a one variable"},{"content":" One switch statement can replace multiple if/else statements, it makes code more readable and is really easy to use - there\u0026rsquo;s no reason why you shouldn\u0026rsquo;t give it a try!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 # Link to the video: https://youtu.be/EqJ0lBO1rM4 # Documentation: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_switch?view=powershell-7.1 # Basic version \u0026lt;# switch ( test-value ) { condition {do-stuff} another condition {do-stuff} } #\u0026gt; # This will print out Green switch (2) { 0 { \u0026#34;Blue\u0026#34; } 1 { \u0026#34;Yellow\u0026#34;} 2 { \u0026#34;Green\u0026#34;} 3 { \u0026#34;Red\u0026#34;} } # Work with variable $number = 1 switch ($number) { 0 { \u0026#34;Blue\u0026#34; } 1 { \u0026#34;Yellow\u0026#34;} 2 { \u0026#34;Green\u0026#34;} 3 { \u0026#34;Red\u0026#34;} } # Assign variables within scriptblock $number = 3 switch ($number) { 0 { $result = \u0026#34;Blue\u0026#34; } 1 { $result = \u0026#34;Yellow\u0026#34;} 2 { $result = \u0026#34;Green\u0026#34;} 3 { $result = \u0026#34;Red\u0026#34;} } Write-Host \u0026#34;The result is: $result\u0026#34; -ForegroundColor $result # We can also assign statement to variable $number = 0 $result = switch ($number) { 0 { \u0026#34;Blue\u0026#34; } 1 { \u0026#34;Yellow\u0026#34;} 2 { \u0026#34;Green\u0026#34;} 3 { \u0026#34;Red\u0026#34;} } Write-Host \u0026#34;The result is: $result\u0026#34; -ForegroundColor $result # Use default in case there\u0026#39;s no match $number = 8 $result = switch ($number) { 0 { \u0026#34;Blue\u0026#34; } 1 { \u0026#34;Yellow\u0026#34;} 2 { \u0026#34;Green\u0026#34;} 3 { \u0026#34;Red\u0026#34;} default { Write-Warning \u0026#34;Unknown value, defaulting to White\u0026#34; \u0026#34;White\u0026#34; } } Write-Host \u0026#34;The result is: $result\u0026#34; -ForegroundColor $result # Strings can also be matched # This also shows working on expression switch ( (Get-Host).Name ) { \u0026#34;Visual Studio Code Host\u0026#34; { \u0026#34;You are using VS CODE\u0026#34; } \u0026#34;ConsoleHost\u0026#34; { \u0026#34;You are using Console!\u0026#34; } default {\u0026#34;Unknown host $_\u0026#34;} } # Arrays! $employees = @(\u0026#34;Developer\u0026#34;, \u0026#34;Project Manager\u0026#34;, \u0026#34;DevOps Engineer\u0026#34;, \u0026#34;Developer\u0026#34;, \u0026#34;Sysadmin\u0026#34;) switch ($employees) { \u0026#34;Developer\u0026#34; {\u0026#34;We need a Developer!\u0026#34;} \u0026#34;Project Manager\u0026#34; {\u0026#34;We need Project Manager\u0026#34;} \u0026#34;DevOps Engineer\u0026#34; {\u0026#34;We need DevOps Engineer\u0026#34;} \u0026#34;Sysadmin\u0026#34; {\u0026#34;We need Sysadmin\u0026#34;} } # Using script block, when comparing value $age = 25 switch ($age) { {$_ -ge 18} { \u0026#34;It\u0026#39;s an adult\u0026#34; } {$_ -lt 18} { \u0026#34;It\u0026#39;s not an adult\u0026#34; } } # PowerShell will match multiple times switch (\u0026#34;something\u0026#34;) { \u0026#34;something\u0026#34; {\u0026#34;This is lower case\u0026#34;} \u0026#34;SOMETHING\u0026#34; {\u0026#34;This is upper case\u0026#34;} \u0026#34;SomeTHinG\u0026#34; {\u0026#34;This is mixed\u0026#34;} } # Stop execution with break switch (\u0026#34;something\u0026#34;) { \u0026#34;something\u0026#34; {\u0026#34;This is lower case\u0026#34;} \u0026#34;SOMETHING\u0026#34; {\u0026#34;This is upper case\u0026#34; break} \u0026#34;SomeTHinG\u0026#34; {\u0026#34;This is mixed\u0026#34;} } # Make test case sensitive switch -CaseSensitive (\u0026#34;something\u0026#34;) { \u0026#34;something\u0026#34; {\u0026#34;This is lower case\u0026#34;} \u0026#34;SOMETHING\u0026#34; {\u0026#34;This is upper case\u0026#34;; break;} \u0026#34;SomeTHinG\u0026#34; {\u0026#34;This is mixed\u0026#34;} } # Enable wildcard switch -Wildcard (\u0026#34;Kamil\u0026#34;) { \u0026#34;*Anna*\u0026#34; {\u0026#34;There\u0026#39;s notification for Anna\u0026#34;} \u0026#34;*John*\u0026#34; {\u0026#34;There\u0026#39;s notification for John\u0026#34;} \u0026#34;*Kamil*\u0026#34; {\u0026#34;There\u0026#39;s notification for Kamil\u0026#34;} default {\u0026#34;Unknown\u0026#34;} } # Enable Regex switch -Regex (\u0026#34;Kamil\u0026#34;) { \u0026#34;^Anna\u0026#34; {\u0026#34;There\u0026#39;s notification for Anna\u0026#34;} \u0026#34;^John\u0026#34; {\u0026#34;There\u0026#39;s notification for John\u0026#34;} \u0026#34;^Kamil\u0026#34; {\u0026#34;There\u0026#39;s notification for Kamil\u0026#34;} default {\u0026#34;Unknown\u0026#34;} } ","permalink":"https://kamilpro.github.io/powershell-switch-statement/","summary":"One switch statement can replace multiple if/else statements, it makes code more readable and is really easy to use - there\u0026rsquo;s no reason why you shouldn\u0026rsquo;t give it a try!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 # Link to the video: https://youtu.","title":"PowerShell Switch Statement - Different take on branching"},{"content":" For loop - do you actually need it, since there\u0026rsquo;s foreach loop? Turns out, yes - there are situations where for loop comes very handy.\nIn this video I\u0026rsquo;ll show you the basic syntax of the for loop, going through nested for loops to end up with real case scenario from Azure Application Insights.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 # Link to the video: https://youtu.be/YQnBVn-9SN0 # Documentation: # https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_for?view=powershell-7.1 # Basic syntax: # for (Initial Value/statement; Condition; Repeat) { Run my code } # Initial value: Set this is up before starting the loop # Condition: For loops ends, when condition evaluates to false; or it keep running as lon as condition is true # Repeat: Do this after every loop for ($MyVariable = 0; $MyVariable -lt 10; $MyVariable = $MyVariable + 1) { \u0026#39;$MyVariable is {0}\u0026#39; -f $MyVariable Start-Sleep -Seconds 2 } for ($MyVariable = 0; $MyVariable -lt 99; $MyVariable++) { \u0026#39;$MyVariable is {0}\u0026#39; -f $MyVariable } # We can also decrease it for ($MyVariable = 10; $MyVariable -gt 5; $MyVariable = $MyVariable - 1) { \u0026#39;$MyVariable is {0}\u0026#39; -f $MyVariable } # or specify variable outside if $outside = 7 for (; $outside -lt 15; $outside++) { \u0026#39;$Outside is {0}\u0026#39; -f $outside } #Looping through array $pets = @(\u0026#34;Cat\u0026#34;, \u0026#34;Dog\u0026#34;, \u0026#34;Fish\u0026#34;, \u0026#34;Turtle\u0026#34;) $pets.Count $pets[2] \u0026#34;My pets in order:\u0026#34; for ($i = 0; $i -lt $pets.Count; $i++) { $pets[$i] } # How about I\u0026#39;d like to add numbers \u0026#34;\u0026#34; \u0026#34;My pets in order:\u0026#34; \u0026#34;\u0026#34; for ($i = 0; $i -lt $pets.Count; $i++) { $Number = $i + 1 \u0026#34; {0}. {1}\u0026#34; -f $Number, $pets[$i] } # For also works with strings for ($text = \u0026#39;\u0026#39;; $text.Length -lt 10; $text += \u0026#39;@\u0026#39;) { $text } # Nested for $row = 1..10 $column = 1..10 for ($i = 0; $i -lt $row.Count; $i++) { for ( $j = 0; $j -lt $column.Count; $j++) { $r = $row[$i] $c = $column[$j] $result = $r * $c $t = \u0026#34;{0} * {1} = {2}\u0026#34; -f $r, $c, $result Write-Host $t } } # It never ends... We need to break with CTRL - C for ( $i = 0 ; ; $i++ ) { \u0026#34;Loop number: $I\u0026#34; } # Or we can break when certain condition is met for ( $i = 0 ; ; $i++ ) { \u0026#34;Loop number: $I\u0026#34; if ($i -eq 1000) { \u0026#34;Breaking out\u0026#34; break } } # A real case scenario with Azure Application Insigts $Headers = @(\u0026#34;First Name\u0026#34;, \u0026#34;Email\u0026#34;, \u0026#34;Phone Number\u0026#34;) $Rows = @( @(\u0026#34;Kamil\u0026#34;, \u0026#34;kamil@kamil.mail\u0026#34;, \u0026#34;111-111-111\u0026#34;), @(\u0026#34;John\u0026#34;, \u0026#34;john@john.mail\u0026#34;, \u0026#34;222-222-222\u0026#34;), @(\u0026#34;Abigail\u0026#34;, \u0026#34;abigail@abigail.mail\u0026#34;, \u0026#34;333-333-333\u0026#34;) ) # List is like an array, however it allows to add new entries to it $result = New-Object System.Collections.Generic.List[System.Object] # We work with one record at the time foreach ($row in $Rows) { # We need a blank PowerShell object. Notice we don\u0026#39;t specify any properties up front $record = [PSCustomObject]@{} # Now we are going to iterate through each property in the row for ($i = 0; $i -lt $Headers.Count; $i++) { # Since we are working with PowerShell object, we can add members # Notice we use index for both name and value $record | Add-Member -MemberType NoteProperty -Name $Headers[$i] -Value $row[$i] } # We add completed object object to the list $result.Add($record) } #Display list with all records $result ","permalink":"https://kamilpro.github.io/powershell-for-loop/","summary":"For loop - do you actually need it, since there\u0026rsquo;s foreach loop? Turns out, yes - there are situations where for loop comes very handy.\nIn this video I\u0026rsquo;ll show you the basic syntax of the for loop, going through nested for loops to end up with real case scenario from Azure Application Insights.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 # Link to the video: https://youtu.","title":"PowerShell For loop"},{"content":" In this video we are exploring how to use If statement in various scenarios. If statement allows you to take tide control over the execution of your code, by dictating your script what to do in a given situation.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 # Link to the video: https://youtu.be/j8Ubwv8ApdU # Documentation: # Operators: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_operators?view=powershell-7.1 # About If: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_if?view=powershell-7.1 # Basic version # if something is true then do this if ($true) { \u0026#34;This is true\u0026#34; } if ($false) { \u0026#34;This is false\u0026#34; } # if something is true then do this, otherwise do that if ($true) { \u0026#34;This is true\u0026#34; } else { \u0026#34;This is false\u0026#34; } if ($false) { \u0026#34;This is true\u0026#34; } else { \u0026#34;This is false\u0026#34; } # let\u0026#39;s do some actual example if ( 5 -gt 3 ) { \u0026#34;This is more!\u0026#34; } else { \u0026#34;This is less!\u0026#34; } # we can also compare against variables. $random = Get-Random -Minimum 1 -Maximum 11; $random if ($random -ge 5) { \u0026#34;$Random is more than 5!\u0026#34; } else { \u0026#34;$Random is less than 5!\u0026#34; } # running functions and assigning them directly in the statement if ( ($random = Get-Random -Minimum 1 -Maximum 11) -ge 5) { \u0026#34;$Random is more than 5!\u0026#34; } else { \u0026#34;$Random is less than 5!\u0026#34; } $number = 5 if ( ($random = Get-Random -Minimum 1 -Maximum 11) -ge $number) { \u0026#34;$Random is more than 5!\u0026#34; } else { \u0026#34;$Random is less than 5!\u0026#34; } #Checking if variable exists if ($nonExisting -eq $true) { \u0026#34;That variable exists!\u0026#34; } else { \u0026#34;It doesn\u0026#39;t exist\u0026#34; } if ($user) { \u0026#34;User exists\u0026#34; } else { \u0026#34;User doesn\u0026#39;t exist\u0026#34; } $user = @{} $user[\u0026#39;Name\u0026#39;] = \u0026#39;Geralt\u0026#39; $user[\u0026#39;Surname\u0026#39;] = \u0026#39;of Rivia\u0026#39; $user if ($user) { \u0026#34;User exists\u0026#34; } else { \u0026#34;User doesn\u0026#39;t exist\u0026#34; } #We can do more complex operations if ($user) { $email = \u0026#39;{0}.{1}@novigrad.com\u0026#39; -f $user.Name, $user.Surname -replace \u0026#39; \u0026#39;, \u0026#39;\u0026#39; \u0026#34;Found user: $($user.Name) $($user.Surname)\u0026#34; \u0026#34;Email for user: {0}\u0026#34; -f $email.ToLower() } #Like operator if ($email -like \u0026#34;*Rivia*\u0026#34;) { \u0026#34;Email has Rivia in it!\u0026#34; } #We can check if something is not true if ( -not $user1 ) { \u0026#34;This user doesn\u0026#39;t exist\u0026#34; } if ( !$user1 ) { \u0026#34;This user doesn\u0026#39;t exist\u0026#34; } # More complex logic if ( $user.Name -eq \u0026#34;Geralt\u0026#34; -AND $user.Surname -eq \u0026#34;of Rivia\u0026#34; ) { \u0026#34;User Exists\u0026#34; } if ( $user.Name -eq \u0026#34;Geralt\u0026#34; -AND $user.Surname -eq \u0026#34;of Rivia\u0026#34; -AND $user1 ) { \u0026#34;User Exists\u0026#34; } # Splitting statement accross different lines if ( $user.Name -eq \u0026#34;Geralt\u0026#34; -OR $user.Surname -eq \u0026#34;of Rivia\u0026#34; -OR $user1 ) { \u0026#34;User Exists\u0026#34; } # Testing if folder exists $Folder = \u0026#34;C:\\Windows\u0026#34; if ( Test-Path -Path $Folder ) { \u0026#34;Folder: $Folder Exists!\u0026#34; } #Nested IF Statements if ($user.Name -eq \u0026#34;Geralt\u0026#34;) { if ($user.Surname -eq \u0026#34;of Rivia\u0026#34;) { if ( $email) { \u0026#34;User created successfully\u0026#34; } else { \u0026#34;User\u0026#39;s email is not created\u0026#34; } } else { \u0026#34;Users surname is not created\u0026#34; } } else { \u0026#34;User\u0026#39;s name is not set\u0026#34; } #Multiple if else statements $Today = (Get-Date).DayOfWeek if ($today -eq \u0026#34;Monday\u0026#34; -or $today -eq \u0026#34;Tuesday\u0026#34; -or $today -eq \u0026#34;Wednesday\u0026#34; -or $today -eq \u0026#34;Thursday\u0026#34; -or $today -eq \u0026#34;Friday\u0026#34;) { \u0026#34;Today is Working day\u0026#34; } elseif ($today -eq \u0026#34;Saturday\u0026#34;) { \u0026#34;Today is first day of the weekend\u0026#34; } elseif ($today -eq \u0026#34;Sunday\u0026#34;) { \u0026#34;Today is the last of week. Tomorrow we begin a new week.\u0026#34; } else { \u0026#34;Unknown day: $today\u0026#34; } #Switch switch ($today) { { $_ -in ( \u0026#34;Monday\u0026#34;, \u0026#34;Tuesday\u0026#34;, \u0026#34;Wednesday\u0026#34;, \u0026#34;Thursday\u0026#34;, \u0026#34;Friday\u0026#34;) } { \u0026#34;Today is working day\u0026#34; } \u0026#34;Saturday\u0026#34; { \u0026#34;Today is first day of the weekend\u0026#34; } \u0026#34;Sunday\u0026#34; { \u0026#34;Today is the last day of the week.\u0026#34; } default { \u0026#34;Unknown day: $today\u0026#34; } } ","permalink":"https://kamilpro.github.io/powershell-if-statement/","summary":"In this video we are exploring how to use If statement in various scenarios. If statement allows you to take tide control over the execution of your code, by dictating your script what to do in a given situation.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 # Link to the video: https://youtu.","title":"PowerShell If statement - controlling the flow of your code"},{"content":" Software management is not trivial task. Preparing for silent deployment is challenging, and even if you manage to install the application, how to keep it up to date?\nChocolatey is package manager for Windows, that can fully automate lifecycle of your software.\nIn this video, I\u0026rsquo;ll show you how to install Chocolatey, then how to find software, install it and finally keeping it up to date - all coming with free open-source license.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # Install https://chocolatey.org/install # Syntax choco choco -? # Search Software choco find|search|list choco find firefox choco info firefox # Install Software choco install firefox choco install notepadplusplus vlc -y # Review what\u0026#39;s installed choco find --local-only choco outdated # Uninstall Software choco uninstall vlc # Upgrade Software choco outdated choco Upgrade choco upgrade firefox choco upgrade all cup all -y ","permalink":"https://kamilpro.github.io/managing-software-with-chocolatey/","summary":"Software management is not trivial task. Preparing for silent deployment is challenging, and even if you manage to install the application, how to keep it up to date?\nChocolatey is package manager for Windows, that can fully automate lifecycle of your software.\nIn this video, I\u0026rsquo;ll show you how to install Chocolatey, then how to find software, install it and finally keeping it up to date - all coming with free open-source license.","title":"Managing Software with Chocolatey - Automate installation and updates of your applications"},{"content":" Congratulations! This is 20th and last lesson in the course – and my aim here is to show you various paths you can take your PowerShell journey to.\nI’m going to show what else you can do within PowerShell itself, as well how to keep up-to-day plus – what other doors writing code has opened for you – I’d love to hear back about this!\nI hope you’ve enjoyed the course so far and it will be helped you in some way – either solve a problem, got promotion, or simply learnt something new. Let me know!\nWill there be any other courses or videos? Possibly, however, I’ve got nothing planned now.\nMaking the course was an experiment for me trying to work with video rather than blogging, and certainly it appealed to me.\nI would really appreciate any feedback you might have, as well as ideas of what you’d like to learn about.\nHow can we stay in touch? You can find me on Twitter Kamil Procyszyn (@kprocyszyn) / Twitter\nOr YouTube Kamil Procyszyn – YouTube\nOr LinkedIn Kamil Procyszyn | LinkedIn\nLinks The DSC Book by Don Jones et al. [Leanpub PDF/iPad/Kindle]\nLearn PowerShell in a Month of Lunches $31.99 Jul 2021 (manning.com)\nLearn PowerShell Scripting in a Month of Lunches $35.99 Nov 2017 (manning.com)\nWindows PowerShell in Action, 3rd ed. $47.99 Sep 2017 (manning.com)\nShell of an Idea by Don Jones [Leanpub PDF/iPad/Kindle]\nDiscord PowerShell server – https://discord.gg/Z9VrweH3br\nOfficial PowerShell Blog – PowerShell | Automating the world one-liner at a time… (microsoft.com)https://devblogs.microsoft.com/powershell/\n","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-20-next-steps-with-powershell/","summary":"Congratulations! This is 20th and last lesson in the course – and my aim here is to show you various paths you can take your PowerShell journey to.\nI’m going to show what else you can do within PowerShell itself, as well how to keep up-to-day plus – what other doors writing code has opened for you – I’d love to hear back about this!\nI hope you’ve enjoyed the course so far and it will be helped you in some way – either solve a problem, got promotion, or simply learnt something new.","title":"PowerShell for IT Professionals [#20] – Next Steps with PowerShell"},{"content":" PowerShell is a great server automation tool, but what about Internet and any other web served services?\nAs it turns out, PowerShell is great in scrapping websites and consuming APIs – and it’s been one of the main development areas of the tool in the last couple of years.\nIn this lesson we are going to see how to use PowerShell to download files, scrap websites, discover links.\nWe will then use an API of PasswordPusher (pwpush.com) to generate expiring links to our secret passwords – all from within PowerShell.\nScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 Set-Location C:\\temp2; clear $PSVersionTable ### Invoke-WebRequest # Downloading files $uri = \u0026#34;https://github.com/notepad-plus-plus/notepad-plus-plus/releases/download/v7.9.1/npp.7.9.1.Installer.x64.exe\u0026#34; $here = Get-Location Invoke-WebRequest -Uri $uri Invoke-WebRequest -Uri $uri -OutFile .\\notepad1.exe ls $wc = \u0026amp;#91;System.Net.Webclient]::New() $wc.DownloadFile($uri, \u0026#34;$here\\notepad2.exe\u0026#34;) ls Start-BitsTransfer -Source $uri -Destination \u0026#34;$here\\notepad3.exe\u0026#34; ls $Website = Invoke-WebRequest -Uri \u0026#34;bbc.com\u0026#34; $Website $Website.StatusCode; $Website.StatusDescription; $Website.Headers $Website.RawContent $Website.RawContent | Out-File website.html explorer . # Websites $Website.Links $Website.Links | where {$_.class -eq \u0026#34;top-list-item__link\u0026#34;} $Website.Links | where {$_.class -eq \u0026#34;top-list-item__link\u0026#34;} | select data-bbc-title,href # Resolving shortcut urls $Website.Images $Website.images | where {$_.src -like \u0026#34;http*\u0026#34;} $Website.images | where {$_.src -like \u0026#34;http*\u0026#34;} | ForEach-Object {Start-BitsTransfer -Source $_.src -Destination \u0026#34;$($_.alt).jpg\u0026#34; } ls explorer . # Short urls $uri = \u0026#34;https://bit.ly/38JsRDB\u0026#34; $response = Invoke-WebRequest -Uri $uri $response.BaseResponse.RequestMessage.RequestUri.AbsoluteUri # Api $Uri = \u0026#34;https://pwpush.com/p.json\u0026#34; # Json $json = \u0026#39;{ \u0026#34;password\u0026#34;: { \u0026#34;expire_after_views\u0026#34;: 5, \u0026#34;expire_after_days\u0026#34;: 2, \u0026#34;payload\u0026#34;: \u0026#34;mysecretpassword\u0026#34; } }\u0026#39; $request = Invoke-WebRequest -Uri $uri -Method \u0026#34;Post\u0026#34; -ContentType \u0026#34;application/json\u0026#34; -Body $json $request $request.Content $request.Content | ConvertFrom-Json $body = @{ password = @{ \u0026#34;payload\u0026#34; = \u0026#34;mysecretpassword\u0026#34; \u0026#34;expire_after_days\u0026#34; = 2 \u0026#34;expire_after_views\u0026#34; = 5 } } $body $body.password $Body | ConvertTo-Json $Body $body = @{ password = @{ \u0026#34;payload\u0026#34; = \u0026#34;mysecretpassword\u0026#34; \u0026#34;expire_after_days\u0026#34; = 2 \u0026#34;expire_after_views\u0026#34; = 5 } } | ConvertTo-Json Invoke-WebRequest -Uri $uri -Method \u0026#34;Post\u0026#34; -ContentType \u0026#34;application/json\u0026#34; -Body $body ###Invoke-RestMethod $Uri = \u0026#34;https://pwpush.com/p.json\u0026#34; $params = @{ uri = $uri ContentType = \u0026#34;application/json\u0026#34; Method = \u0026#34;Post\u0026#34; body = $body } $password = Invoke-RestMethod @params $password # Let\u0026#39;s confirm it worked $uri = \u0026#34;https://pwpush.com/p/{0}.json\u0026#34; -f $password.url_token Invoke-RestMethod -Uri $uri ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-19-websites-and-apis/","summary":"PowerShell is a great server automation tool, but what about Internet and any other web served services?\nAs it turns out, PowerShell is great in scrapping websites and consuming APIs – and it’s been one of the main development areas of the tool in the last couple of years.\nIn this lesson we are going to see how to use PowerShell to download files, scrap websites, discover links.\nWe will then use an API of PasswordPusher (pwpush.","title":"PowerShell for IT Professionals [#19] – Websites and APIs"},{"content":" Although PowerShell treats everything as object - including text strings - working with text might be particularly difficult - at least when first approached.\nIn this lesson we are going to have a closer look at what is possible with built in text methods and see how these can help us e.g. by extracting a substring of text.\nPowerShell can also be great at parsing log files - we will use Select-String to quickly filter out the lines of text with the phrase we are looking for e.g. error.\nFinally, we will have a go with regular expressions / regex and see how this can be used to find out a pattern of text, rather than a specific word.\nScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 # String creation $FirstName = \u0026#34;Kamil\u0026#34; $Surname = \u0026#34;Procyszyn\u0026#34; # String concatenation \u0026#34;Hi, my name is \u0026#34; + $FirstName + \u0026#34; and my surname is \u0026#34; + $Surname.ToUpper() + \u0026#34;, it\u0026#39;s nice to meet you.\u0026#34; # String interpolation \u0026#34;Hi, my name is $FirstName and my surname is $($Surname.ToUpper()), it\u0026#39;s nice to meet you.\u0026#34; # String with -f \u0026#34;Hi, my name is {0} and my surname is {1}, it\u0026#39;s nice to meet you.\u0026#34; -f $FirstName, $Surname.ToUpper() # Quotation marks \u0026#34;$FirstName $SurName\u0026#34; \u0026#39;$FirstName $SurName\u0026#39; \u0026#39;{0} {1}\u0026#39; -f $FirstName, $Surname # Joining string $FullName = \u0026#34;$FirstName $Surname\u0026#34; $FullName # String as array $FirstName[0] $FirstName[-1] $FirstName[0..2] # String methods $FirstName | Get-Member $FirstName.ToLower() $FullName $FullName.IndexOf(\u0026#39; \u0026#39;) $index = $FullName.IndexOf(\u0026#39; \u0026#39;) $FullName.Substring($index + 1) #Creating a username with three first letters of firstname, followed by underscore, followed by surname from full name $FullName $FullName.IndexOf(\u0026#39; \u0026#39;) $index = $FullName.IndexOf(\u0026#39; \u0026#39;) $Fir = $FullName.Substring(0, 3) $Sur = $FullName.Substring($index + 1) $Username = \u0026#34;{0}_{1}\u0026#34; -f $Fir, $Sur $Username ### Select-String - Grep of PowerShell ### Don\u0026#39;t confuse with Select/Select-Object # Finding specific prase vssadmin list shadows vssadmin list shadows | Select-String \u0026#39;creation time:\u0026#39; vssadmin list shadows | Select-String \u0026#39;creation time:\u0026#39; -Context 1 vssadmin list shadows | Select-String \u0026#39;creation time:\u0026#39; -Context 0,4 vssadmin list shadows | Select-String \u0026#39;creation time:\u0026#39; -Context 1,4 # Same with text files Get-Content C:\\Windows10Upgrade\\upgrader_default.log Get-Content C:\\Windows10Upgrade\\upgrader_default.log | Measure-Object Get-Content C:\\Windows10Upgrade\\upgrader_default.log | Select-String \u0026#34;Error\u0026#34; # Practical example - stripping time offset from w32tm $time = w32tm /stripchart /computer:time.windows.com /dataonly /samples:1 $time $time[-1] $time[-1].Split(\u0026#39;,\u0026#39;) $time[-1].Split(\u0026#39;,\u0026#39;)[-1] $offset = $time[-1].Split(\u0026#39;,\u0026#39;)[-1] $offset $offset.IndexOf(\u0026#39;.\u0026#39;) $offset = $offset.Substring(0, $offset.IndexOf(\u0026#39;.\u0026#39;)) $offset.Trim() # Regex - Regular expressions $time | Select-String -Pattern \u0026#39;(\\d+\\.\\d+s)$\u0026#39; # We can check this website: https://regexr.com/ ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-18-working-with-text-strings/","summary":"Although PowerShell treats everything as object - including text strings - working with text might be particularly difficult - at least when first approached.\nIn this lesson we are going to have a closer look at what is possible with built in text methods and see how these can help us e.g. by extracting a substring of text.\nPowerShell can also be great at parsing log files - we will use Select-String to quickly filter out the lines of text with the phrase we are looking for e.","title":"PowerShell for IT Professionals [#18] – Working with text strings"},{"content":" In the last part of scripting series, we will make the script to be able to query remote machines, e.g. servers.\nWe will also check how to add parameters to the script (and configure the default value of parameter) so that user will able to pass the parameter name like in a standard PowerShell cmdlet.\nFinally, we are going to format the script so that it looks more reliable and make some refactoring so that the logic is simpler.\nExercises Convert all commandlets that have more than one parameter so that they are called with splatting Add another property to the $result so that it will include the time when information was gattered The $pingWebsite has a hardcoded value of ‘kamilpro.com’ – change it so that it uses a parameter instead If you have multiple computers in your lab, retrieve all computers from AD and use script to query them. Hint: you can use the command to retrieve all computers as a parameter for $ComputerName, in that case, you might need to wrap the command in ( ) brackets. Read about_Comment_Based_Help and add help to the script. You will need to add it at very top, above [cmdletbinding()], and wrap everything in \u0026lt;# ////your help #\u0026gt;. One of the keywords is .SYNOPSIS. Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 [cmdletbinding()] param( [string[]]$ComputerName = \u0026#39;localhost\u0026#39; ) Invoke-Command -ComputerName $ComputerName -ScriptBlock { Write-Verbose \u0026#34;Getting OS Info\u0026#34; $OS = Get-CimInstance -ClassName Win32_OperatingSystem Write-Verbose \u0026#34;Checking if its a server\u0026#34; $server = $false IF ($os.Caption -like \u0026#34;*Server*\u0026#34;) { $server = $true } Write-Verbose \u0026#34;Retrieving IP configuration\u0026#34; $Network = Get-NetAdapter | Where-Object { $_.Status -eq \u0026#39;Up\u0026#39; } | Get-NetIPConfiguration Write-Verbose \u0026#34;Last updates\u0026#34; $Updates = Get-HotFix | Sort-Object InstalledOn -Descending | Select-Object -First 5 $result = \u0026amp;#91;pscustomobject]@{ \u0026#39;OSName\u0026#39; = $OS.Caption \u0026#39;OSVersion\u0026#39; = $OS.Version \u0026#39;OSInstallDate\u0026#39; = $OS.InstallDate \u0026#39;isServer\u0026#39; = $Server \u0026#39;IPv4Address\u0026#39; = $Network.IPv4Address.IPAddress \u0026#39;Gateway\u0026#39; = $Network.IPv4DefaultGateway.nexthop \u0026#39;DNS\u0026#39; = $Network.DNSServer | Where-Object { $_.AddressFamily -eq \u0026#39;2\u0026#39; } | Select-Object ServerADdresses -ExpandProperty ServerAddresses \u0026#39;Updates\u0026#39; = $Updates.HotfixID | Out-String } Write-Verbose \u0026#34;Checking network connectivity\u0026#34; $pingGateway = Test-NetConnection -ComputerName $result.Gateway -InformationLevel Quiet $pingDNS = Test-NetConnection -ComputerName $result.DNS\u0026amp;#91;0] -InformationLevel Quiet $pingWebsite = Test-NetConnection -ComputerName \u0026#39;kamilpro.com\u0026#39; -InformationLevel Quiet $params = @{ MemberType = \u0026#39;NoteProperty\u0026#39; Value = $pingGateway Name = \u0026#39;pingGateway\u0026#39; } $result | Add-Member @params $result | Add-Member -MemberType NoteProperty -Value $pingDNS -Name \u0026#39;pingDNS\u0026#39; $result | Add-Member -MemberType NoteProperty -Value $pingWebsite -Name \u0026#39;pingWebsite\u0026#39; # Installed roles – server only IF ($result.isServer = $true) { $roles= Get-WindowsFeature | Where-Object { $_.Installed -eq $True -AND $_.FeatureType -eq \u0026#39;Role\u0026#39; } | Select-Object Name -ExpandProperty Name $result | Add-Member -MemberType NoteProperty -Value $roles -Name \u0026#39;Roles\u0026#39; } return $result } ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-17-scripting-part-4-parameters-running-remotely-and-formatting/","summary":"In the last part of scripting series, we will make the script to be able to query remote machines, e.g. servers.\nWe will also check how to add parameters to the script (and configure the default value of parameter) so that user will able to pass the parameter name like in a standard PowerShell cmdlet.\nFinally, we are going to format the script so that it looks more reliable and make some refactoring so that the logic is simpler.","title":"PowerShell for IT Professionals [#17] – Scripting part 4 – parameters, running remotely and formatting"},{"content":" In this lesson we are taking our script further by adding details about IP configuration and last installed hotfixes.\nBut it turns out, the networking information is not that shallow as it seems at the first glance – thus I’ll show you how to retrieve the information from the configuration.\nWe will also look on how to reuse our already created object so that we don’t need to duplicate code.\nAnd finally, we will use Add-Member to add more properties to the custom object.\nScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 $OS = Get-CimInstance -ClassName Win32_OperatingSystem # OS Name Write-Host \u0026#34;OS Name: $($OS.Caption)\u0026#34; # Version Write-Host \u0026#34;OS Version: $($OS.Version)\u0026#34; # Install Date Write-Host \u0026#34;OS Install date: $($OS.InstallDate)\u0026#34; # Client/Server IF ($os.Caption -like \u0026#34;*Server*\u0026#34;) { $server = $true } else { $server = $false} # IP: Interface, ip, gateway, dns $Network = Get-NetAdapter | Where-Object {$_.Status -eq \u0026#39;Up\u0026#39;} | Get-NetIPConfiguration # Last updates $Updates = Get-HotFix | Sort InstalledOn -Descending | Select-Object -First 5 # It would be nice if could run this remotely $props = [pscustomobject]@{ \u0026#39;OSName\u0026#39; = $OS.Caption \u0026#39;OSVersion\u0026#39; = $OS.Version \u0026#39;OSInstallDate\u0026#39; = $OS.InstallDate \u0026#39;isServer\u0026#39; = $Server \u0026#39;IPv4Address\u0026#39; = $Network.IPv4Address.IPAddress \u0026#39;Gateway\u0026#39; = $Network.IPv4DefaultGateway.nexthop \u0026#39;DNS\u0026#39; = $Network.DNSServer | Where-Object {$_.AddressFamily -eq \u0026#39;2\u0026#39;} | Select-Object ServerADdresses -ExpandProperty ServerAddresses \u0026#39;Updates\u0026#39; = $Updates.HotfixID | Out-String } # Network: Can I ping gateway, DNS Server, website $pingGateway = Test-NetConnection -ComputerName $props.Gateway -InformationLevel Quiet $pingDNS = Test-NetConnection -ComputerName $props.DNS\u0026amp;#91;0] -InformationLevel Quiet $pingWebsite = Test-NetConnection -ComputerName \u0026#39;kamilpro.com\u0026#39; -InformationLevel Quiet $props | Add-Member -MemberType NoteProperty -Value $pingGateway -Name \u0026#39;pingGateway\u0026#39; $props | Add-Member -MemberType NoteProperty -Value $pingDNS -Name \u0026#39;pingDNS\u0026#39; $props | Add-Member -MemberType NoteProperty -Value $pingWebsite -Name \u0026#39;pingWebsite\u0026#39; # Installed roles – server only IF ($props.isServer = $true) { $Roles = Get-WindowsFeature } $props ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-16-scripting-part-3-add-member-and-network/","summary":"In this lesson we are taking our script further by adding details about IP configuration and last installed hotfixes.\nBut it turns out, the networking information is not that shallow as it seems at the first glance – thus I’ll show you how to retrieve the information from the configuration.\nWe will also look on how to reuse our already created object so that we don’t need to duplicate code.","title":"PowerShell for IT Professionals [#16] – Scripting part 3 – Add-Member and network"},{"content":" In this lesson we carry on writing the scripting by gathering requirements and putting them together as comments in code.\nThen we will retrieve OS information with the help of WMI and display it on the screen with Write-Host.\nAlthough using Write-Host is easy to use, it doesn’t really allow us to do very much e.g. we cannot export information to the CSV, therefore we change it and start using custom PSObject – that way our script will start returning information like a regular PowerShell command.\nFinally, we will use an IF statement to decide whether the OS we are checking is a server.\nReference IF statement\nPS Custom Object\nHash table\nScript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 $OS = Get-CimInstance -ClassName Win32_OperatingSystem # OS Name Write-Host \u0026#34;OS Name: $($OS.Caption)\u0026#34; # Version Write-Host \u0026#34;OS Version: $($OS.Version)\u0026#34; # Install Date Write-Host \u0026#34;OS Install date: $($OS.InstallDate)\u0026#34; # Client/Server IF ($os.Caption -like \u0026#34;*Server*\u0026#34;) { $server = $true } else { $server = $false} # IP: Interface, ip, gateway, dns # Network: Can I ping gateway, DNS Server, website # Installed roles – server only # Last updates # It would be nice if could run this remotely $props = [pscustomobject]@{ \u0026#39;OSName\u0026#39; = $OS.Caption \u0026#39;OSVersion\u0026#39; = $OS.Version \u0026#39;OSInstallDate\u0026#39; = $OS.InstallDate \u0026#39;isServer\u0026#39; = $Server } $props ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-15-scripting-part-2-if-and-psobject/","summary":"In this lesson we carry on writing the scripting by gathering requirements and putting them together as comments in code.\nThen we will retrieve OS information with the help of WMI and display it on the screen with Write-Host.\nAlthough using Write-Host is easy to use, it doesn’t really allow us to do very much e.g. we cannot export information to the CSV, therefore we change it and start using custom PSObject – that way our script will start returning information like a regular PowerShell command.","title":"PowerShell for IT Professionals [#15] – Scripting part 2 – IF and psobject"},{"content":" In this lesson we will be preparing our workstation for writing PowerShell scripts. We will start by enabling RSAT and then install Visual Studio Code which is a recommended and free PowerShell code editor.\nWe will then have a look at the basic function of VS Code and create a simple “Hello World” script.\nExercises If you haven’t followed along, you definitely would like to install VS Code and create a *.ps1 file. Then create a script that will display your name.\nNotes 1 2 3 4 5 6 7 #Print out text \u0026#34;Hello World!\u0026#34; \u0026#34;Hi\u0026#34; \u0026#34;My name is\u0026#34; \u0026#34;Kamil Procyszyn\u0026#34; #Run AD command Get-ADDomain ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-14-scripting-hello-world/","summary":"In this lesson we will be preparing our workstation for writing PowerShell scripts. We will start by enabling RSAT and then install Visual Studio Code which is a recommended and free PowerShell code editor.\nWe will then have a look at the basic function of VS Code and create a simple “Hello World” script.\nExercises If you haven’t followed along, you definitely would like to install VS Code and create a *.","title":"PowerShell for IT Professionals [#14] – Scripting – Hello World!"},{"content":" In this lesson we will have a look on PowerShell built in security features and how it differs from e.g. BAT files.\nWe will then have a look how execution policy can help to control on what basis the PowerShell scripts can be executed.\nAt the end, we will configure some GPOs to control the execution and transcription of scripts.\n","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-13-is-powershell-secure/","summary":"In this lesson we will have a look on PowerShell built in security features and how it differs from e.g. BAT files.\nWe will then have a look how execution policy can help to control on what basis the PowerShell scripts can be executed.\nAt the end, we will configure some GPOs to control the execution and transcription of scripts.","title":"PowerShell for IT Professionals [#13] – Is PowerShell secure?"},{"content":" In this lesson we learn how to use PowerShell to access WMI (Windows Management Instrumentation), so that we can gain often hidden or obscure information.\nWe will then use WMI Explorer graphical tool to ease discovering all possible classes and instances that WMI provides.\nFinally, we will use WMI queries to add another level of granularity in GPO so that we can target very specific computers in it.\nExercises There’s a WMI class that lists all the installed software – find it and list all currently installed software with PowerShell. Feel free to use WMI explorer to help you discover the right class. We often need to find where the software is installed. Use the class from previous step, to display these pieces of information: Name, version and installation directory Open a Notepad application and leave it running. Discover methods of Win32_Process class. Find a method that allows you to kill process, and use it to close Notepad application. Notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # Slides # Allows to retrieve and manage information of Windows # Is Microsoft\u0026#39;s implementation of Web-Based Enterprise Management (WBEM) and Common Information Model (CIM) # Since Windows 2000 # Organised in namespaces e.g. Root\\CIMv2 contians all information about Windows and hardware and than classes # It\u0026#39;s bit obscure # Let\u0026#39;s look at an example Get-CimInstance -Namespace root/CIMV2 -ClassName Win32_BIOS # WMI Explorer to rescue - https://github.com/vinaypamnani/wmie2/releases # Let\u0026#39;s browse a bit here Get-CimClass -Namespace root/CIMV2 -ClassName Win32_OperatingSystem Get-CimInstance -Namespace root/CIMV2 -ClassName Win32_OperatingSystem Get-CimInstance -Namespace root/CIMV2 -ClassName Win32_OperatingSystem| FL * #Let\u0026#39;s call a method Get-CimClass -Namespace root/CIMV2 -ClassName Win32_OperatingSystem Invoke-CimMethod -ClassName Win32_OperatingSystem -MethodName reboot Get-CimInstance -Namespace root/CIMV2 -ClassName Win32_Service Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntiVirusProduct # Filters and GPO Get-CimInstance -Filter \u0026#39;Version like \u0026#34;10.%\u0026#34; and ProductType=\u0026#34;2\u0026#34;\u0026#39; -ClassName Win32_OperatingSystem select * from Win32_OperatingSystem where Version like \u0026#34;10.%\u0026#34; and ProductType=\u0026#34;3\u0026#34; # CIM VS WMI Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntiVirusProduct Get-WmiObject -Namespace root/SecurityCenter2 -Class AntiVirusProduct ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-12-wmi-windows-management-instrumentation/","summary":"In this lesson we learn how to use PowerShell to access WMI (Windows Management Instrumentation), so that we can gain often hidden or obscure information.\nWe will then use WMI Explorer graphical tool to ease discovering all possible classes and instances that WMI provides.\nFinally, we will use WMI queries to add another level of granularity in GPO so that we can target very specific computers in it.\nExercises There’s a WMI class that lists all the installed software – find it and list all currently installed software with PowerShell.","title":"PowerShell for IT Professionals [#12] – WMI – Windows Management Instrumentation"},{"content":" In this lesson we’re going to learn how what Variables are, why it’s good to use them and how to actually create them. We will then assign various values to variables to and use them solely, and in parameters.\nWe will also have a look at foreach loop so that we can e.g. ping multiple computers using single variable with multiple objects in it.\nExercises Use Get-Command to find all commands that allow you to manage variables. Then find the command that let’s to display all currently available variables.\nIn notepad, store a few hostnames/ip addresses each in separate line\nUse Get-Content commandlet to read the content of the file just created Store the content of the file into a variable Display all the objects of variable – it should be exactly the same as content of the file Use foreach loop to ping all the servers from your variable Common variable types [string] – Text string [char] – a single character [bool] – Boolean (can be either $True or $False) [int] or [int32] – 32-bit Integer [long] or [int64] – 64 – bit Integer [DateTime] – Date and time Commands used in the lesson 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 # Let\u0026#39;s work on simple string \u0026#34;Kamil Procyszyn\u0026#34; \u0026#34;Kamil Procyszyn\u0026#34; | GM $name = \u0026#34;Kamil Procyszyn\u0026#34; $name| GM # Same with numbers 3 3 | GM 3 + 5 $a = 3 $a | GM $b = 5 $a + $b # Let\u0026#39;s check what will happen after changing the value of one of properties $a = 10 $a + $b # Let\u0026#39;s use variables with parameters $server = \u0026#34;PS-SVR1\u0026#34; Test-NetConnection $server Ping $server Get-Process -ComputerName $server # Variables give access to methods $name $name | GM $name $name.ToUpper() $name.ToLower() # We can store output of commands to variables and access their properties $services = Get-Service $services $services.name # We can obviously pipe $services | where {$_.status -like \u0026#39;s*\u0026#39;} # Storing multiple objects in variable $computers = \u0026#39;ps-svr1\u0026#39;,\u0026#39;localhost\u0026#39;,\u0026#39;1.1.1.1\u0026#39;,\u0026#39;8.8.8.8\u0026#39;,\u0026#39;kamilpro.com\u0026#39; $computers $computers\u0026amp;#91;0] $computers\u0026amp;#91;2] $computers\u0026amp;#91;-1] # Let\u0026#39;s try to ping all of them ping $computers Test-NetConnection $computers # If command doesn\u0026#39;t allow to provide an array, we can loop through it foreach ($c in $computers) {ping $c} foreach ($c in $computers) {Test-NetConnection $c} foreach ($c in $computers) {nslookup $c} ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-11-variables/","summary":"In this lesson we’re going to learn how what Variables are, why it’s good to use them and how to actually create them. We will then assign various values to variables to and use them solely, and in parameters.\nWe will also have a look at foreach loop so that we can e.g. ping multiple computers using single variable with multiple objects in it.\nExercises Use Get-Command to find all commands that allow you to manage variables.","title":"PowerShell for IT Professionals [#11] – Variables"},{"content":" In this lesson we’re going to learn how to do one-to-one and one-to-many remote management with PowerShell. There’s no need for telnet, ssh or psexec as PowerShell has its own protocol that’s built in right into Windows. We will look at how to create interactive sessions and send commands to multiple servers at once.\nExercises With Enter-PSSesion, Remote to remote server and\u0026nbsp; restart \u0026#8220;Windows update\u0026#8221; service With Invoke-Command find out the remote computers last boot up/startup time List all running processes on remote server without using Enter-PsSession or Invoke-Command If you have a Domain Controller available, use Invoke-Command to list all computers on that network (you can use * for filter), remember that you need to provide all necessary parameters with your command in the script block so command just runs and doesn\u0026#8217;t prompt for any additional information. Notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Enable-Psremoting Enter-PSSesion ps-svr1 Hostname Get-Service GIP # I can even run commands that are not available on my source machine Get-ADDomainController Get-ADUser Exit or Exit-PSSession # Caution about double hoping Invoke-Command Invoke-Command -computerName ps-svr1 -command { get-service} # Invoke command executes commands on the remote comptuers and brings back the results # Can you tell a difference? Invoke-Command -computerName ps-svr1 -command { get-service | Where {$_.status -eq \u0026#39;stopped\u0026#39; } } Invoke-Command -computerName ps-svr1 -command { get-service } | Where {$_.status -eq \u0026#39;stopped\u0026#39; } # -ComputerName in the commandlet Get-Service -ComputerName ps-svr1 Invoke-Command -computerName ps-svr1 -command { get-service } # they look the same, but are they? Get-Service -ComputerName ps-svr1 | GM Invoke-Command -computerName ps-svr1 -command { get-service } | GM ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-10-remote-management-with-powershell/","summary":"In this lesson we’re going to learn how to do one-to-one and one-to-many remote management with PowerShell. There’s no need for telnet, ssh or psexec as PowerShell has its own protocol that’s built in right into Windows. We will look at how to create interactive sessions and send commands to multiple servers at once.\nExercises With Enter-PSSesion, Remote to remote server and\u0026nbsp; restart \u0026#8220;Windows update\u0026#8221; service With Invoke-Command find out the remote computers last boot up/startup time List all running processes on remote server without using Enter-PsSession or Invoke-Command If you have a Domain Controller available, use Invoke-Command to list all computers on that network (you can use * for filter), remember that you need to provide all necessary parameters with your command in the script block so command just runs and doesn\u0026#8217;t prompt for any additional information.","title":"PowerShell for IT Professionals [#10] – Remote management with PowerShell"},{"content":" Exercises On domain controller, find module that allows to manage Active Directory List all the Active Directory users List members of “Enterprise Administrators” Find the feature name for Windows Server Backup and install it with PowerShell Commands 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 ### Server # Check IP configuration # Show steps in Server how to install # Check hostname Hostname # Rename server Rename-Computer ps-svr1 # Restart computer Reboot-computer # Get-WindowsFeature # Install-WindowsFeature Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools Install-ADDSForest -DomainName posh.pri ### Client # Check IP GIP Hostname Add-Computer -DomainName posh.pri ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-9-setting-up-active-directory/","summary":"Exercises On domain controller, find module that allows to manage Active Directory List all the Active Directory users List members of “Enterprise Administrators” Find the feature name for Windows Server Backup and install it with PowerShell Commands 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 ### Server # Check IP configuration # Show steps in Server how to install # Check hostname Hostname # Rename server Rename-Computer ps-svr1 # Restart computer Reboot-computer # Get-WindowsFeature # Install-WindowsFeature Install-WindowsFeature -Name AD-Domain-Services -IncludeManagementTools Install-ADDSForest -DomainName posh.","title":"PowerShell for IT Professionals [#9] – Setting up Active Directory"},{"content":" Exercises Can you uninstall module that was installed with Install-Module? Confirm your answer with Get-Module -ListAvaiable Can you update the installed module? Perhaps, you’d like to install version 1.0.0.0 of SNMP module, how can you force Install-Module to do so? Install-Module error If you encounter the issue with downloading modules, run this commandlet as a temporary workaround (it must be applied every time the shell is restarted):\n\u0026#91;Net.ServicePointManager]::SecurityProtocol = \u0026#91;Net.SecurityProtocolType]::Tls12 Source of solution, and also permanent solution can be found at:\nhttps://answers.microsoft.com/en-us/windows/forum/windows_7-performance/trying-to-install-program-using-powershell-and/4c3ac2b2-ebd4-4b2a-a673-e283827da143?auth=1\nCommands used in video: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 Get-Command Get-Command | Measure-Object Get-Module -ListAvailable | Measure #### About special shell There\u0026#39;s only one PowerShell. Let\u0026#39;s review AD module for PowerShell. #### SNMP Let\u0026#39;s use PS Gallery Use SNMP module Get-Command -Module SNMP Invoke-SnmpWalk -IP 10.0.0.71 -Community public -OID \u0026#34;.1.3.6.1.2.1.1\u0026#34; ### VMWARE Find-Module vmware* #Install Install-Module vmware.powercli Get-command -Module vmware.powercli Connect-ViServer Get-VM New-VM VM2 Get-VM VM2 Remove-VM VM2 ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-8-manage-everything-with-powershell/","summary":"Exercises Can you uninstall module that was installed with Install-Module? Confirm your answer with Get-Module -ListAvaiable Can you update the installed module? Perhaps, you’d like to install version 1.0.0.0 of SNMP module, how can you force Install-Module to do so? Install-Module error If you encounter the issue with downloading modules, run this commandlet as a temporary workaround (it must be applied every time the shell is restarted):\n\u0026#91;Net.ServicePointManager]::SecurityProtocol = \u0026#91;Net.","title":"PowerShell for IT Professionals [#8] – Manage everything with PowerShell"},{"content":" Exercises Send output of any commandlet, e.g. get service to Printer\nLesson notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 # So far, we\u0026#39;ve been using default PowerShell behaviour for formatting output # Although in the last lesson we did filtering data with Where-Object and Select-Object # We didn\u0026#39;t really focus on how data is presented on the screen. Let\u0026#39;s see what can be done here. # Let\u0026#39;s have a look at local Get-LocalGroup Get-LocalGroup | Format-List #Alias is FL #Like with Select-Object, we can specify properties we\u0026#39;re after Get-LocalGroup | fl -Property name,sid #Another example when List might be easier to read then table Get-CimInstance win32_ComputerSystem ## Format Table #ipconfig... Get-NetIPConfiguration OR GIP Get-NetIPConfiguration | FT GIP | FT -Wrap GIP | -Properties * GIP | FT -Autosize ### Grouping Get-Service | Format-Table -GroupBy Status Get-Service | Sort-Object Status Get-Service | Sort-Object Status | Format-Table -GroupBy Status ### What if I want to show all properties, but they don\u0026#39;t fit on screen GIP | FL * # Or we can display to GUI gip | Select-Object * | Out-GridView ### Speaking of Out... by default, PowerShell adds Out-Host to every command you run, so that it displays on the screen But we can Out- to some other places Get-Command Out-* Get-Service | Sort-Object Status | Format-Table -GroupBy Status | Out-File c:\\temp\\services Get-Service | Sort-Object Status | ConvertTo-Html | Out-File c:\\temp\\services.html ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-7-formatting-output/","summary":"Exercises Send output of any commandlet, e.g. get service to Printer\nLesson notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 # So far, we\u0026#39;ve been using default PowerShell behaviour for formatting output # Although in the last lesson we did filtering data with Where-Object and Select-Object # We didn\u0026#39;t really focus on how data is presented on the screen.","title":"PowerShell for IT Professionals [#7] – Formatting output"},{"content":" Exercises List all services that are stopped List all service that are stopped and they name begins with W Display only the Display Name of services that stopped and their name begins with W Lesson notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ### Filtering # Some commands accept wild cards in the search or have a filter parameter Get-Service -Name w*,b* #But there\u0026#39;s more universal method, based on property names Get-Service | Where-Object -Filter {$_.Status -eq \u0026#39;running\u0026#39; } #So let\u0026#39;s break it down #Where-Object allows to filter out the incoming object based on the comparation operator #Most popular operators are: -eq - Equals -ne - Not equals -gt - Greather than -lt - Less then -le - Less than or equal -ge - Greater than or equal -Like -Not like #There are more many, you can check these help topics: Help about_Operators Help about_Comparison_Operators #$_ is current object; it\u0026#39;s what we\u0026#39;re piping in our case Get-Service # .Status that follows $_ indicates we\u0026#39;re passing only specific property of the Get-Service object, in this case Status Get-Service | GM #Let\u0026#39;s talk this through this example once again Get-Service | Where-Object -Filter {$_.Status -eq \u0026#39;running\u0026#39; } #We can use an alias Where instead of Where-Object Get-Service | Where {$_.Status -eq \u0026#39;running\u0026#39; } #I can also link multiple comparissions together with -and -or Get-Service | Where {$_.Status -eq \u0026#39;stopped\u0026#39; -and $_.Name -like \u0026#39;w*\u0026#39; } ### What if I\u0026#39;d like to choose only specific properties Get-Service | Select-Object -Property DisplayName,Status # I can use alias Select instead Get-Service | Select DisplayName,Status # Also allows to access hidden by default properties # Let\u0026#39;s find out the path of the program where it\u0026#39;s running from, and when was it lunched Get-Process | Select * Get-Path | Select Name, Path, StartTime ### Always filter left ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-6-filtering-output/","summary":"Exercises List all services that are stopped List all service that are stopped and they name begins with W Display only the Display Name of services that stopped and their name begins with W Lesson notes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 ### Filtering # Some commands accept wild cards in the search or have a filter parameter Get-Service -Name w*,b* #But there\u0026#39;s more universal method, based on property names Get-Service | Where-Object -Filter {$_.","title":"PowerShell for IT Professionals [#6] – Filtering output"},{"content":" Exercises Create a folder in root of C: with the name of PowerShell Create a file inside the folder with the name of your choice and no content Retrieve all items from Env: drive Check the version of Notepad.exe in Windows directory Discover current Windows build version by registry property: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion Notes from the lesson 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 # Provider allows to access some data storage (e.g. File system, registry, remote system, Active Directory) # This concept might sound a bit abstract at first, but becomes very straight forward once you\u0026#39;ve used it for a while # Provider once connected to the data storage, kind of \u0026#34;mounts\u0026#34; it like a network drive, allowing to browse and manage it # Once the storage is mounted PowerShell creates so called PSDrive # Let\u0026#39;s review available providers Get-Psprovider # Let\u0026#39;s review some PSDrives Get-PSDrive # A quick refresher how file system is organised: Drives, Folders, Files # Since PowerShell connects to many different file data storages, it uses the generic term Item and specifies with type. Thus a folder is an Item of Type Directory, same as Registry key, it\u0026#39;s best described in the help: Help New-Item -full #We have three main nouns we\u0026#39;re working with: - Item -managing files, folders, registry keys, certificates etc. - ItemProperty - Get-ItemProperty c:\\windows\\explorer.exe | Format-List * - ChildItem - lists content of the directory - Get-ChildItem c:\\Windows # If you\u0026#39;ve used other shells in the past # You change directories by using Set-Location, however CD is an alias to the command # And since it\u0026#39;s PowerShell, you\u0026#39;re not only limited to file system # You can create a new directory with New-Item -Name Folder -Type Directory, however you can use MKDIR # You can list a content of current directory with Get-ChildItem, however DIR, and LS are also available # You can list a content of a file with Get-Content, or you can use CAT # Let\u0026#39;s put some of what we\u0026#39;ve seen into practice # File operations New-Item -Name Temp -ItemType Directory -Path c:\\ Set-Location C:\\Temp new-item -Type File -Name file1 -Value \u0026#34;Kamil\u0026#34; new-item -Type File -Name file2 -Value \u0026#34;Kamil\u0026#34; Get-ChildItem Get-Content file2 #Certificate Get-ChildItem Cert:\\CurrentUser\\My\\ # Exercises 1. Create a folder in root of C: with the name of PowerShell 2. Create a file inside the folder with the name of your choice and no content 3. Retrieve all items from Env: drive 4. Check the version of Notepad.exe in Windows directory 5. Discover current Windows build version by registry property: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion ``` ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-5-providers/","summary":"Exercises Create a folder in root of C: with the name of PowerShell Create a file inside the folder with the name of your choice and no content Retrieve all items from Env: drive Check the version of Notepad.exe in Windows directory Discover current Windows build version by registry property: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion Notes from the lesson 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 # Provider allows to access some data storage (e.","title":"PowerShell for IT Professionals [#5] – Providers"},{"content":" Exercises There’s one particular command that allows you output anything from shell to file, find that command and use with any commands like Get-Service or Get-Process. Does it behave differently than Export-CSV?\nPrograms often use CSV but don’t use comma for delimiter – try to exporting to CSV but change the delimiter\nCan you print directly from shell? See if there are any commands available and if so, print some Event Logs!\nNotes from the lesson 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # Connects multiple commands into one # Output from former command is sent to latter #Some examples we\u0026#39;ve been using so far Get-Service get-service wuauserv,bits | Stop-Service Get-Service get-service wuauserv,bits |Start-Service Get-Service notepad get-process -name notepad | Stop-Process Get-EventLog -LogName Application -Newest 10 -EntryType Error | Export-Csv -Path .\\eventlogs.csv .\\eventlogs.csv # You might have noticed there\u0026#39;s more information in CSV than in the output screen, that\u0026#39;s by design. # Outputting to shell often has special formatting to limit the amount of output due to better redability Get-Service Get-Service | FT * #FT is an alias for Format-Table. We will talk about aliases and formatting output later on in the course, however when convenient I\u0026#39;ll let you know the alias know # Why pipeline works? It\u0026#39;s because it\u0026#39;s an object # We have properties and methods Get-Service Get-Service | GM #GM Stands for Get-Member # Show that both commands use the same service type Help Get-Service -full Help Stop-Service -full # Pipeline is not only limited to matching by type, it will try match property names, types etc. #Reading files Get-Content .\\eventlogs.csv Import-Csv .\\eventlogs.csv ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-4-pipeline/","summary":"Exercises There’s one particular command that allows you output anything from shell to file, find that command and use with any commands like Get-Service or Get-Process. Does it behave differently than Export-CSV?\nPrograms often use CSV but don’t use comma for delimiter – try to exporting to CSV but change the delimiter\nCan you print directly from shell? See if there are any commands available and if so, print some Event Logs!","title":"PowerShell for IT Professionals [#4] – Pipeline"},{"content":" Exercises Display a list of all services that start with the letter W Display all processes (you might need to use Help to discover the right command. Remember the noun might be singular). Open Notepad (you can simply punch in notepad in the shell) Display only processes that have a name “Notepad” Once you can there’s only one instance of Notepad running, close it with PowerShell! (Verb would be Stop) Confirm with Shell there are no more Notepad processes running Display last 10 lines of C:\\windows\\setupact.log file (the command you’d like to use has Content in noun Commands used in video 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #We\u0026#39;ll do some work on services now, let\u0026#39;s see what commands are available help *service #Lets retrieve all services Get-Service #I\u0026#39;m more interested in bits and wuasvc Get-Service -name wuauserv,bits #I can take a shortcut of parameter as long as Get-Service -n wuauserv,bits #But as we know from help, name is positional parameter thus I can run same command as... Get-Service wuauserv,bits #Let\u0026#39;s stop services Stop-Service wuauserv,bits Get-Service wuauserv,bits #And start services Start-Service wuauserv,bits Get-Service wuauserv,bits #In excercises I\u0026#39;ve asked to retrieve event logs Get-EventLog -LogName Application -Newest 10 -EntryType Error ## Naming convention # Verb-Noun. You can retrieve all \u0026#34;approved\u0026#34; verbs by Get-Verb ## There\u0026#39;s also a naming convention for nouns. # Nouns from the same module usually start with the same \u0026#34;Prefix\u0026#34; e.g. Active Directory cmdlets start with AD ## As it\u0026#39;s shell you can call other familiar programs, e.g. ping, nslookup etc ping 8.8.8.8 nslookup bbc.com ## Some errors GetService Get Service Gt-Service ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-2-running-commands/","summary":"Exercises Display a list of all services that start with the letter W Display all processes (you might need to use Help to discover the right command. Remember the noun might be singular). Open Notepad (you can simply punch in notepad in the shell) Display only processes that have a name “Notepad” Once you can there’s only one instance of Notepad running, close it with PowerShell! (Verb would be Stop) Confirm with Shell there are no more Notepad processes running Display last 10 lines of C:\\windows\\setupact.","title":"PowerShell for IT Professionals [#3] – Running Commands"},{"content":"Hi and welcome in the PowerShell for IT Professional course!\nThe course is aimed at IT Professionals/system administrators that never coded before and manage Windows workloads.\nTo get started all you need is a Windows machine (I\u0026rsquo;d recommended server edition run as VM), in the course you can see me explaining and using commands, thus I strongly encourage you to follow along with me.\nAll the videos and related exercises are available for free and I am for each video to be 20-30 minutes long - thus you can easily find spare time to learn.\nYou can also go directly to the YouTube playlist containing all videos.\nPowerShell for IT Professionals [#20] – Next Steps with PowerShell PowerShell for IT Professionals [#19] – Websites and APIs PowerShell for IT Professionals [#18] – Working with text strings PowerShell for IT Professionals [#17] – Scripting part 4 – parameters, running remotely and formatting PowerShell for IT Professionals [#16] – Scripting part 3 – Add-Member and network PowerShell for IT Professionals [#15] – Scripting part 2 – IF and psobject PowerShell for IT Professionals [#14] – Scripting - Hello World! PowerShell for IT Professionals [#13] – Is PowerShell secure? PowerShell for IT Professionals [#12] – WMI - Windows Management Instrumentation PowerShell for IT Professionals [#11] – Variables PowerShell for IT Professionals [#10] – Remote management with PowerShell PowerShell for IT Professionals [#9] – Setting up Active Directory PowerShell for IT Professionals [#8] – Manage everything with PowerShell PowerShell for IT Professionals [#7] – Formatting output PowerShell for IT Professionals [#6] - Filtering output PowerShell for IT Professionals [#5] - Providers PowerShell for IT Professionals [#4] – Pipeline PowerShell for IT Professionals [#3] - Running Commands PowerShell for IT Professionals [#1] [#2] - Help ","permalink":"https://kamilpro.github.io/powershell-for-it-professionals/","summary":"Hi and welcome in the PowerShell for IT Professional course!\nThe course is aimed at IT Professionals/system administrators that never coded before and manage Windows workloads.\nTo get started all you need is a Windows machine (I\u0026rsquo;d recommended server edition run as VM), in the course you can see me explaining and using commands, thus I strongly encourage you to follow along with me.\nAll the videos and related exercises are available for free and I am for each video to be 20-30 minutes long - thus you can easily find spare time to learn.","title":"PowerShell for IT Professionals"},{"content":" About files solve issue If after running Update-Help you don’t have About topics, you might want to manually download them and extract the archive to the root of:\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\en\nPowerShell help – Exercises PowerShell is great in working with CSV files. Can you find help for any CSV related commands (you will need to use a wildcard)\nCan you tell what’s a difference between ConvertTo-CSV and Export-CSV commands\nWe often need to review event logs – which command would allow you to retrieve event logs?\nOnce you found the command for retrieving Event Logs, can you tell if there are any mandatory parameters? Read help, and see if you can find that information, and then run command to confirm your findings\nIs PowerShell capable of creating folders and files? You might search for Item to find out\nHow would you list all the files/folders in current folder?\n","permalink":"https://kamilpro.github.io/powershell-for-it-professionals-1-help/","summary":"About files solve issue If after running Update-Help you don’t have About topics, you might want to manually download them and extract the archive to the root of:\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\en\nPowerShell help – Exercises PowerShell is great in working with CSV files. Can you find help for any CSV related commands (you will need to use a wildcard)\nCan you tell what’s a difference between ConvertTo-CSV and Export-CSV commands\nWe often need to review event logs – which command would allow you to retrieve event logs?","title":"PowerShell for IT Professionals [#1] [#2] – Help"},{"content":"Having software consistently deployed across the fleet of computers is one of the key points that can be automated.\nIf I have a choice (and it makes sense), I will always choose GPO over any other solution because it’s embedded into Active Directory thus not requiring installation, learning and maintenance of additional management tool.\nMSI – Software Installation One of the main advantages of MSI installers is that in 99% of cases you can just use the “Software Installation” option in GPO, and GPO will take care of the silent installation. In addition, if the newer version of the installer is ever listed, you can simply link the newer version of the installer, and GPO will take care of upgrading current installations.\nThe rule is, if the installer doesn’t have any mandatory custom made parameters, it will silently push the software.\nHow to find out if the MSI can be silently installed with GPO We are going to use the MsiExec (Windows Installer) tool, my installer file is called: GoogleChromeStandaloneEnterprise64.msi\nAnd command line syntax is:\nMsiexec /i \u0026lt;\u0026lt;Path/File name\u003e\u003e /quiet Thus making my command to look like this:\nmsiexec /i GoogleChromeStandaloneEnterprise64.msi /quiet If after issuing that command you can see your piece of software has been installed, it’s good to go with GPO.\nSet up GPO To make the GPO working, we need to put an installer file on some network share, and since it’s going to be computers accessing the file, the computer must have read access – not the user – to the file. The easiest way to achieve this is to use NETLOGON folder.\nYou access it via \\\u0026laquo;DomainNAme\u0026raquo;\\NETLOGON\nIf you’re not sure what your domain name is, simply open Group Policy manager and it will be listed there:\nSo I’m going to copy the installer file to my NETLOGON folder:\n\\company.pri\\NETLOGON\nAnd create a new GPO:\nTo create a GPO for the installer:\nAfter opening the Group Policy Management, right-click on the root/or OU and choose to create a new GPO and link it.\nGive it an appropriate name and then expand settings:\nComputer \u0026gt; Policies \u0026gt; Software Settings \u0026gt; Software Installation. Then right-click \u0026gt; New \u0026gt; Package.\nPoint it to your installer file – critical is you must point via network share; thus either \\DomainName\\someshare or \\ComputerName\\share Choose assign and job done.\nEXE and Non-standard MSI files Sometimes the software installer requires providing custom switches, and the only way to achieve the installation is to use a custom script. Thankfully in GPO, we have an option of startup/shutdown scripts – that the script will execute every time the computers boots/shuts down.\nOn the side note, I\u0026#8217;ll add that you can schedule a task via GPO that will kick in the script on a regular basis, or every boot \u0026#8211; in case you\u0026#8217;d need that. I had once a need to deploy the management client that tended to stop its services with no apparent reason, making management of computers that were out in the field a daunting task. Got it solved by having the installer and script copied to the local machine and a scheduled task that was executing script once per hour. The problem of unmanaged computers has gone. The problem with that kind of installers is the fact they often don’t advertise what switches are required, making it much more difficult. Thus at this stage, you might be forced to either check the developer’s website/manual or even contact them if the silent installation is supported. You can also have a look in the section of tips below which might point you to the solution.\nLet’s take as an example the installer for Airtame – it’s MSI based, however, requires special switches for silent installation. Likely enough, the software vendor has provided the manual and switches required:\nhttps://help.airtame.com/en/articles/2543555-how-to-deploy-the-airtame-app-via-msi\nThe fastest way to validate the script, without writing the script, is to run in the shell.\nYou can open the shell by pressing and holding SHIFT key, then right-click in the windows and choose “Open Windows shell here”\nmsiexec /i \"airtame-application-3.5.1-setup.msi\" /quiet WRAPPED_ARGUMENTS=\"/autostart=false /streaming_notification=true\" Once I’ve validated it’s been installed, time to create a script.\nGPO with the Startup script I’ve put the installer to the NETLOGON as a previous installer.\nCreate a new GPO and configure it as follows:\nExpand Computer Configuration \u0026gt; Policies \u0026gt; Windows Settings \u0026gt; Scripts \u0026gt; Startup\nIn the Startup Properties click “Show Files…” and create a new text file there, changing its extension to BAT (what I have set up on all my machines, is to show file extensions – this way I can change file extensions as a file name change), open it and paste the script below:\npushd //company.pri/NETLOGON msiexec /i \"Airtame-3.5.1-setup.msi\" /quiet WRAPPED_ARGUMENTS=\"/autostart=false /streaming_notification=true\" Popd First-line changes to the working directory to the folder where installation file is\nThe second line is the same command with testes moment ago\nThe last line will return the path the original location – not really needed, but it’s nice to have it.\nSave the file.\nBefore closing the Startup explorer window, copy the path (it’s ridiculously long) in my example:\n\\company.pri\\SysVol\\company.pri\\Policies{299CE059-AD3B-4F12-9DC3-3AC9EB36124E}\\Machine\\Scripts\\Startup\nComing back to “Startup Properties” window, click “Add” this time, and if you can’t see your script, paste the path to the window – now you can point to the script file you’ve just created.\nGo to your test machine, run “gpupdate /force” from the shell and reboot your machine – validate the software got installed.\nHelpful websites https://chocolatey.org/search – Chocolatey is a powerful package manager based on PowerShell. You can discover switches by reviewing their ps1 files, available on the website. It’s also a great product for installing and maintaining your application – have a look and you’ll forget what it’s like to Google for software installer and updating applications one by one.\nhttps://www.manageengine.com/products/desktop-central/software-installation/latest-software.html – Another great tool, this one is being used for managing computers. On the link above, you can discover how they push particular pieces of software.\nhttps://www.itninja.com/ – a great website for IT Professionals, and in context of this post, has a lot of how-tos on deploying software.\nPhoto by Ferdinand Stöhr on Unsplash\n","permalink":"https://kamilpro.github.io/deploying-software-with-gpo/","summary":"Having software consistently deployed across the fleet of computers is one of the key points that can be automated.\nIf I have a choice (and it makes sense), I will always choose GPO over any other solution because it’s embedded into Active Directory thus not requiring installation, learning and maintenance of additional management tool.\nMSI – Software Installation One of the main advantages of MSI installers is that in 99% of cases you can just use the “Software Installation” option in GPO, and GPO will take care of the silent installation.","title":"Deploying software with GPO"},{"content":"Deploying a new server is always fun! Well, at least the part after ISO download, installation, patching. Having said that, why not create a template so that you jump right into the fun?\nSo we are essentially going to create a preconfigured VHDX file that can be attached to the newly created VM, and it will take you straight to the login screen.\nWhat’s needed Windows server or Windows 10 with Hyper-V role and management tools enabled Windows Assessment and Deployment Toolkit (ADK) – I always pick the latest version available, at the moment of writing this – Windows 10, version 1903 – is latest. ISO with the source – I’ve used Server for 2016/2019 from my.visualstudio.com (you need an MSDN subscription for this), or from trial center Preparation Hyper-V Open Windows PowerShell as admin and paste this command:\nInstall-WindowsFeature -Name Hyper-V -IncludeAllSubFeature -Verbose You will need to reboot your computer for hyper-v to become available\nInstall External switch\nIf you want to allow your template VM to connect to the Internet e.g. To download and install patches, you need an external switch set up on Hyper-V.\nOpen Hyper-V Manage and choose “Virtual Switch Manager” from the right-hand side pane,\nMake sure you highlight the external switch and click Create Virtual Switch\nOn the next page give it a name, specify which network card connect it to and confirm.\nOr use Powershell (it will attach VM switch to the first network adapter):\n$A = Get-NetAdapter New-VMSwitch -Name \"ext1\" -NetAdapterName $a[0].name ADK Go to the link and download the latest ADK. When installing, make sure “Deployment tools” is selected – we are after Windows System Image Manager (SIM).\nFiles extraction from ISO We need to extract install.wim file from the installation media. The file is a compressed Windows Image and is being used by SIM to create the answer file.\nDouble click on the ISO so that it mounts, go to Mounted ISO\\Sources and copy install.wim (it has a few gigabytes in size, biggest file in the folder) to your work directory.\nYou can unmount the ISO now, by right-clicking on it and choosing Unmount.\nAt this stage, we have everything we need to work.\nCreate VM and install from ISO Head to the Hyper-V Manager and choose to create a new VM, and options you choose:\nName: Something meaningful like e.g. Template – Server 2019 Standard GUI\nGeneration: Generation 2\nAssign Memory: Anything above 2048MB should be enough\nConfigure networking: If you’ve created the external switch, pick it here\nVirtual Hard Disk: You can change default location and size. By default it will be dynamically expanding, that means it will only take as much space as needed.\nInstallation Options: point to the ISO\nOn summary click finish.\nWhat you can do at the stage is to give it more CPUs, 2 at least. It’s all about speed.\nStart your VM and prepare it as you wish Now you can customise your server installation as you wish. Since it’s a server, I have tendency to only install updates, with the principal the less the better. But you can do whatever you’re fancy.\nOnce you’re finished, take a checkpoint, as we are going to test if syspreping works.\nPress Windows + R and run:\n%windir%\\system32\\sysprep\\sysprep.exe\nThis will launch the System Preparation tool, aka sysprep. Configure it as:\nOOBE Generalize Reboot IF you haven’t taken the checkpoint when I’ve asked last time, do it now.\nCheckpoint taken? Great, press ok and let the system reboot.\nWhat will happen now is Windows will remove any unique identifiers, enabled drivers etc. Making it neutral.\nOnce your sysprep is completed, you’ll see a standard installation questions like language and administrator password – this is expected. At this stage, we are only testing if whatever changes you’ve made so far, don’t interfere with the sysprep process.\nThe successful test is considered when you can log in to Windows.\nRoll back the VM to the checkpoint you’ve taken before trying sysprep.\nPrepare the answer file Now we can move to a so-called answer/unattend file. The purpose of the file is to “answer” the installation questions for you, thus if the installer can find all answers, it will simply get you to the login screen after the first run.\nOpen SIM, choose File \u0026gt; New Answer File \u0026gt; Point it to the install.wim file you’ve copied earlier\nIn the window say Yes\nChoose the Windows edition you’d like to install and in following, windows say Yes\nSIM will now start creating a catalogue with all possible options for the image, this process can take good 10 minutes. Just let it work.\nWhen completed, you will see windows like that:\nAnd we are after to panes here: Answer File and Windows image.\nWindows Image is where you choose what to add to and to which phase of OS deployment The answer file is where you configure specific answers For start you’d like to add components:\namd64_Microsoft-Windows-International-Core, to Pass 4 Specialize and Pass 7 OOBE system amd64_Microsoft-Windows-International-Core, to Pass 7 OOBE System You do this by right-clicking the component Windows Image pane and choose the phase you’d like to add. There are many very similarly named records, thus pay attention.\nOnce added, you will see three “empty boxes” in the Answer File section.\nLet’s configure amd64_Microsoft-Windows-International-Core first, in both phases:\nBy selecting one, you enter its values on the right-hand side pane Properties.\nYou’d like to fill three fields: InputLocale, SystemLocale, UILanguage – in my example below you can see set up for British language. How can you find out all possible combinations? When you right-click the components in Answer File and choose Help it will take you to the website which enlists all values/language you can insert into these fields.\nTime for amd64_Microsoft-Windows-Shell-Setup in here we need to values:\nIn the root\\OOBE amend the record of HideEULAPage to True\nAnd in root\\UserAccounts\\AdministratorPassword enter the password for the Administrator account.\nAfter finishing it should look like this:\nPress Save \u0026gt; Save Answer File to save the file. We are going to use it for sysprep.\nSysprep with unattended file Copy the answer file to the desktop, and take another checkpoint of your VM.\nOpen shell as administrator and issue command (My username is Administrator and file is called Unattend.xml):\n\u0026nbsp;C:\\Windows\\System32\\Sysprep\\Sysprep.exe /unattend:C:\\Users\\Administrator\\Desktop\\unattend.xml Select OOBE, Generalize and Reboot\nWhat will happen now the system will reboot and after a few minutes you should be welcomed by a login prompt (thus no language, licence, admin password questions) – if so we’re good to export the template for future deployment.\nIf any questions appear during the deployment phase, double-check your answer file if you’ve included all answers as suggested above.\nExport template All right, revert your VM to the last checkpoint. You can rename that check as “Before sysprep” – so that you can always comeback to it and make amendments to your image, or install new updates.\nIssue same command once again:\n\u0026nbsp;C:\\Windows\\System32\\Sysprep\\Sysprep.exe /unattend:C:\\Users\\Administrator\\Desktop\\unattend.xml But this time choose to shutdown the VM.\nWhen the VM is shutdown, take another snapshot and call it something like “Export this” and export this checkpoint!\nExporting a checkpoint will effectively create a VM with merged VHDX file, and it’s VHDX file we need. All you need to do now is to go to the directory where you’ve exported the VM, and copy VHDX file from it to some place where you store your templates.\nNow whenever you create a new VM, rather than pointing it to the ISO and creating a blank hard disk, simply make a copy of your template and attach that disk to VM.\nI’ve got my template, what now? Since you’ve got the checkpoint of VM before syspreping, you can always bring install new updates, software etc.\nYou can use scripting to create new VMs, with the use of the VHDx, thus making it the fully automatic solution.\nIf the post-deployment configuration is required, but you can’t have this on the golden image (e.g. AV software, management agent) you can use setupcomplete.cmd file.\nIf you’re interested in creating Windows 10 image, read this article.\nPhoto by Dan Gold on Unsplash\n","permalink":"https://kamilpro.github.io/prepare-hyper-v-template-of-windows-server-2016-2019/","summary":"Deploying a new server is always fun! Well, at least the part after ISO download, installation, patching. Having said that, why not create a template so that you jump right into the fun?\nSo we are essentially going to create a preconfigured VHDX file that can be attached to the newly created VM, and it will take you straight to the login screen.\nWhat’s needed Windows server or Windows 10 with Hyper-V role and management tools enabled Windows Assessment and Deployment Toolkit (ADK) – I always pick the latest version available, at the moment of writing this – Windows 10, version 1903 – is latest.","title":"Prepare Hyper-V template of Windows Server 2016/2019"},{"content":"VSS Writers are responsible for backups – if they stop working, then backups might fail. The solution to that is restarting VSS Writers, but the problem here is that there are many, and at least out of the box, there’s no mechanism to make this automatic… but there’s PowerShell.\nI’m not interested in your code, I just want to restart these VSS Writers In that case, head on to: mygithub, use the code and run:\nGet-KPVSSWriter -Status Failed | Restart-KPVssWriter That function will go ahead, retrieve all failed VSS Writers, and restart associated services with them. If that won’t help, then you probably need to reboot the server.\nGet-KPVssWriter\nLet’s talk PowerShell The source code is available on GitHub.\nAs far as VSS Writers go, there were a few issues needed to be addressed for the function:\nthe VssAdmin.exe tool is CMD only, and returns only strings. There’s no filter in VssAdmin, thus it always returns all writers The writers are associated with many Windows Services, and it’s not always obvious which service is responsible for given VSS Writer Therefore I’ve written a couple of functions:\nGet-KPVssWriter – that function will convert the output string from VssAdmin into a PowerShell objects + it can filter results by state (at the moment Stable or Failed). Restart-KPVssWriter – this function takes the name of the VSS writer and restarts required service with it. It has hard-coded names of VSS writers with associated services. How do you make a use of these?\nYou pipe results from Get function, to Restart function thus:\nGet-KPVSSWriter -Status Failed | Restart-KPVssWriter will retrieve all failed writers and restart them. Let’s look into actual code.\nGet-KPVssWriter First is to run VSSAdmin and start converting the output into PowerShell object:\nSelect-String VSSAdmin list writers | Select-String -Pattern 'Writer name:' -Context 0, 4 These two lines will convert the output from vssadmin into PowerShell object. The Select-String really shines here as:\n-Pattern parameter allows it to search for a specific phrase. In that case I’m looking for ‘Writer name:’ as each listed writer starts with that line. -Context 0,4 tells PowerShell that for each pattern (line) you found, match 0 line prior to it, and 4 past it. Thus if we look for this sample:\nWriter name: 'SqlServerWriter' Writer Id: {a65faa63-5ea8-4ebc-9dbd-a0c4db26912a} Writer Instance Id: {9a2c071c-f231-4a9d-abb3-0b15e1866b79} State: [1] Stable Last error: No error Writer name: 'ASR Writer' Writer Id: {be000cbe-11fe-4426-9c58-531aa6355fc4} Writer Instance Id: {1dcb9866-6b86-4a5f-8dcc-eaf270bbfb2b} State: [1] Stable Last error: No error Writer name: 'MSSearch Service Writer' Writer Id: {cd3f2362-8bef-46c7-9181-d62844cdc0b2} Writer Instance Id: {b4a2be5b-71d4-4579-871c-94b725607c33} State: [1] Stable Last error: No error You can see that there’s pattern: Each Writer Name is followed by four line of text, and then the next one appears.\nSelect-String will then create an object for each pattern found, with properties of Line, Context.PostContext and Context.PreContext.\nAnd since we know that:\nLine = pattern found,\nContext.PostContext = an array of each line found past pattern\nContext.PreContext. = an array of each line found prior the pattern\nIt’s very easy to create the object, but first we need to remove the leftovers of the string.\nReplace ForEach-Object { #Removing clutter Write-Verbose \"Removing clutter \" $Name = $_.Line -replace \"^(.*?): \" -replace \"'\" $Id = $_.Context.PostContext -replace \"^(.*?): \" $InstanceId = $_.Context.PostContext -replace \"^(.*?): \" $State = $_.Context.PostContext -replace \"^(.*?): \" $LastError = $_.Context.PostContext -replace \"^(.*?): \" For every object generated by Select-String, I will assign a specific variable, and run -replace to remove unnecessary characters. Replace can also take regex , making it super effective while working with text.\nPsCustomObject The final step is to assembly all variables created in previous step into a PowerShell object:\nforeach ($Prop in $_) { $Obj = [pscustomobject]@{ Name = $Name Id = $Id InstanceId = $InstanceId State = $State LastError = $LastError } }#foreach Since the main purpose of using this function is to restart failed, I thought it would be worth to add a parameter for filtering out VSS Writers based on status, thus this simple if statement which amends what will be outputed by the function:\nIf ($PSBoundParameters.ContainsKey('Status')) { Write-Verbose \"Filtering out the results\" $Obj | Where-Object { $_.State -like \"*$Status\" } } #if else { $Obj } #else There we go, the analogue application has been converted into a digital form (LOL), we can go ahead now and work on the actual restarts.\nRestart-KPVssWriter This function will take the name of the VSS writer that requires restart, match Windows service to it, and restart the service.\nSwitch PowerShell has a beatifull command – Switch – that eliminates the need of writing complex if statements. Let’s have a look:\nSwitch ($Name) { 'ASR Writer' { $Service = 'VSS' } 'BITS Writer' { $Service = 'BITS' } 'Certificate Authority' { $Service = 'EventSystem' } 'COM+ REGDB Writer' { $Service = 'VSS' } 'DFS Replication service writer' { $Service = 'DFSR' } 'DHCP Jet Writer' { $Service = 'DHCPServer' } 'FRS Writer' { $Service = 'NtFrs' } 'FSRM writer' { $Service = 'srmsvc' } 'IIS Config Writer' { $Service = 'AppHostSvc' } 'IIS Metabase Writer' { $Service = 'IISADMIN' } 'Microsoft Exchange Writer' { $Service = 'MSExchangeIS' } 'Microsoft Hyper-V VSS Writer' { $Service = 'vmms' } 'NTDS' { $Service = 'NTDS' } 'OSearch VSS Writer' { $Service = 'OSearch' } 'OSearch14 VSS Writer' { $Service = 'OSearch14' } 'Registry Writer' { $Service = 'VSS' } 'Shadow Copy Optimization Writer' { $Service = 'VSS' } 'SPSearch VSS Writer' { $Service = 'SPSearch' } 'SPSearch4 VSS Writer' { $Service = 'SPSearch4' } 'SqlServerWriter' { $Service = 'SQLWriter' } 'System Writer' { $Service = 'CryptSvc' } 'TermServLicensing' { $Service = 'TermServLicensing' } 'WINS Jet Writer' { $Service = 'WINS' } 'WMI Writer' { $Service = 'Winmgmt' } default {$Null = $Service} } #Switch Hell yeah, that would be quite a if statement. Instead of that, switch will match the name on the left, and execute the code to the right.\nThe last line is interesting, default – if switch won’t match the name, it will execute that one instead. I’m casting that into $null.\nIf The final step is to restart service:\nIF ($Service) { Write-Verbose \"Found matching service\" $S = Get-Service -Name $Service Write-Host \"Restarting service $(($S).DisplayName)\" $S | Restart-Service -Force } ELSE { Write-Warning \"No service associated with VSS Writer: $Name\" } Simple restart of service if it was matches earlier on, or just write warning if it wasn’t found.\nHappy ever after I hope you found this useful. What can be done here is e.g. put the script into a scheduled task to run hourly, and hopefully you will have one problem less to worry about – as nobody likes to see failed backups on Monday morning.\nPhoto by Jason Yu on Unsplash\n","permalink":"https://kamilpro.github.io/restarting-vss-writers-with-powershell-script/","summary":"VSS Writers are responsible for backups – if they stop working, then backups might fail. The solution to that is restarting VSS Writers, but the problem here is that there are many, and at least out of the box, there’s no mechanism to make this automatic… but there’s PowerShell.\nI’m not interested in your code, I just want to restart these VSS Writers In that case, head on to: mygithub, use the code and run:","title":"Restarting VSS Writers with PowerShell script"},{"content":"It’s Friday. 5.20PM. So close to the long weekend. Monday is bank holiday – thus three days off. Very happy Friday.\nYou’re going to the server room to check some minor details. Upon opening the main door, you can feel that cold breeze and characteristic noise of hundreds of spinning fans. You quickly skim through all flashy lights, as it’s a good habit.\nAnd then you notice there’s something wrong. An orange light – why is there an orange light? Hopefully it’s nothing serious. It’s just above one of the disks. Fuck, it’s the main file server – the one that was meant to be virtulised a long time ago, but for some reason it haven’t happened for over two years.\nAll finance data is on it. And HR. Not to mention sales and marketing guys. It looks like it already picked a hot spare.\nNow it’s coming a reactive part of checking logs, grabbing part number, calling vendor. Depending on luck, you might leave office within one hour from discovery, but until the part arrives, the faulty disk is replaced and data copied – it’s kind of a bad dream.\nWhen did it happen? Problem with manual checks is that they are only valid during the time of the check – all you have is a snapshot of this particular moment in time. If something requiring your attention breaks the moment you leave the premises – it won’t be discovered until the next check. Unless, if it’s very critical problem like whole server going down – then you’ll find out through you customers/users.\nIf your customers are telling you that they can’t access file shares and the Internet, because the only domain controller is down, then this is a very bad position to be in.\nTherefore having a monitoring in place, even if it’s set as rarely as once per hour*, can give you a certain edge.\nWhy did it happen? Depending on how particular system is being used, what level of logging is enabled etc. there might be different number of logs to go through.\nThe problem is that after checking post fact, it might take time to drill through all the logs to find out which exact part and why it failed. It might be required by vendor’s support. It might as well be required by audit trail why certain service wasn’t delivered in accordance with SLA. The point is simple – going through logs is not fun.\nWhat if instead – you had monitoring in place, which would answer that questions straight away?\nOn top of knowing (if you configure it so) almost instantly when something breaks, you will also know why it happened. Monitoring works pretty much like: retrieve status of the device, check what the status is, if it’s not in OK state, shoot out alarm.\nIt obviously depends of how well integrated it is, how documented etc. but the rule of thumb is – if you can retrieve the status, you’re able to monitor it.\nIf it’s that great, can I stop performing manual checks all together? This arguable question, and I say that – even when you trust 100% in your monitoring system, it’s still worth doing manual checks from time to time.\nThe reason is that, there’s always a tiny chance that with some firmware upgrade, or some completely new piece of kit, there was a change which changes how readings are done. It also depends on system you use – if it’s open source or commercial product.\nTypical rules apply – free software requires more of your input, while commercial might be good to go out of the box.\nHow is monitoring performed? Obviously, the monitoring system will not be able to do much if it can’t authenticate to any of the systems. There are various ways, some most popular include:\nSNMP – it’s a standard which has been around for a long time now. It’s very possible that your printer, router, server etc. supports it. This can be used for hardware as well as OS monitoring. Agent – you install an agent compatible with your monitoring system, and that’s the way it can get reading from. API – used with scripted checks. APIs are usually well documented, thus creating a script around it is pretty straight forward. WMI – it used to be one way of monitoring HP Generation 5-9 servers. As WMI can give you a lot of granularity, there’s a lot of information which is hidden from user in graphical tools. You end up really scripting around it. If there’s piece of business important kit that can’t be monitored, I would really question the sense of using it in production.\nOk – this all sounds great – but must be expensive Not at all. I mean it depends on your choice.\nIf at the moment you don’t have any monitoring in place, then there are two free solutions which you can use: Nagios and Zabbix\nNagios Core Nagios Core is an open source version of Nagios. It’s so open source that you need build it from the source code. There are also Docker containers available, but I haven’t used them personally.\nThe main advantage or disadvantage of Nagios is that once installed, you configure it enterly through the text files. It also gives you a lot of freedom of how these files are organised grouped etc. Your role is to point it where files are, and however you configure them is up to you.\nYou can have one massive file for all your computers, network switches etc. Or you can create a folder structure Per Site/Office Location/Particular location. Whatever floats your boat.\nOnce configured, all the readings are available through the website.\nNagios has also been on the market for a long time, thus there’s a strong community full of ready to go monitoring solutions. Nothing obviously stops you from creating your own scripts.\nI’d say, if you like working in command line/code and have plenty of space of how to organise a solution, then Nagios Core will be appealing.\nZabbix Zabbix on the other hand is much more easy to deploy than Nagios. And once installed, it’s configured entirely through the website.\nThe very strong point of Zabbix are its discovery templates – e.g. if you point it to the switch, it will start monitoring all ports on it. If you point it to the ESXi server, it will start monitoring hardware through it, and do readings of all VMs in there. You can also install a Zabbix agent on monitored operating systems.\nThere are also community plugins available for Zabbix, thus extending its capabilities is easy.\nYou can either install Zabbix on Linux, or download a pre-configured appliance – this is really easy way to test the software.\nSo where should you install the monitoring? It should really be on its own physical box. If you have it as VM, and hyper visor dies – then you loose monitoring. Rather than knowing that hyper-visor is down.\nFor convenience, you can configure the monitoring solution as VM, and once happy with it, V2P it to the actual physical box.\nAnd when configuring monitoring, you must always do it from monitoring’s point of view. E.g. if the monitoring is in network, can it get across to the other subnet? Where is the gateway, so that it can check if the Internet is working? Will be able to notify you if the Internet is actually down?\nReady for a better night’s sleep? I hope it’s a no brainer to you now that monitoring should be first place for your work.\nHaving a peace of mind that stuff you’re responsible for is being constantly check for it’s condition, can really improve your overall stress level.\nAnd hey, you’ve also got more time as manual checks are not needed any more, what are you going to do about it?\n*Depending on software you use, you might be able to pull data once every five seconds. The point here is that there’s something in the background that does these checks constantly, so that you don’t need worry about it. Imagine knowing that something broke within one hour, rather than one month.\nPhoto by Artur Łuczka on Unsplash\n","permalink":"https://kamilpro.github.io/monitoring-why-you-need-it/","summary":"It’s Friday. 5.20PM. So close to the long weekend. Monday is bank holiday – thus three days off. Very happy Friday.\nYou’re going to the server room to check some minor details. Upon opening the main door, you can feel that cold breeze and characteristic noise of hundreds of spinning fans. You quickly skim through all flashy lights, as it’s a good habit.\nAnd then you notice there’s something wrong. An orange light – why is there an orange light?","title":"Monitoring – why you need it"},{"content":"This will be a high level experience I’ve been gaining whenever automating manual processes.\nWhat does it mean to automate? Simply put, is to remove a person from equation in order to complete the task. It can go as far as automating the whole process, or just part of it. The main goal here is to release the resource – that is a person’s time and energy – and redirect it toward something more valuable. They are also side benefits of automating like consistency, audit ability and cost.\nLet’s pick some example Whenever there’s something to be done, there must be a certain process to be followed. Set of steps which will lead to an accomplishment of the task. The process might be either verbal – that is people pass the knowledge to each other – or written – that is there’s a document/diagram listing step by step what must be done.\nLet’s take the backup checks (and if you don’t do backups at the moment, please read this) as an example. Imagine that you have a bunch of clients for whom you perform daily backups, and check the result every day, creating a service desk ticket per each failed backup. The way the task is performed is fairly straightforward – you open a predefined spreadsheet which lists all the computers being backed up, login to the application which is performing backups, and look at the reports, looking for failed and /or missed backups. While identifying these, you then create a ticket for each of the findings and record the ticket number with the state of the backup against the computer. Depending on the fleet of computers and the actual success of the backups, you might end up with various amounts of possible tickets to be created.\nWhen everything else has failed, backups become the last resort – they are invaluable. The problem with backups is that their value is often overseen, as they are taken for granted – like a water in the tap. Customers will suddenly ask for the backup if the data is gone.\nPersonally, I couldn’t imagine being caught “red handed” when failed to report a broken backup, when customer asks for a data to be restored.\nI can identify a few issues between the critical nature and repetitiveness of the work:\nThe same task is performed daily, over and over The person performing checks might not really see a reward or value since backups don’t provide value until recovery is needed. This state can go for months, if not years. It’s possible to overlook an issue There’s nobody shouting about broken backups, thus priority might be given to other incoming work. Step one: gathering information In order to automate anything, there must be an understanding what actually must happen, what’s the desired outcome.\nThis can be compared to the plant work – scarce materials on the one side, finished product on the other. Whatever gets us from one the other, is the process. The better the process, the sooner, consistent and better the end product is.\nTo really understand how it’s currently done, there’s no better way like to live it – either follow the person performing the task or get hands dirty.\nThe key here is to experience every step, understand why it must be done. Ask questions, even if something seems obvious. If there are any exceptions – ask. Understanding the process can save a lot time later, and might allow to improve it as well.\nStep two: create initial procedure or algorithm Having now written steps, it is time to combine them all together.\nThis will be a fundamental for the automated task, thus the form can be either a list of steps, a procedure or an algorithm.\nTherefore there should be things like:\nStep 1: Go to website Step 2: Login to the website with that account Step 3: If there are failed backup do this, if missed do that As you can see on one hand we are creating an easily human readable procedure, on the other we can use it as an algorithm for writing a code.\nStep three: How can I login to this? How to test it? While it’s fairly obvious to user to login somewhere, it might not be for the script to do so.\nDoes the app you’re trying to automate support API? If there’s an API, can it actually be elevated to use what you’re trying to achieve? What if there’s no API, can you create an account, or need to wait for someone? What sort of permissions are needed?\nWhile these are seem to be obvious things, we often forget about them – ask them in advance. There’s nothing worse than being stalled just because you can’t hack to the mainframe.\nStep four: Automating! Yes, this is the fun part. Now all the information gathered can be put into something that computer understands.\nThe common problem is that, what seems fairly straightforward in manual way, might be not that obvious in how actually it was programmed under the hood.\nThe list created in step 2 will let you to keep on track, and know what script should be doing next.\nAnother obstacle might be the actual execution of the code – is it going to be fully automated? If so, what will execute your code? A server, VM or maybe some serverless application like Azure Function? If the code is going to be executed by a person, then that question might not be relevant.\nBut let’s assume the code is executing and now we are getting to the point what we people love, and machines not really – that is…\nStep five: Exceptions Yes, something what we as human beings can just get by, the automation won’t – unless it’s hard coded in there.\nComing back to the backups checks example – let’s assume there are some old servers that haven’t been backed up for over a year, yet they still exist as the job in the backup software.\nDo they need to be there? Do these computers still existing operate? Do we actually need data?\nThe process of automation is a perfect opportunity to standardise processes, housekeeping and clarifying what was an open loop for way too long.\nOn one hand, we get a clear picture, on the other, the person performing checks has one less thing to remember while going through checks and/or reports. It’s simply a win/win situation.\nStep six: Testing Testing should be really done on every step of development, but here I’d like to stress something different.\nWhen we have a ready product, and are ready to go live, it’s worth to carry on doing manual work and comparing it against the result of the automation. The goal is here to get same results as per manual task. E.g. if there were five missed backups and seven failed reported manually, then the automation should return exactly same results.\nThere’s really no point into automating anything if we can’t trust its work, and the best way to enhance trust is to prove it side by side.\nIt might be worth setting a goal upfront that if e.g. if for two weeks all automated tests will cover results of manual tests, then we will stop doing manual checks. If the testing would fail at any moment, it must be pushed backed, reviewed, fixed and the testing cycle starts again.\nStep seven: Go live At this point, when the automation has been proved and has been working as expected, there’s really not much more to do than put in production. We can communicate and confirm the system is live and no manual checks are longer needed.\nIt might be worth to e.g. initially for the first month perform manual check once a week, thereafter less frequently.\nLet’s summarise I’ve been using the above seven steps and found it to be useful. On one hand we gain insights and understanding of how the process of question is working – it alone can lead to improvement. From this point, it’s very easy to document the process. And automating something that is well documented is a pure joy.\nI hope you’ll find it useful, and looking forward for your thoughts.\nPhoto by Us Wah on Unsplash\n","permalink":"https://kamilpro.github.io/the-automation-process-stages/","summary":"This will be a high level experience I’ve been gaining whenever automating manual processes.\nWhat does it mean to automate? Simply put, is to remove a person from equation in order to complete the task. It can go as far as automating the whole process, or just part of it. The main goal here is to release the resource – that is a person’s time and energy – and redirect it toward something more valuable.","title":"The automation process stages"},{"content":"We need tools to make our work. Either it’s notepad and paper, a hammer (for server’s hard reset… just joking) or some sophisticated and bespoke peace of hardware – we as professionals need tools to make our work better, or even possible.\nSince working as IT person, there are many software tools I need to do my day to day tasks, thus here’s the list of pieces of software I’ve been finding useful.\nRoyal TS – Connection manager https://www.royalapplications.com/ts/win/features\nPrice: paid\nI connect to many servers, and need to have ability to quickly, connect and swap between them. That’s what I use this software for.\nIt allows for RDP, SSH, SFTP, VNC and proably many more protocols I don’t even know about. Every connection has it’s own tab, thus jumping between open connections is just click away. On top of that, it can handle multiple credentials, which can be assigned to every connection you created.\nI’ve tried many connection managers before – paid and free – and this tool seriously shines. It’s also very stable, thus there’s no need to worry that at some point you might need to reopen all connection.\nIt’s true value for money.\nServer Manager – managing Windows servers https://support.microsoft.com/en-us/help/2693643/remote-server-administration-tools-rsat-for-windows-operating-systems\nCategory: Free\nIf you’re managing Windows servers, this tool is simply a must – if you don’t use it, just install RSAT on your laptop (it’s free).\nIt debuted with Server 2012, and allows to add Windows-based server to it, and have a very quick information about them. Once you’ve added your servers there, it will break them down by server roles, so if you’d like quickly find your AD DS servers, just click dedicated tab of them. Need to quikcly check DHCP reservation? Just right click on DHCP server and bring up DHCP console.\nAnother great feautre is having a minal monitoring – you can specify CPU and memory treshold, and as soon as the server hit’s the limit – you’ll know it. It will also record the occurence, so that you can double click on it, and have a snapshot of what processes were crancking your server.\nI might be wrong here – but seems like that software is not in development anymore (at least I didn’t see any more new features, and didn’t fix old bugs), which is a shame. I’m aware of Windows Admin Center, but that tool can’t replace server manager yet.\nVMWare Workstation Pro – Virtual Machines https://www.vmware.com/products/workstation-pro.html\nCost: Paid\nIf you spin up many VM’s on your laptop, then this application is a pure joy. I purchased it a year ago, mostly for creating labs for my studies and MCSA and oh boy, I wish I purchased it earlier on.\nThe big thumbs up for the tabbed view, thus jumping between VMs is quick and easy, the fact that shared clipboard always works (so no problems with copying files or text strings), creating new VMs from the snapshot of source VM – saving huge amounts of space. On top of all of that, Windows upgrades don’t break anything, and VMs can be easily moved between Windows and Linux hosts.\nIf you use any sort of virtualisation software and are not entirely happy with it, take this one for a spin.\nVisual Studio Code – Code editor https://code.visualstudio.com/\nCost: free\nI write PowerShell scripts, and picking this IDE was not a brainer – it’s official POSH editior. It obviously supports plaetora of other languages.\nCode is fast, multiplatform and have plenty of extensions. It hanged a few times, but that was probably something to do with my code I tried to run. It has debugging, source control and terminal built in. I didn’t use many IDEs so it’s quite hard to compare – but as a fairly new person to code, I find it cool.\nDameware – LAN remote connection https://www.dameware.com/dameware-mini-remote-control\nCost: Paid\nDameware is a tool which allows you to conenct directly to the console of the computer. It has a very low latency (at least on Windows 7, 8 and MacOS – Windows 10 is not as fluent). It works, to my undestaring, as a video driver thus mirrroring screen and allows direct interaction with computer, including admin passwords prompt.\nIn probably, it allows to chat with the user, file transfer, and because it’s working as a service, you can initiate connection without a user being logged on.\nI will keep updating the list This list is not finished, an wil be updated over time. I have been using all tools listed here, thus it’s a personal subjective list. I have ano affilation with any of the companies developing software listed above.\nMain Photo by Rob Lambert on Unsplash ","permalink":"https://kamilpro.github.io/sysadmins-tools-what-i-have-installed-on-my-laptop/","summary":"We need tools to make our work. Either it’s notepad and paper, a hammer (for server’s hard reset… just joking) or some sophisticated and bespoke peace of hardware – we as professionals need tools to make our work better, or even possible.\nSince working as IT person, there are many software tools I need to do my day to day tasks, thus here’s the list of pieces of software I’ve been finding useful.","title":"Sysadmin’s tools – what I have installed on my laptop"},{"content":"Here we are, again. Same symbolic time of the year.\nI find it perfect to review the past 12 months and have a think about it.\nI broke it down into three sections – professional, personal and what didn’t work out. So, let’s go!\nProfessional Learnt PowerShell – I think it was the biggest achievement career wise this year. It’s hard to put this in formalised matter, or any sort of figure – but the change of my mindset is the biggest one. Simply put – from somebody who never coded before, and didn’t see using code in my life at all, I’ve started automating my tasks by actually writing PowerShell code. And that has opened a whole new world of possibilities.\nI’m not sure where it’s going to take me, but I’m sure code will become majort part of my career. If I would met a new aspiring sysadmin, I would strongly encourage him or her to start learning programming/scripting language early in career.\nAnd everything thanks to Jeffrey Snover and Steven Murawski – who both came to London back in October 2017, thank you for inspiring me!\nPassed 70-411 exam – I’ve passed the second out of three exams required to achieve MCSA in Windows Server 2012. It was more difficult than the first one, and the third one… is even more difficult. But I’m getting there, consequently.\nStarted mentoring junior staff – it didn’t really come officialy, or was designed, but somehow it just happened. Pretty much both of our junior staff has been replaced by the new members of staff, and since I’m working close with, thus I’ve started teaching them “the sysadmin” way. Therefore it started from basic first line problems, throuh troubleshooting (it’s a skill!) to being simply more independent and open to more challenges. I like it.\nOn the side note, I’ve created two PowerShell converts – we got from the “you never going to have a need of using here” to “hey can you help me to add users to the group with the shell pleas?”. This is so cool. Personal Got married – 21st July 2018 down in Coulsdon Mannor I married my beloved Joanna. The preparation took us 1.5 years and it turned out great. We’ve had a full day of attractions planned for our guests, and I believe that they mostly enjoyed our first dance, which you can watch here:\nRan 10k – it took me over a year to ran 10KM in one go. I’ve managed it in April, and my time was. Unfortunately, something bad happened into my leg in May and I wasn’t able to run for longer distances since then. I’ll try to start over in Spring next year, see how it works.\nTravelled 2 countries – this year we’ve travelled to Majorca and Cyprus. While Majorca was scourge hot and beautiful beaches – it somehow didn’t get my love. Buy can’t say that about the Cyprus… I’m in fact writing this post on the plane back from Cyprus. This is our second trip here (we first came in 2016) and our feelings are very strong for this place. So much, we started talking about moving to Cyprus later on in 2019. These are plans now, but who knows.\nRead quite a few books – I’ve read around 30 books this year. And three mostly remembered by my are “The Phoenix Project”, “Practice of system and network administrator” and “The way of kings”. First two ones are for IT people – and I will strongly recommend both of them to any one who would start working in IT. The last book is from series called “The storm light archives” and is a great epic fantasy. It’s so great, that it became my no.1 of fantasy books, which used to be the Witcher Saga.\nThings that that didn’t work out Waking up early – I didn’t nail that one. Or to describe it better – I didn’t manage to create a habit of waking up earlier. I’ve learnt a skill to wake up say 5.30 am to run or study – but couldn’t keep it going for longer time. Certainly there’s something I need to work on more.\nKeeping blog updated – I didn’t blog that often. I can blame learning PowerShell and studying for MCSA and wedding preparation, but facts are facts – blog wasn’t my priority. I’ve started keeping notes of topics which I wanted to blog about, let’s see if that will help.\nCompleted MCSA – if I think about it now, initially I though that I’d be able to pass all three exams within one year, but oh boy, how wrong I was. I certainly take my time, and do a lot of practice so I keep the actual skill how to do things. I’ve passed two exams so far, and attempted last one in December, was short by 5% – so I’m very close of passing that one!\nThat would be it, my 2018 in a very short review, the highlits of it.\nI hope that you’ve achieved your goals for this year, set goals for the 2019 and wishing you a Happy New Year!\nMain photo by NordWood Themes on Unsplash ","permalink":"https://kamilpro.github.io/2018-summary/","summary":"Here we are, again. Same symbolic time of the year.\nI find it perfect to review the past 12 months and have a think about it.\nI broke it down into three sections – professional, personal and what didn’t work out. So, let’s go!\nProfessional Learnt PowerShell – I think it was the biggest achievement career wise this year. It’s hard to put this in formalised matter, or any sort of figure – but the change of my mindset is the biggest one.","title":"2018 summary"},{"content":"Recently I’ve had a request to restore a certain backup from the old backup tapes. We’ve had a new Backup exec installation which didn’t have the catalogue/record of these tapes nor the actual tape drive to recover them – I knew it was going to be one in the world task. And the hell it was.\nLocating tapes in the storage unit was a pure joy – no need to go to the gym after this. Buying some used tape drive and set this up to the was surprisingly easy.\nSo I had a working Backup exec – check – I had the backup tapes – check – and working backup drive – check check check. I’d expected only lollipops and unicorns from that point on, and I couldn’t be more wrong.\nCutting the long and frustrating story short – here are the steps needed to catalogue all tapes in one go.\nDisable settings You’d like to go to Backup Exec settings\u0026gt; Cataloging tab\nThen untick both boxes: “Request all media in the sequence for catalog operations” and “Use storage-based catalogs“\nBackup exec catalogue settings Making this two changes will allow you to catalogue “some” of the backup tapes but I’ve found a weird glitch here – say you have a set of 4 backup tapes. Then obviously you will “Inventory \u0026amp; Catalog” the first tape, the second and so on…\nThe problem with this take is that each subsequent tape will remove catalogue information of the previous tape – thus you end up with information only about the very last backup tape.\nTo fix that is as simple as\nInventory all backup tapes prior cataloguing them Yep, that’s it. For some reason without that Backup exec seems to be unaware of any following tapes, and thus is not requesting them. When you actually inventory all of them before then Backup exec will keep requesting them during single catalogue job.\nBear in mind, the server will update its records only after completing the catalogue job, therefore patience you must have, my young sysadmin.\n","permalink":"https://kamilpro.github.io/backup-exec-cataloging-multiple-tapes-with-a-single-tape-drive/","summary":"Recently I’ve had a request to restore a certain backup from the old backup tapes. We’ve had a new Backup exec installation which didn’t have the catalogue/record of these tapes nor the actual tape drive to recover them – I knew it was going to be one in the world task. And the hell it was.\nLocating tapes in the storage unit was a pure joy – no need to go to the gym after this.","title":"Backup Exec – cataloging multiple tapes with a single tape drive"},{"content":"The task: to move a virtual machine from one ESXi to another. The ESXis are on two completely separate networks. VM size is 5.5 TB, with one file being 5TB.\nThe problem: VM cannot be started due to maxed out resources. There’s no NAS or any other means of storage where the files could be transferred to. From previous experience, I knew that transfer over SSH or USB would be well too slow, as the task was time critical. There wasn’t also a big enough single hard disk which could be used to copy the files onto it.\nMy proposed solution: Use any spare desktop/server and load it with hard drives, so that all of them can create spanned virtual disk big enough to accommodate files from ESXi, install at least server 2012r2 on it and configure as an ISCSI target.\nAs you can see above, it was quite an unusual task with quite unusual conditions.\nRequirements:\nWindows box: Spare computer 1HDD for OS Number of HDDs, which summarised capacity would be enough to accommodate files from ESXi. HDDs might be a different size One network adapter Source and destination ESXi: at least one spare network port which can be configured as uplink Possibility to enable iSCSI (I was working on ESXi 6.5) Let’s start preparation!\nPrepare Windows server I take it you’ve prepared a fresh installation of Windows server, if not go ahead and do it. I’ve used 2012 R2 for the purpose of the task. Don’t forget to activate it.\nAnother important step is to configure network card you’re going to use with static IP – as we will tell ESXi to connect to the server over that IP. All you need is an IP address and subnet mask.\nUnless you’re willing to connect over the network then obviously gateway would be needed. However, it is strongly recommended to use iSCSI on the isolated network – due to security, performance and stability reasons.\nCreate spanned volume Once you’ve got your server ready for a spin – the first step is to create a spanned volume – we will simply use all spare hard drives and create one massive disk out of them. I’ve used 1TB, 3TB and 4TB disks, which gave me some 8TB of space altogether.\nYou’d like to press CTRL + X and bring disk manager. Then right-click on each of the disks and initialize it, then bring them online. In my example, the disks are numbered 1,2 and 3.\nNext step is the actual creation of the Spanned Volume, you click on any of the spare disks, and choose “New Spanned Volume”, click next and on “Select Disks” page Add all disks, so that total volume size shows summed storage space from all of them. You assign any letter drive you want, give any name (I called mine BIG) and make sure to tick Perform a quick format.\nSpanned volume creation\nThat’s it, once you click finish you will see the colour of disks changing to purple-ish, and all three disks will have the same partition name with the same letter assigned – in my case “BIG (F:). You can go to my computer and check yourself that this “disk” in fact exists.\nInstall iSCSI Target Server role Now it’s time to add iSCSI role so that we can create the iSCSI disk and attach it to ESXi. iSCSI is a technology which allows you to attach a network drive to the PC and use it as it was a local disk.\nBring up Add roles and features wizard, and on “Server roles” tab check: File and Storage Service \u0026gt; File and iSCSI Services \u0026gt; iSCSI Target Server, accept the default and go ahead with the installation.\niSCSI target role installation\nYou can achieve the same result using Windows Powershell by using the command:\nInstall-WindowsFeature -Name FS-iSCSITarget-Server Create iSCSI disk and target Final step of our configuration is the actual creation of iSCSI virtual disk.\nHead on to the server manager, go to the Files and storage pane \u0026gt; choose iSCSI tab. Click on TASKS and choose “New iSCSI Virtual Disk”\nOn the new windows that shows up, choose the location on your newly created spanned disk (F: in my case), provide any meaningful name. On the disk size, choose max available space (7.81TB in my case) and choose the disk to grow dynamically.\nSince there are no iSCSI targets configured yet, choose to create a new one, give it any name and choose to identify by the IP address (in my case 10.4.1.5) .\nThere’s no need for authentication here, so just move on next and finish the wizard, which will end up in creating the iSCSI disk with the associated target.\niSCSI virtual disk creation\nPowershell way:\n#Create iSCSI disk New-IscsiVirtualDisk -Path F:\\iSCSIVirtualDisks\\iSCSI1.vhdx -Size 7.81TB #Create iSCSI target New-IscsiServerTarget -TargetName target1 -InitiatorIds IPAddress:10.4.1.5 #Assign iSCSI disk to the target Add-IscsiVirtualDiskTargetMapping -TargetName target1 -Path F:\\iSCSIVirtualDisks\\iSCSI1.vhdx At this point, you’re ready to plug your Windows Server directly to the spare ESXi network port. We’re going to do some configuration on ESXi now.\nConfigure ESXi Create VMKernel NIC To start with I wanted to thanks Andy who helped me with VMkernel NIC configuration – it would take me much longer to figure out this myself! Drop me the line if you’re reading thi!\nIn order to connect the iSCSI disk to ESXi we need network port configured, so if you haven’t yet plugged in your just prepared Windows server to the hypervisor – go and do it now.\nWe need to configure Virtual switch, port group and finally VMKernal NIC\nClick on Networking pane and choose Virtual Switches tab. Down there choose an option to add a new switch. In the new Window that pops out give it a meaningful name and choose the right uplink (port on NIC)\nNext click on Port groups tab and choose ato add port group, give it meaningful name, choosing the switch you’ve just created.\nThe final step is to click on VMkernel NICs tab and add the new VMkernel NIC. Choose port group you’ve created in the previous step, then choose that IP should be static and give it IP address in the same subnet as your Windows machine.\nI configured my Windows machine to be 10.4.1.5/24 and VMkernel NIC to be 10.4.1.4/24\nCreate VMKernel NIC\nAdd iSCSI disk and configure it as datastore We’re coming to the very end of the configuration – everything has been configured and the last step is to create a datastore on the iSCSI disk.\nClick on storage pane and choose Adapters and click on Configure iSCSI, on the new windows choose to enable iSCSI, and type in the dynamic address field type in the IP of Windows machine, confirm.\nAfter that head on to Datastores tab and choose Add Datastore to create new VMFS datastore, point it to the Windows datastore and create your datastore.\nThat’s it, you can use newly created datastore as it was the locally attached disk.\nESXi adding iSCSI disk and creating datastore\nYou can obviously use this configuration in any different scenarios Since having the possibility of using Windows as iSCSI target is not that very popular, I think using ESXi with attached iSCSI datastores can be an easy and cheap way of making more space for your VMs.\nYet this non-typical topic allowed me to complete this very strange situation within a relatively short and easy way.\nHave you found yourself? Do you know any other means of achieving the same goals? Please let me know!\nHow’s my story ended? After connecting Windows Server to vSphere with the iSCSI disk, I was able to create the datastore. I then copied the massive VM to it and replugged Win server to the other ESXi server. Once connected and mounted the iSCSI disk – I was able to register the VM.\nHit the start button, choose the VM was copied and boom – I had a working VM directly from the external disks. From that point on I was able to install the backup agent on it and back it up directly to the tape.\nProblem solved! Yay!\n","permalink":"https://kamilpro.github.io/use-windows-server-as-iscsi-target-with-esxi/","summary":"The task: to move a virtual machine from one ESXi to another. The ESXis are on two completely separate networks. VM size is 5.5 TB, with one file being 5TB.\nThe problem: VM cannot be started due to maxed out resources. There’s no NAS or any other means of storage where the files could be transferred to. From previous experience, I knew that transfer over SSH or USB would be well too slow, as the task was time critical.","title":"Use Windows Server as iSCSI target with ESXi"},{"content":"I’ve been asked to prepare a simple tool which would:\nResolve IP address or DNS Return all results to table Import addresses from a file The reason behind was to check how IP/DNS records change over the period of time, therefore there was a need for something like that:\nA file with all addresses in question Tool which could import all these addresses and resolve them Save the results into a new file Once having at least a couple of files, the results could be compared.\nThere are tools like ping, nslookup or Powershell’s Resolve-DnsName but they simply can’t meet all the requiments (or at least not to my knowledge). So I simply needed to prepare the dedicated tool.\nAnd thus I’ve created Resolve-IPDNS, the source code at the moment of writing this post looks like this:\nfunction Resolve-IPDNS { \u0026lt;# .SYNOPSIS Resolves IPv4 address to DNS, or DNS to IPv4. .DESCRIPTION This command uses either IPv4 or DNS name to resolve either. It puts all the data into a structured table, which can be easilly exported if needed. By default it uses 1.1.1.1 DNS server. .PARAMETER IPDNS One or more IPs or DNS names. Values can be piped. .PARAMETER DNSServer Specifies which DNS server will resolve all the queries. .EXAMPLE Resolve-IPDNS -IPDNS bbc.com,8.8.8.8 Resolves \"bbc.com\" and \"8.8.8.8\" returning their retrospective addresses. .EXAMPLE (Get-Content C:\\temp\\test.txt) | Resolve-IPDNS This example will try to resolve all entries from the file .NOTES Createad by Kamil Procyszyn last updated April 2018 https://kamilpro.com #\u0026gt; [CmdletBinding()] param( [Parameter(Mandatory = $true,ValueFromPipeline = $true)] [string[]]$IPDNS, [string]$DNSServer = \"1.1.1.1\" )#param BEGIN {} Process { foreach ($addrs in $IPDNS ) { #Resolve IP or DNS IF ($addrs -as [ipaddress]) { $resolve_params = @{ 'Name' = $addrs 'Server' = $DNSServer 'Type' = 'PTR' } } ELSE { $resolve_params = @{ 'Name' = $addrs 'Server' = $DNSServer 'Type' = 'A' } } ForEach ($resolve in Resolve-DnsName @resolve_params) { #Create props IF ($addrs -as [ipaddress]) { $props = @{ 'IP' = $resolve.Name 'DNS' = $resolve.NameHost } } ELSE { $props = @{ 'IP' = $resolve.IPAddress 'DNS' = $resolve.Name } }#IF #Output data $obj = New-Object -TypeName psobject -Property $props Write-Output $obj }#Foreach $resolve in dns-resolve }#foreach $addrs in $ipdns }#Process END {} }#function Resolve-IPDNS Let’s break down the function now:\nforeach ($addrs in $IPDNS Since $IPDNS can take multiple values, I want to process the function for every address it is given.\n#Resolve IP or DNS IF ($addrs -as [ipaddress]) { $resolve_params = @{ 'Name' = $addrs 'Server' = $DNSServer 'Type' = 'PTR' } } ELSE { $resolve_params = @{ 'Name' = $addrs 'Server' = $DNSServer 'Type' = 'A' } } ForEach ($resolve in Resolve-DnsName @resolve_params) The code above prepares the parameters which are going to be parsed to Resolve-DnsName . It establishes if the value is the IP address or DNS name “(IF ($addrs -as [ipaddress])” and then specifies the appropiate query type (Either A record for DNS or PTR record for IP).\nIt’s not really necessary, but gives more control over function.\n#Create props IF ($addrs -as [ipaddress]) { $props = @{ 'IP' = $resolve.Name 'DNS' = $resolve.NameHost } } ELSE { $props = @{ 'IP' = $resolve.IPAddress 'DNS' = $resolve.Name } }#IF Now, the script prepares properties for the new custom object. Since Powershell uses different property names for different queries, it’s essential to expand the right ones. As you can see above, for the IP address the IP and DNS properties are called Name and NameHost respectively, while for DNS they’re called IPAddress and Name, respectively.\nBy creating properties that way, I’m able to create an object with two consistent collums: IP and DNS which you can see bellow:\n$obj = New-Object -TypeName psobject -Property $props Write-Output $obj This is it, Powershell will output the nicely formated data onto your screen now:\nIP DNS -- --- 1.1.1.1.in-addr.arpa 1dot1dot1dot1.cloudflare-dns.com 151.101.0.81 bbc.com 151.101.64.81 bbc.com 151.101.128.81 bbc.com 151.101.192.81 bbc.com 151.101.1.67 cnn.com 151.101.65.67 cnn.com 151.101.129.67 cnn.com 151.101.193.67 cnn.com 8.8.8.8.in-addr.arpa google-public-dns-a.google.com As you can see, it can even deal with round robing entries!\nYou can obviously pipe the data into the function and export it to e.g. csv.\nYou can always find up-to-date version of the tool here: https://github.com/kprocyszyn\nMain photo by: Jungwoo Hong on Unsplash\n","permalink":"https://kamilpro.github.io/powershell-tool-resolve-ip-and-dns/","summary":"I’ve been asked to prepare a simple tool which would:\nResolve IP address or DNS Return all results to table Import addresses from a file The reason behind was to check how IP/DNS records change over the period of time, therefore there was a need for something like that:\nA file with all addresses in question Tool which could import all these addresses and resolve them Save the results into a new file Once having at least a couple of files, the results could be compared.","title":"Resolve IP and DNS with Powershell tool"},{"content":"The reason I manage hundreds of workstations working on various Windows versions. As we know, Windows (and other Microsoft’s software) is updated monthly. While usually the process is just working fine, sometimes it simply doesn’t want to work.\nAnd yes, probably Google is your best friend here… but really, who has time to search for the solution, and apply it, manually, if there is more than 1 computer?\nUse the script I used technet, different posts and own knowledge of fixing that kind of issues. All it needs, is admin rights.\nSo what does the script do?\nStops all services needed by Windows update Points client to download updates directly from Microsoft servers. I’ve noticed that if you don’t downstream all categories of updates (as this takes tonnes of free space) there might be an issue with downloading further updates. Still, if you’d like to keep using your internal update server, simply remove line no.5, starting with ‘reg delete’ and ending with ‘WindowsUpdate /f’. Removes local copies/cache/information of updates. Sometimes updates get corrupted, and the only way is to purge the catalogue, so that Windows Update will rebuild it next time you run updates. Restarting all services. You might notice that there is one service which hasn’t been stopped before – MpsSvc – it’s responsible for Windows Firewall. I’ve noticed that Windows Firewall service must be running (even if you don’t use it/use a different firewall), otherwise updates will fail to download. Run Windows update. I couldn’t figure it out (and couldn’t find the actual answer to this) but triggering the Windows Update from the command line doesn’t always work. After all this, just go and fire out Windows Update, allow a few minutes and it should work.\nHow to use the script? net stop wuauserv net stop cryptSvc net stop bits net stop msiserver reg delete HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\WindowsUpdate /f Del \"%ALLUSERSPROFILE%\\Application Data\\Microsoft\\Network\\Downloader\\qmgr*.dat\" Ren %systemroot%\\SoftwareDistribution SoftwareDistribution.bak Ren %systemroot%\\system32\\catroot2 catroot2.bak netsh winsock reset net start wuauserv net start cryptSvc net start bits net start msiserver net start MpsSvc All you need to do now, is paste the script from above to the notepad, save it as ‘Fix Updates.bat’ (don’t forget to pick All Files (*.*) from the drop down menu in Save As window. Then right click a newly created file, and choose run as administrator.\nLet me know how it worked! This is my first ever IT strict post – let me know how you’ve found it! Was it useful? Was it explained well? I’d like to know!\n","permalink":"https://kamilpro.github.io/ultimate-windows-update-fix/","summary":"The reason I manage hundreds of workstations working on various Windows versions. As we know, Windows (and other Microsoft’s software) is updated monthly. While usually the process is just working fine, sometimes it simply doesn’t want to work.\nAnd yes, probably Google is your best friend here… but really, who has time to search for the solution, and apply it, manually, if there is more than 1 computer?\nUse the script I used technet, different posts and own knowledge of fixing that kind of issues.","title":"Ultimate Windows Update fix"},{"content":"It’s unbelievable how long it took me to figure out this simple Powershell script, but yet it does the trick :).\nOften you receive a request to do a certain action with a bunch of accounts, and (obviously) the list provided contains the full names rather usernames. Pain to do it manually, but yet we can utilise Powershell here.\nWhat you need: CSV file, with only one column, and the header of the column must be called “Name”, if you prefer to use something different, simply amend Name in line 6 to reflect your header.\nSo what the actual script does:\nLine 3 = creates variable called $list and tells it to import a CSV file in C:\\temp\\names.csv path.\nLine 5 = creates a loop which will go through all records in from the CSV file\nLine 6 = We retrieve usernames, filtered by their Full Name (Name in AD object property) and tell it should search under Name header.\nThis is it, a few lines of code which will probably save you plenty of time in search of usernames :).\n#Finds username based on full name. Header in CSV file is Name. $list = Import-Csv C:\\temp\\names.csv foreach ($i in $list) { Get-ADUser -Filter \"Name -like '$($i.Name)'\" } ","permalink":"https://kamilpro.github.io/powershell-resolve-full-names-usernames-csv-file/","summary":"It’s unbelievable how long it took me to figure out this simple Powershell script, but yet it does the trick :).\nOften you receive a request to do a certain action with a bunch of accounts, and (obviously) the list provided contains the full names rather usernames. Pain to do it manually, but yet we can utilise Powershell here.\nWhat you need: CSV file, with only one column, and the header of the column must be called “Name”, if you prefer to use something different, simply amend Name in line 6 to reflect your header.","title":"Powershell – resolve full names to usernames from CSV file"},{"content":"This a quick story how sysadmin started running. I hope it will inspire you to do something with your body, mind and people around you. Yes, because once you’ll start feeling better, others around you will start feeling better as well.\nJust a little over 6 months ago… That was November – rainy, windy and cold November. I was exhausted after months of pushing forward the work load. Our team was going through fundamental changes, and the last months towards November were nerve wracking, and there was no light at the end of the tunnel. At least, not at this very time.\nI am a productive person, yet despite giving the best and most out of myself, it simply wasn’t enough.\nEven doing what I like and enjoying it can deplete all sources of energy when it’s too intense. Well, it hit me that very autumn. By that I mean sometimes 12 hours of sleep wasn’t enough to get rested, despite normally I don’t need more than 7.\nI hated the feeling when my focus reinforced by multiple mugs of coffee simply wasn’t enough. Do you know that feeling when you can do all what you can and by the end of the day, you couldn’t accomplish the goals, yet your brain tells you that the following day is going to be the same? I believe I would have left the job if it wasn’t something I wouldn’t seriously love.\nI could keep doing the same and hope for either different results (which is madness) or wait till it would end. My decision was to try something different, which after months became something much more than I expected.\nWhen there’s no clue, talk to a friend I discussed that with my Father, as I simply couldn’t stand my insufficient energy. He said something like “You have to break this through, go and exercise” and so I did. Like never before.\nYes, before all that I was that guy who works in IT department and doesn’t really move much; I didn’t see it as the issue.\nI needed to do something away from the cubicle as I was spending most of the time either in the office or at home, so running seemed like a perfect choice.\nOne evening I put on my old track suit and old sneakers and went out for like a half an hour. It was dark and cold. I wasn’t actually running at the time, it was some kind of quick walk/slow jogging. Yet it exhausted me physically, I came back home all sweaty – like a horse after the western.\nFrom later perspective, I wasn’t that much surprised of the “results”, as for the person who didn’t exercise for over a decade, it was quite a challenge.\nI believe I can RUN! The following day I felt different – less tired, more positive, happier – just because. That must have been the running day before. And it’s been getting better ever since.\nSoon afterwards I’ve started using an app on my mobile phone with preset programmes for running. It was a great idea as this app has been monitoring my progress since then, prompting to stay at the right pace, plus it’s been monitoring my every single exercise.\nHave you ever played RPG games? I spent years playing them, despite the plot I was always excited about the character I played – seeing how it was evolving and getting better with every level. I could now translate the same into my running – monitoring my distance, speed, heart rate etc. over the time. It’s so cool.\nI can literally challenge myself.\nSo has the energy been the only benefit of running? Absolutely not! During one run I burn (according to the app) approx 700kcal, so I’ve lost weight. 8 Kg by now. While I didn’t complain about my body, I enjoy it now more. I just look better.\nBy having more energy, I could actually do more after work. I started blogging on regular basis now (that’s why if you’ve been following me lately you can notice 2 areas I’ve been writing about – IT/Deployment and Motivation/Productivity). I don’t blog as much as I intend to, but… 1 \u0026gt; 0, if you know what I mean. And I’ve passed 1st out of 3 Server 2012 exams, a month ago.\nAt the end of this I will share with you my biggest achievement – I’ve started waking up early to do my exercise. Despite, never ever waking up early, until now. I used to be that guy who was abusing Snooze function on my alarm, till it was too late.\nI don’t have a feeling that my days are wasted anymore\nNow for the difference, I can wake up early, have a shower, breakfast and coffee before I leave home for work. Or even make the bed. And I don’t have a feeling that my days are wasted anymore, since I can accomplish so many things in the morning. Do you know how incredible feeling it is to start the day that way? To sit at my desk and be 100% ready and positive for the day? If you haven’t, then you have to try. And the view of crowds yelling at baristas before 9 am for a coffee? Priceless, from the perspective.\nI started running when I was 28. I wish I knew how great it was years ago.\nIf you aren’t exercise yet, please do me favour and try it, for yourself. You can even go for a fast paced walk, tonight. good sleep guaranteed! Take your other half or… a hamster to keep you company.\nIf you do, drop me a line and tell me your story, I’m so curious how it went!\nMain photo by Riccardo Annandale.\n","permalink":"https://kamilpro.github.io/need-energy-short-story-running/","summary":"This a quick story how sysadmin started running. I hope it will inspire you to do something with your body, mind and people around you. Yes, because once you’ll start feeling better, others around you will start feeling better as well.\nJust a little over 6 months ago… That was November – rainy, windy and cold November. I was exhausted after months of pushing forward the work load. Our team was going through fundamental changes, and the last months towards November were nerve wracking, and there was no light at the end of the tunnel.","title":"Need for energy – my short story of running"},{"content":"Today we are going to inject drivers into the Windows image with the help of built-in tools in Windows.\nWhat do you need? Just a few things:\nAny hardware to which you’d like drivers to be added to Reference computer with the hardware attached to it Drivers Windows image which is going to be deployed I think there’s not much to explain, so let’s analyse the actual process.\nWhat we are going to do? The problem with drivers is that they are often provided as one installation file which contains drivers with self installing package, which is convenient for a single user, but not for us, sysadmins.\nI’ll show you on the example of GeForce drivers how to get and add drivers for your Windows image.\nTherefore, we’re going to play smart, as always:\nObtain the drivers Extract the drivers so that we have access to *.inf files Install the drivers to the actual Windows installation Export installed drivers Add exported drivers to the image Sounds good? Ready, steady, ENTER!\nOn your reference computer Make sure that you have the relevant OS version. If you aim to add drivers to Windows 10, have a Windows 10 ready on your reference computer. It might be possible to have a cross Windows version drivers, but you’d need to test it thoroughly. I’ve seen many misbehaving computers just because of wrong drivers used with them.\nYou must plug-in the actual hardware to your reference computer. Very often single installation file contains multiple drivers used with multiple devices, and Windows will pick and install only the necessary ones.\nObtaining the drivers The easiest way to get latest drivers is to get them from the manufacturer’s website, for your convenience I put links to NVidia, AMD and Intel drivers websites:\nNVidia GeForce – http://www.nvidia.com/Download/index.aspx\nAMD Radeon – http://support.amd.com/en-us/download\nIntel – https://downloadcenter.intel.com/product/80939/Graphics-Drivers\nThis slideshow requires JavaScript. Make sure you pick the appropriate Windows and hardware versions.\nExtract *.INF files Now we need to do something the usual user never does – intercept *.inf files which will allow us to add the drivers to the image. If your hardware manufacturer was nice to sysadmins – by that I mean they provided already the *.inf files then simply skip this step.\nOtherwise, there are 2 main ways of doing so.\nGet drivers extracted during the installation If, like in my example, drivers came prepackaged, you run the installation file. On the first screen I can see (and choose) where the installation files are going to be extracted.\nThis slideshow requires JavaScript. I confirm where they’re going to be extracted, hit OK and once the extraction process has been completed – I don’t proceed with installation, not yet! Just let it be for time being.\nInstead, I go to location where drivers were extracted and copy these files somewhere else.\nThis slideshow requires JavaScript. Extract the files yourself Sometimes you’re not offered with the extraction option and might need to do it yourself. For that purpose you’d need to use an archiver manager like 7-zip. Once installed, use 7-zip to open the installation file, and if you can find *.inf files inside, extract everything where needed.\n7-zip download page: http://www.7-zip.org/download.html\nIf the above ways failed Then manufacturer for some reason made it difficult to you, but we still have a few ways of tracking where the actual files went.\nYou can often find files in:\nRoot of system drive Root of other partition In Windows\\Temp directory While browsing through the folders set your folder view to details and make the most recent files appear on top. You can even use Windows Search and specify last modification time to when you start installation and search for *.inf files.\nFinally, you can use resource monitor to track where installation files makes changes to the hard drive.\nYou can also, export already installed drivers. While it’s really convenient, it’s not always that easy to find all drivers once deployed. I always would like you to have a full picture of the whole process.\nInstall the drivers Now we can carry on with installation. But before doing so, I’d like you to open C:\\Windows\\System32\\DriverStore\\FileRepository folder and sort folders by “Date modified”, with the most recent on top. Note the time when you start the installation.\nOnce the installation of your drivers is commenced, you will notice as new folders are being created – these are drivers needed by your hardware. You can open these folders and see that there are plenty of files.\nThis slideshow requires JavaScript. You can notice that those folders have a naming convention – name.infarchitecturerandomnumbers. You’re after the green part – name.inf That’s the name of the *.inf file you’d like to add to the image from your source folder – I’d like you to take a note of the green part of the name, as this will be essential to the next step.\nI started installation of driver just after 22:20 on 24th of May, and as you can see I’ve highlighted the folders created just after that time. The files I’m going to look for are:\nNv_dispi.inf Basicrender.inf Nvstusb.inf Nvhda.inf If you’ve read my post about Mastering PNPUTIL, then you’ll know how to use this tool to add drivers to your image. Otherwise, stay with me.\nOn your Windows image Let’s armour now the image in the right drivers we’ve just acquired. You will obviously need to make them available to the image, either by shared folder or copy/paste. I simply copied all installation files to C:\\Temp\\NVidia folder. Keep this folder open as we’re going to need it very soon. Like in 2 paragraphs soon.\nI’m going to show you now 2 ways of installing drivers – with GUI and command line.\nOn the side note: if you’d like to confirm the files are being added to the driver store, simply open another Windows Explorer window and head towards C:\\Windows\\System32\\DriverStore\\FileRepository like you did on your physical machine as you did before.\nAdd drivers with GUI While still in the folder with the drivers, simply type in the Search Box the filename of the first *.inf file of which I’ve asked you earlier on. In my case it is: Nv_dispi.inf. It should show up only one file. Now you’d like to right click the file, and choose Install.\nOnce completed you should receive a message stating that operation was successful.\nRepeat the process for all drivers you need and that’s it – your image will come with drivers and system will install them automatically when hardware is detected.\nYou can confirm it by either going to FileRepository folder or Issuing pnputil.exe /e command in command prompt.\nThis slideshow requires JavaScript. Add drivers with Command prompt – PNPUTIL This way is slightly more complicated, nevertheless, let’s have a fun!\nOpen elevated command prompt and use change directory to where your drivers are. In my case I issued the command CD C:\\Temp\\Nvidia Now type pnputil -a filename.inf /subdirs. In my case, it was pnputil -a nvstusb.inf /subdir This will tell PNPUTIL to search for this particular file in all sub directories of the current folder. You should receive a message stating something like:Microsoft PnP UtilityProcessing inf : NV3DVisionUSB.Driver\\nvstusb.inf\nDriver package added successfully.\nPublished name : oem20.infTotal attempted: 1\nNumber successfully imported: 1 Repeat step 2 for all the files needed. That’s pretty much it.\nThis slideshow requires JavaScript. Your image has just got better! Deploying drivers had always been a mission before I’ve figured out the way I had shown you above. While there are some tools/scripts which can deliver the drivers in one way or another (and with the tools there is always a question of how reliable the tool is) having drivers injected to the image will always ensure the hardware is operational straight after deployment.\nThe 2 drawbacks of the whole process in the matter are: having a larger image and updating the drivers on the image. While the size and deployment time shouldn’t be a big deal nowadays, keeping up-to-date images is probably your responsibility after all. Not to mention the time saved for troubleshooting as this method works always, 100%, positive.\nDid you enjoy reading the post or found it useful? I’m really keen to know! Let me know below in the comments section.\nI’ve spent hours searching a way/tool capable of fully automatic drivers deployment to the computers of different hardware specs. I ended it up analysing and figuring out all this myself.\nTips If you can’t get the installation files of drivers, but you’ve got already a system where this hardware works, you can export by: open device manager identify the device you’d need the drivers for. Double click on it, choose Details tab and choose “inf name” from property drop down menu, note down the OemXX.inf file name. Create a folder, e.g. C:\\Temp. Then open elevated command prompt and type **pnputil /export-driver OemXX.inf C:\\Temp **You can copy exported file to the missing computer and install them like we did before. If you’ve added the wrong driver, use PNPUTIL /delete-driver OemXX.inf /force to remove it from the driver store. If after the installations of the drivers you cannot find some folders in the installation files (e.g. basicrender.inf) then don’t worry – these files might be default for Windows and system might use the while installing new drivers. Someone can say, that you could use PNPUTIL to add all files *.INF to the driver store, but by the time when the actual process ends, you’ll notice that your driver store folder has swelled multiple times (in my case, that was 10GB after adding all *.INF files from GeForce folder!), containing many drivers which you actually don’t need. Main photo by Jeff Sheldon.\n","permalink":"https://kamilpro.github.io/add-any-drivers-to-windows-on-example-of-gpu-drivers/","summary":"Today we are going to inject drivers into the Windows image with the help of built-in tools in Windows.\nWhat do you need? Just a few things:\nAny hardware to which you’d like drivers to be added to Reference computer with the hardware attached to it Drivers Windows image which is going to be deployed I think there’s not much to explain, so let’s analyse the actual process.\nWhat we are going to do?","title":"Add any drivers to Windows – on example of GPU drivers"},{"content":"Bump. A new email has just arrived. Have to check it. Now. I might reply to it earlier, but need to read it now.\nSeriously, why?\nWhile being on top of every single thing might sound super productive, it’s not. Being busy doesn’t mean that you’re productive. Being busy means you’re busy, got nothing to do with effectiveness.\nThis is the reason why you’d like to play it smart, and to organise your job into batches.\nWhy batching your job is cool To get the idea of batching we need to see how it is usually done. I’ll use the email as the example, but it can really apply to anything what we do on regular basis.\nNow, honestly, answer to yourself how many times a day:\nYou check email. On your phone, computer, laptop, tablet. You come back to email once read, to reply/delete/archive it How long does it take you each time More than couple of times a day, isn’t it? Probably more than a couple of minutes each time, isn’t it? Now simply do the maths, and see how long it takes you. Even if it’s 20 minutes a day, that’s 140 minutes a week!\nEven if you can recover only half of this time by a method I’ll shortly show you, that would be still more than 1 hour of your life weekly. Extra 52 hours a year, and we are only talking about emails.\nSmall numbers are impressive when they are actually accumulated, eh?.\nHow can you batch your tasks? I know it might sound crazy (especially when you are in customer handling job) but… check your emails on regular times. It might be twice a day, or every other hour. The main idea is to check the email when actually you’d like to, rather than when the sender wants you to.\nThis benefits you in a few ways:\nYou have a better planning ability, knowing that you’re not hooked up constantly to the email. You won’t get distracted by checking each email coming to your inbox. By not jumping instantly on your email, others might start respecting your time more. While checking the email, say, every other hour everything will accumulate and wait for you. It shouldn’t take too long to quickly go through emails which are junk and get rid of them.\nNow the goal is pretty simple – action all emails so that you won’t need to come back to them. Reply, archive, delete, ignore – do whatever it takes to go through your inbox. And if there is something that you really cannot act straight away – mark/flash/categorise it so it will stand out of other emails and be easily searchable.\nWork in this pattern for at least few days to get the idea of any time improvement.\nHow come this method works? You don’t get distracted for one – and we all know how bad it is when we’d need to focus and/or prioritise one task and are constantly distracted by something. This is a big win.\nYou don’t need to waste time to open and close the email application and the actual email. I know, it might be as short as 10 seconds, but multiply 10 second by 30 emails and it’s simply time wasted.\nIt’s like buying a coffee every morning in the coffee shop. £3 pounds isn’t much, but if we do quick maths: £3 * 5 times a week * 4 weeks = £60. This is a dinner for 2, rather than a morning coffee in rush.\nSome tips about batching: If you’re afraid of applying this method, simply talk to your manager. Explain that you want to be more focused and productive, and this way will not destroy your business. You can agree to trial this method for a couple of weeks. If you’re using the email application which you cannot turn off, use function to “Work offline”, so that new emails will not come to your inbox. If you’re worried about upsetting your sender, you can set out of office message stating that you check your email at certain times and if your attention is needed immediately to call your mobile/landline. You can extend batching beyond the email While email is great example, here are some ideas how to regain even more time:\nReading news on many websites – rather than checking all of them, you can sign up for some news aggregator e.g. feedly which will collect all the news from the websites of your choice. Whenever convenient, you open feedly and all your news are waiting for you. Like said emails. Social media, it’s a massive time eater. Certainly, you can switch off all notifications so that your phone/browser will stop bombarding you about comments and other likes. While it’s super tempting for the first few days to see if you not missing out, after a while that feeling will go away. ","permalink":"https://kamilpro.github.io/start-batching-your-tasks/","summary":"Bump. A new email has just arrived. Have to check it. Now. I might reply to it earlier, but need to read it now.\nSeriously, why?\nWhile being on top of every single thing might sound super productive, it’s not. Being busy doesn’t mean that you’re productive. Being busy means you’re busy, got nothing to do with effectiveness.\nThis is the reason why you’d like to play it smart, and to organise your job into batches.","title":"Do you check email every 2 minutes? Start batching your tasks"},{"content":"Drivers – that’s what makes a harmony between hardware and software. Appropriate drivers can make a huge difference between computer’s performance, stability and even temperature. Therefore it’s super important to make sure you’ve got up-to-date files included with your image or Windows installation.\nWe are going to review PNPUTIL tool – the versatile tool for handling drivers within the Windows.\nWhy do you need PNPUTIL? Yes, why bother with some command line tool (PNPUTIL is command line only) when there are dedicated installers and device manager? Not to mention that Windows update can download pretty much every single driver missing from the Internet.\nWell, it’s not that wonderful when there is a need to prepare a couple of dozens of computers.\nWhile all sort of installers need hardware to be present during the installation, PNPUTIL doesn’t. In fact, as long as you can provide driver files – *.inf to be more specific – you can add them to the image, and Windows will use them when it has detected the hardware.\nThat allows you to supply drivers before installing Windows on the target computer, which saves time after deployment. Drivers will be therefore installed automatically during Windows installation – fully automatically.\nWhat is the Driver Store Windows needs to store all the drivers in one location. Whenever you add, install, update or remove drivers, the OS will use the Driver Store as well as Windows Update to make your devices work properly.\nTake any driver, and you’ll find (among other files) at least one *.inf file. Windows will use the file to install the driver, using reference in the file to make sure that everything has been installed properly.\nAnother important task of adding new drivers to the driver store is security check of the file, making sure that the driver hasn’t been changed since developer released it.\nYou can find driver store in: C:\\Windows\\System32\\DriverStore.\nAdding vs Installing While these words are usually used interchangeably, they have a different meaning in Microsoft terminology.\nAdding means copying the driver and associated with it files to the Driver Store. During that process, all files will be checked for integrity and security. Adding the driver will not make your device working straight away, Windows will need to install it.\nInstalling means using the added driver for the actual hardware. Whenever computer detects a new hardware connected, it will go through the Driver Store/Windows Update and set up the device, provided there is a matching driver available.\nYou can think about it like having spices in your kitchen. When you go to shops you buy pepper, salt, sage, paprika and rosemary. This can be compared to downloading the drivers. Then you unpack these spices and put them in your cupboard. This is adding drivers to the store. Finally, you cook chicken and realise the salt, pepper and paprika will be necessary for it, so you take these spices out of the cupboard and season your chicken. This is installing the drivers.\nI’m getting hungry now, so let’s better move on to the next step.\nPNPUTIL syntax There are only 4 main syntaxes in PNPUTIL, which allow you to add, remove, export and list all the drivers currently in the driver store.\nWhen you’ll open the command prompt, type PNPUTIL and see:\n/add-driver \u0026lt;filename.inf | *.inf\u0026gt; [/subdirs] [/install] Add driver package(s) into the driver store. /subdirs - traverse sub directories for driver packages. /install - install/update drivers on any matching devices. /delete-driver \u0026lt;oem#.inf\u0026gt; [/force] Delete driver package from the driver store. /force - delete driver package even when it is in use by devices. /export-driver \u0026lt;oem#.inf | *\u0026gt; \u0026lt;target directory\u0026gt; Export driver package(s) from the driver store into a target directory. /enum-drivers Enumerate all 3rd party driver packages in the driver store. Add /add-driver option allows you to add a driver to the store. If you provide specific INF file, only one driver will be copied, however using a wildcard *.inf will install all drivers within the current directory. You can also use /subdirs to do bulk load to all files in the child folders. Last option /install will install or update the drivers, however, Windows should perform it automatically once the devices have been detected.\nDelete Sometimes you’d like to remove a certain device from the device manager, but it keeps coming back with maniac’s resistance. The reason is the device is being only installed, but the actual files are present in the driver store.\nThat’s when you’d like to use **/delete-driver **with /**force **option. It will uninstall and purge the files from the driver store, even if the device is currently used.\nExport /export-driver is especially useful when you need to copy drivers from one computer to another, while not having the original driver source available. PNPUTIL will create an exact copy of the driver being used in the current system, which you’ll be able to add to another computer later on.\nEnumerate /enum-drivers will show you the list of all drivers in currently being kept in the driver store. You’ll be able to find the type, vendor, version and name of the driver.\nAll drivers will have the OemXX.inf naming convention, while XX is the unique number of the each driver. You can use that tool to identify drivers which you’d like to remove or export.\nHints/More stuff to read You can use command PNPUTIL /enum-drivers \u0026gt; C:\\temp\\drivers.txt to create a file with the list of all current drivers. You can find names of drivers in Device Manager. Simply click the device you’d need the drivers for, pick details tab and choose “inf name” from the drop down menu. I did write more about creating the Windows 10 image here – https://kamilpro.com/prepare-windows-10-1607-image/. ","permalink":"https://kamilpro.github.io/mastering-pnputil-add-drivers-windows-image/","summary":"Drivers – that’s what makes a harmony between hardware and software. Appropriate drivers can make a huge difference between computer’s performance, stability and even temperature. Therefore it’s super important to make sure you’ve got up-to-date files included with your image or Windows installation.\nWe are going to review PNPUTIL tool – the versatile tool for handling drivers within the Windows.\nWhy do you need PNPUTIL? Yes, why bother with some command line tool (PNPUTIL is command line only) when there are dedicated installers and device manager?","title":"Mastering PNPUTIL – how to add drivers to the Windows image"},{"content":"“I’m going to lose 10 KG”\n“I’ll start exercising”\n“I’ll crack on with my studies and get a better job”\nCan you recall any of these? We prefer to set ourselves goals within certain time frame, like beginning of the year, month or week. That sort of fresh-start gets extra power as a statement, allows us to easily cut off the imperfect past from the all new and wonderful future.\nThe better I. Me version 1.5. Promises, promises, promises.\nWhen would you like to squeeze it in? Despite who and where you are, there is one resource we all have in common. Time. We all have 24 hours a day and it’s up to us how we spend it.\nI believe that you’ve got your routine set during a day and much of this time will be occupied by things like commuting, working, cooking etc. That takes significant, if not a major part of the day – by this I mean your time and energy.\nSo, when would you like to squeeze in that new promise, provided you don’t know how long and if you’d really like to do that. Anytime you pick, it will probably affect your daily rituals anyway.\nYou’ll then need to spend extra time and energy, which your body system might not be really happy about.\nTherefore, at the very beginning of something new, you’ll be off the track, with less energy and probably more stressed than you should be. I believe that starting a new experience should be straightforward as possible, which leads me to the next point:\nWhy not start a new hobby on the next day off That will allow you to choose from 24 hours the perfect time to kick off the new hobby. Rather than forcing yourself to do it before/after your normal routine.\nHow does it sound now, 24 hours available to choose from, rather than only few, probably a rush, eh?\nYou are the one who knows your body and mind best, therefore can easily tell when you’re most productive – use it to your advantage. It’s entirely up to you how your new experience going to be, so why not make it the best possible?\nOh yes, don’t forget to get rid of distractions, like mobile phone notifications and all sort of social media or TV time wasters. Try to focus as much as possible on your new task.\nAnd don’t rush. It will put unnecessary stress and prevent you from concentrating fully. If you need to be somewhere, simply set an alarm 15 minutes before you need to go – 15 minutes will allow you to wrap it up nicely.\nWhat if I tried and liked it? Firstly you’d know how it tastes, whether you’d like to carry on or maybe drop it.\nYou should have an idea how the new hobby affects you and how long you’d need to accomplish it. As you know what to expect, it’s much easier to plan and this time for the difference, implement it during your normal routine.\nI’ve been trying new things doing that way for a few years now, but many turned out to be a flash in the pan, nevertheless, I still carry on with doing some of them – like running.\nRather than keep postponing your ideas, blaming yourself for lack of time or courage – simply try them when you’re off next time.\nThings don’t matter, until executed.\nMain photo by: https://unsplash.com/@arstyy\n","permalink":"https://kamilpro.github.io/why-saturday-is-best-to-start-new-hobby/","summary":"“I’m going to lose 10 KG”\n“I’ll start exercising”\n“I’ll crack on with my studies and get a better job”\nCan you recall any of these? We prefer to set ourselves goals within certain time frame, like beginning of the year, month or week. That sort of fresh-start gets extra power as a statement, allows us to easily cut off the imperfect past from the all new and wonderful future.","title":"Why Saturday is best to start new hobby."},{"content":"Sooner or later every company will come to the point when using standard Windows image is just not enough. Manual installation, fetching all updates or installing software etc. etc. takes time, and in IT, we really can use that time for something way more productive.\nTherefore, I propose you to create your very own, customised, Windows 10 image which will save you tonnes of time.\nLet’s set some goals:\nAutomatic installation – no questions about user accounts, settings etc. Hardware neutral – image will be installable on any kind of computer with necessary drivers equipped within. Customised – image will be shipped with software and other preferences so that employees will be able to “just” log in straight after deployment. Sounds good? So let’s start preparing.\nPrepare for Windows 10 image creation I know you’d like to just jump in and start creating the new image, but to prepare the image properly there are necessary setup steps needed before the actual process. The benefits of this preparing will come handy in the future.\nWhat you’re going to need is:\nPC capable of virtualisation – Since the image creation will happen in VM (Virtual Machine), we need hardware capable of this. If you’ve got a dedicated machine already – that’s great – if not, then any computer manufactured within the last few years, which can afford at least 2GBs of memory for virtualisation (you can assign less than 2GBs of memory, but everything will be slow. Like really, slow) and hard disk space – only you know how much space you’re going to use for this task. However, bare in mind you should allow extra space for the checkpoints. If you can afford to use SSD that’s great – it hugely improves the speed of the process. Windows 10 ISO file – you’d need this to install the actual image and to create so-called “answer” file out of it. Windows ADK – this will be used for creating the answer file. Hypervisor with checkpoint function – this will allow us to create a VM with the actual image, while checkpoints can save plenty of time in case something goes wrong or must be amended. Software and customisation files which are going to be shipped with Windows. Drivers. Internet – not necessary, but really helpful. As long as you’ve got the hardware capable of virtualisation, the rest comes from the Internet, or your software repositories.\nWindows 10 ISO file The fastest way of getting the Windows 10 ISO file is to go to: https://www.microsoft.com/en-gb/software-download/windows10ISO or google “Windows Media Creation Tool”. Once on the website, pick “Windows 10” from the drop down menu (unless you’ve got licence for a different version). If your company happens to have a volume licence with Microsoft, then expand “More Download Options” where you can find links to MSDN websites.\nWhen using Media Creation Tool, make sure to pick *.ISO file during the process. The file will be later on used in both, hypervisor and answer file.\nDo not try to obtain images from any other, unofficial sources, as there’s always a chance of getting something “extra” from dishonest people. Nobody likes “extras” in Windows images.\nWindows ADK https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit\nWindows ADK (Assessment and Deployment Kit) is a set of tools required for image customisation and checking the performance of the computer. You need to fetch the version corresponding to the Windows image creation, as of writing this article, the newest version is Windows 10, version 1607.\nStart the downloaded file, and upon the choice you need only 2 out of all:\nDeployment tools – SIM (Windows System Image Manager) – this tool is used to create the answer file, which will allow for automatic installation of Windows. Windows PE (Preinstallation Environment) – will be used for capturing the image. Unless you’ve got other solution in place (e.g. Norton Ghost) this tool is necessary. Hypervisor The customised image will be created within the VM and therefore hypervisor is essential to it. The second requirement are snapshots, which will allow us to roll back any wrong changes, as well as re-use the image for any amendments/updates required after creating the initial image.\nSnapshot = Checkpoint. These words can be used interchangeably.\nI can only think about 2 free options here – first is Microsoft Hyper-V, which comes built in Windows 8 or 10 in Pro edition, or any Windows Server since 2008 version. If you don’t have a such a possibility, you can use VirtualBox, which is free and has desired checkpoints functionality. Obviously, any hypervisor with checkpoints feature should do the trick.\nI’ll be using Hyper-V since I’ve got Windows 10 Pro in my setup. To install Hyper-V on either Windows client or Server, make sure that Virtualization is enabled in your BIOS/UEFI setting, this is often called Intel VT, AMD-V or simply Virtualization Technology.\nIn order to instal Hyper-V in Windows Clients, go to Control Panel\u0026gt;Programs and Features\u0026gt;Turn Windows features on or off. Then expand Hyper-V menu and make sure that you can tick Hyper-V Management Tools and Hyper-v Platform. You will need to reboot the PC for the role to become active.\nIn Windows Server, you will need to add Hyper-V role to the server and reboot the server afterwards.\nSoftware It might be any sort of installer or even copy-paste type of application. If it works with the standard Windows installation, it should work with the customised image.\nCustomised files – this will be any specific wallpapers, files etc. which are used to brand the image.\nDrivers Since Windows 10 is shipped with plenty of drivers out of box, there are still many propetiary ones which must be either downloaded via WU (Windows Update) or installed manually. If your environment does not allow/provide drivers download via Windows Update, you must add them to the image.\nI did write a whole blog of how to add any drivers to the image.\nIn other words, you need drivers with *.inf files, some manufacturers allow you to download the whole package of *.inf files for a computer series, some don’t. In such a case, you might need to unpack the drivers manually to get *.inf files out of it.\nPrepare the environment for Windows 10 image I hope you’re still bearing with me to this point, the most boring parts is behind us – I mean gathering all the stuff needed for the image creation.\nLet’s look up the steps to follow:\nCreate VM Install Windows Put set Windows into Audit mode Install software Add drivers Customise Menu Start Creating answer file Testing the image Shall we begin?\nCreate VM + Virtual Switch for VM VM will need a connection to the local network as well as the Internet. Therefore we need to create a virtual switch to which the VM is going to be connected.\nCreating Virtual Switch To create a virtual switch you need to:\nVirtual Switch manager Highlight new virtual switch, pick “External”, and click Create Virtual Switch Give it meaningful name e.g. Internet, make sure that External radius is ticked and choose the network card which used to connect to the Internet, click OK. The network switch is being created. Once your virtual switch has been created, we can start creating the new VM and use the switch to connect VM to the Internet.\nThis slideshow requires JavaScript. Creating Virtual Machine Now it’s time to create our virtual computer – a place where a customised image will be created, maintained and captured! Are you excited, like me?\nRight click on the name of your server, highlight new and choose Virtual Machine. Specify the name e.g. Windows 10_1607, and you can change the location where VM will be saved if needed. Make sure the disk you’re going to use will have at least the amount of space you plan to use for your VM. You can choose either generation, but I strongly recommend Generation 2 (which is supported for Windows 2012/8 onwards), generation 2 allows you to simulate UEFI, boot from SCSi adapters (which perform faster than IDE) and are power-failure proof. Memory. Assign at least 2 GBs, if you can 4GBs. You can leave Dynamic memory tick on, however, it shouldn’t make any difference in this scenario. In the configuring networking window, choose the Virtual Switch created earlier on, this will allow the VM to talk to the rest of the world. Virtual disk – in other words, the special file which behaves like a hard drive. Probably you will only want to amend the size of, I find 60GB very minimum, but again, it’s entirely up to you. The last step needed for the configuration is Installation option – in other words, pointing VM to the installation media. Simply choose the ISO downloaded earlier on. On the Summary window, verify all the settings and hit finish if you’re happy with all of them. Hyper-V will create your VM now, you should be able to see it in the main Windows of the Hyper-V.\nThis slideshow requires JavaScript. Windows 10 installation Yes, we are just a step before installing, but hold your horses for a second, there’s one more point worth considering.\nAudit mode or OOBE mode? When you perform the standard installation of Windows, you simply boot to OOBE (Out of box experience) every single time. Then you go through the process of customising the installation and creating user account etc.\nAudit mode is, on the other hand, a special mode dedicated to preparing Customised Windows image. It will e.g. automatically log in to the Administrator account, which will be removed once the work in the Audit mode has been finished. Changes made in the Audit mode will be then copied to every new user logging to the PC, which keeps the user experience. Yet working in the Audit mode is exactly identical like in OOBE.\nYou can even switch between OOBE/Audit modes once Windows 10 has been installed, but why not start from using Audit and simply keep using it, from the beginning?\nTherefore it’s not required, but I’d recommend you to use the Audit mode for the image creation.\nLet’s install Windows 10! All the preparation will now pay off – you’ll be able to go and set up everything as desired, using the software which you’ve prepared earlier on.\nAs mentioned earlier, I’ll follow the Audit mode way and prepare my image in that way. The process of installing is almost the same for Audit and OOBE mode, however, I’m going to indicate the moment when you need to make the call.\nStart the VM. On the screen “Press any key to boot”, press any key. On the “Windows Setup” screen, choose Install now. Now you’re going to be asked to provide a licence key. In case you don’t have it yet, you can simply skip this and provide the key later. Choose the edition of Windows 10 which you’re going to install. I recon it’s going to be Pro, which will allow you, among other things, join the computer to the domain. Once you are aware of the agreement content, tick the box and move forward. Since this is a freshly created VM, its hard drive it’s literally empty. Therefore the only thing you can do now is to choose Custom: Install Windows only. On the following screen just click next, Windows installer will partition the drive and utilise all space. Even if you’d need additional partitions, you’ll be able to order Windows to create them during the deployment process. This slideshow requires JavaScript. The Windows installation starts now. It will take some time and reboots before reaching the next screen, on which you’ll need to make a decision about the mode used for installation.\nThe Audit mode trigger is hidden; you must use a keyboard shortcut to activate it.\nPress simultaneously ALT + SHIFT + F3, after which VM will instantly restart and boot to audit mode shortly.\nWindows will now automatically log in with Administrator’s account, and present you with SYSPREP (System Preparation Tool) window, which you’d like to cancel. The tool allows you to set Windows 10 back to OOBE mode generalise (which I’ll explain later on) and restart it. Just cancel it. It might be worth to take a check point at this moment.\nThis slideshow requires JavaScript. Customise the image Now it’s time to install all the software you need, but how to provide it? We could use so-called guest services and start copying all the installation files, but that would take first time to do so, secondly the size of the VHD would start growing.\nRather than that, let’s go good, old network sharing. Not only it will allow us to install folders without copying them all to the VM, but also will deliver the answer file, or will allow exporting e.g. customised menu start settings.\nCreate the network share on your host machine Open the folder where you’re going to store all files needed by your VM.\nOpen properties of the folder. On the properties window, change tab to “Sharing” and choose “Advanced Sharing…” Tick the box “Share this folder” and choose “Permissions”. You might note down the folder name as this will become the name of the actual share. Grant full access to the account which is going to access the network share on your host machine. I granted access to Everyone. Click OK twice and once backed to the properties window, change tab to “Security” and choose “Edit” button. Click Add. Type the same username which you’ve used in the Sharing permissions. Grant “Allow – Modify” rights to the user. Click OK on all windows. This slideshow requires JavaScript. You might ask why we’ve had grant access to the same user in 2 different places. Since this is not an article about shares and permissions I’ll keep it short – Windows differentiates 2 levels of access – local and networked. The user must have access locally to be able to access the files at all and locally, that is, while working on the actual computer. Networked access allows users to access the files over the network, and folders accessed that way are called shares. In the case of when a user has only network rights, one still won’t be able to access the files because of the lack of the local permission.\nMap the network drive Once the network share has been created, it’s time to map it. That process is called mapping the network drive because ultimately it will show up alongside other drives – hard and flash disks and optical drives.\nHead towards “This computer.” Choose “Computer” tab and click “Map network drive.” On the following screen specify the location of the network share – the format is: \\\u0026lt;name of the share\u0026gt;, the name of my host is KMLPRO and the name of the share is VM_installers therefore the full path will be: \\KMLPRO\\VM_installers. Tick the box “Connect using different credentials”. You might also tick the box “Reconnect at sign-it”, that way Windows will store your login details to the server and automatically map the drive the next time you log in. Feel free to change the drive, if you’d like to. You’ll be asked to provide details of the account which you’ve granted access rights earlier on. This slideshow requires JavaScript. Once completed, you’ll find your mapped network drive alongside other drives in the computer view.\nInstall the software, customise the settings Now you’ve got to the point where you can perform an installation of any software needed.\nTry to use officially released MSI files. In the case of updating the image later on, MSIs always make sure to get rid of the old version of the file and upgrade. If possible, avoid launching the applications. It might amend some default settings which users might not like. Install the latest .NetFramework (as well as other libraries) possible, that will save time, both your and your users. Do not forget about the new Menu Start, you can pin applications often used by the users. Once you’ve completed the customisation process, take the checkpoint. Just in case.\nDrivers “Software comes and goes. Hardware is forever,” they said, but to make that hardware work, we need drivers.\nWhy not rely on the Internet/Windows updates? The problem with drivers is that they often won’t install, unless there’s actual hardware present at the moment of installation. You can obviously rely on Windows Update and hope that everything will be self-installed, but do you really want to?\nI personally cannot imagine deploying Windows to more than 10 computers and allowing them to go to Windows Update and start downloading, then wait for reboots etc. Nope, that doesn’t work like that in an enterprise.\nUnless you’re in the situation where you can utilise Windows Update, then you can skip that part. But you’ll miss so much fun with having control of every single driver on the image.\nPNPUTIL – Drivers’ best mate Microsoft includes in the Windows a brilliant tool called PNPUTIL, which basically allows managing drivers and give you as the administrator the control over the drivers inside of the VM.\nHave I mentioned that we will need to go command line? Oh well, now I’m telling you. But it won’t be scary, I promise. PNPUTIL is a command line only.\nMain PNPUTIL switches which you should know about: /enum-drivers - enumarates (lists) all stored drivers /add-driver - adds driver to the driver store /delete-driver - removes the driver from the driver store Driver store – what is this? Windows comes with plenty of drivers out of the box – however, it’s impossible to include every single driver to every single device, or even make sure that all the drivers are up to date.\nTherefore, here comes the idea of the Driver Store – think about it like installers for your software – you have the installer, but you install the software when it’s actually needed by the user.\nSame happens with the hardware – when a new device is connected, Windows goes through the store and looks for the appropriate driver. That way we can load all needed drivers and Windows will use them only when they are needed. This is cool, isn’t it?\nLet’s add some drivers! If you’ve done a good job preparing your drivers (*.inf files) organising them into folders (e.g. C:\\Temp\\Drivers\\Audio, C:\\Temp\\Drivers\\Video etc.), then follow the instruction below. If not, go and organise them now.\nGo to the folder where your drivers are, press and hold the SHIFT ket + right-click the mouse and choose “Open command window here”. Type “pnputil” and hit enter, familiarise yourself with the command details (for your own reference) Type pnputil /enum-drivers and look how many drivers are needed. Since this is VM, there a just a few in use. Type *pnputil /add-driver .inf /subdirs. This will order pnputil to go through all the folders and add any driver it finds to the store. It might take a while depending on amount and size of drivers you’ve prepared. Upon the completion, you’ll see how many drivers have been added to the store. This slideshow requires JavaScript. This is it, that one step closer to the hardware neutral Windows image. Enumerate the drivers now, see how many has been added to the Drivers now. Don’t forget to take the checkpoint.\nUnattended installation Are we there yet? Yes, almost there!\nOnce you are happy with all customisations you’ve just done, it’s time to tell Windows, what to do during the installation. Why? To not get all that prompts about licencing, partitioning, the name of the computer and user etc. We are going to be like this bartender from the local pub, who knows us good enough to serve everything we like. Sounds cool? Keep it coming then!\nI must admit, I was really impressed (like WOW impressed) when saw fully automatic Windows deployment for the first time in my life – from the beginning of the process – when Windows configured itself until it reached the Logon/Desktop screen.\nCreating WIM file Unattended installation means automatic installation – which is our goal. Essential part of it is the Answer file – the file which will tell Windows installer what to do during the installation. We obviously, are going to create are own answer file.\nWe are going to need WIM file, which is in short take, the actual compressed Windows – whenever you install Windows, it’s being decompressed and installed to the local hard disk. Where’s the file then? You’ve guessed it right, on the Windows 10 ISO, the same which we’ve used to install Windows 10 earlier on.\nMicrosoft started using ESD files to include Windows installation files, which are way more compressed than actual WIM files. Therefore first step is to copy the ESD file off the ISO, then convert it to the WIM file to finally use for the Answer file creation.\nRight click on the ISO which you’ve used to install the Windows 10, mount it. ISO will show as ordinary DVD drive, open it and go to the “Sources” folder, and find install.esd file. It’s the biggest (approximately 4GBs) file over there. Copy the file off the image. I can suggest to create a dedicated folder where you’re going to store all ISOs used for installation and another folder called WIM where you’ll store WIM files. The reason behind is that you should always use the WIM file from ISO used for installation. Don’t forget about meaningful names. We need elevated (administrator) command prompt, right click on the Windows menu and choose it then. Change directory to where the ISO is. You can use DIR command to make sure you’re in the right folder and can see install.erd file. Type command: dism /Get-WimInfo /WimFile:install.esd You should see the list of available Windows 10 edition included in the ISO. I’m going to need Pro edition therefore will choose Index:1 Type command: **dism /export-image /SourceImageFile:install.esd /SourceIndex:1 /DestinationImageFile:Windows10_pro_1607.wim /Compress:max /CheckIntegrity **I’ve highlighted the index number and the file name in case you’d like to change it. This slideshow requires JavaScript. Wait until the process has finished and we can move on to the actual answer file creation. You’ll find the WIM file in the same location where ESD file is.\nAnswer File It’s time to tell Windows off, literally. We’re going to prepare the answer file, which will guide Windows through the installation – and achieve automatic installation there.\nThere are tonnes of possible settings to configure, therefore I will focus on bringing you to the automated installation which you might use as the base for your answer file. Most of the settings are well documented which is a great help.\nTo create the answer file:\nOpen Windows System Image Manager. Press the “New Answer File” button. Say yes to open the Windows Image file. Point to the WIM file created earlier on. Confirm creation of the catalog file. This slideshow requires JavaScript. It will take a few minutes for SIM to complete the image creation process. Upon finish, you’ll be presented with the new SIM windows with more options than before.\nAnswer file reflects different Windows installation stages (passes) – there are 7 of them, however, we need only a few for our needs.\nThe components part contains the actual jobs that Windows Installer performs during different parts of the installation. One component can be added to multiple installation stages. Components are added by right-clicking on them and choosing to which part they need to be added.\nNecessary components for automated installation:\nPhase 1 WinPE:\namd64_Microsoft-Windows-International-Core-WinPE amd64_Microsoft-Windows-Setup Phase 4 Specialize:\namd64_Microsoft-Windows-Shell-Setup Phase 7 OOBE\namd64_Microsoft-Windows-International-Core amd64_Microsoft-Windows-Shell-Setup I really wanted to describe all the components, meaning what you should type and where, but it would take way too much time and space. Instead, I’ll simply paste the answer file here and describe what it does in each phase.\nAnswer file – Windows_10_pro.xml (right click and dowload/save link as)\nUse SIM to open the file above, and point to Windows 10 1607 WIM file.\nPhase 1 WinPE That one happens when you actually boot a computer from the installation media and are presented with the install now screen.\nWhat happens in “amd64_Microsoft-Windows-International-Core-WinPE” is to choose which display language should be picked.\nThe “amd64_Microsoft-Windows-Setup” tells installer to wipe the first hard drive, then create 4 partitions (as needed for UEFI) and to modify them. While first 3 partitions are needed for Windows to run and have a fixed size, the 4th – where the actual OS is – will use all remaining space for itself.\nPhase 4 Specialize That phase happens when Windows is “Getting ready”. You can notice a CopyProfile option – it tells the installer to take Administrator’s profile (the same which you’ve customised earlier on in the Audit mode) and set it as the default profile – so that every profile created on the computer will have the same customisation.\nThe product key used here is generic Windows 10 Pro, you should change it to yours. You won’t be able to activate Windows with that key.\nPhase 7 OOBE OOBE – Out of box experience – is the Wizard which you see during the first Windows boot.\n“amd64_Microsoft-Windows-International-Core” will tell the computer which language, region and keyboard layout will be used for the users.\n“amd64_Microsoft-Windows-Shell-Setup” will accept the agreement, set Windows to get automatic Windows Updates and create local user “Dave” who will be an administrator. Notice that password field is hashed, therefore you should change it to yours.\nDefaultuser0 bug When at some point you’ll start testing/deploying the image, you might notice a 2nd user account created during the installation, called defaultuser0. It’s being created during the CopyProfile function, I couldn’t find an explanation why it happens.\nWe could switch off the CopyProfile, but then it would be necessary to spend a way more time with customising (including start menu, theme, wallpaper etc. would need to be set, configured with text files and exported – which is not really user friendly).\nOr we could keep using CopyProfile and call a command “net user defaultuser0 /delete” during first user logon, which removes it automatically. I prefer the second option, which is included in the answer file.\nSave the answer file Once you’re happy with your answer file, save in the shared folder created earlier on.\nPreparing the image for capture/housekeeping We need to do some housekeeping to make the image clean and neat for the end user:\nRun Windows updates Run antivirus updates Remove all browsing history from Internet browsers Unmount all mounted network drives Right click on the address bar in Windows explorer and choose “Delete history” Run disk clean up Make sure there are no passwords saved in the Credential manager (Control panel\u0026gt;Credential Manager) Remove any directories used during image preparation (e.g. C:\\temp) This slideshow requires JavaScript. In other words – when your users get freshly wiped PC, they’ll get an impression it’s spanking new, yet customised by their great IT department. It makes a difference, a huge difference to the end user.\nTest the image within VM That’s a great moment, isn’t it? I’m always excited when testing the new image and see how all the work turns out. But before deploying it to the actual physical machine, it’s worth to test it within the actual VM.\nWhy? Because due to checkpoints, it’s extremely easy to roll back the deployment, amend the setting and deploy once again. It’s a real time saver. Therefore, do not expect the image to be ready after the first time. My first attempt took about a week to get fully polished and prepared image.\nTake the checkpoint now Remember: if there’s something you don’t like after the deployment or test, you can always roll back, change the image and try once again (and don’t forget to take another checkpoint).\nYou can repeat that process until you’re fully satisfied with the result.\nSysprep – the tool for generalization Generalise makes the image truly hardware neutral. It removes all installed drivers, Windows activation, unique installation details for the VM – it then allows computer to install completely fresh and setup itself for the new installation or another computer.\nTo generalise Windows installation you’d like to:\nOpen elevated command prompt Type: CD C:\\Windows\\System32\\Sysprep Type: **SYSPREP /GENERALIZE /OOBE /REBOOT /UNATTEND: **We call sysprep tool to generalise the installation, set Windows into OOBE mode, use answer file and restart the PC. Wait until the sysprep process is done and PC restart. This slideshow requires JavaScript. Once completed, VM should restart a few times and – if everything goes well – bring you to the login screen. You’d like then to review all your customisation settings, make sure that passwords are not saved etc. Remember that whatever you can see after the first login, will be available to any new user using the computer.\nCapturing and deploying the image Once your VM is up to the standard it’s time to send it to the actual hardware and see if everything still works + all drivers are working.\nHowever, it’s beyond this article as there are many tools which can be used. If you’ve got any favourite tools which can get the job done – let me know!\nA few tips: Always take the checkpoint before syspreping. Windows has a sysprep counter, and after generalising an image few times it will not allow you to generalise it another! This means you’d need to create another image from the scratch. On the other hand, if you’ve got a VM with checkpoint just before sysprep, you can always come back to it, amend it, checkpoint it and sysprep again, unlimited number of times. If there are too many checkpoints (and not enough hard disk space), you can always remove all of them and create a new one. Creating the image is a long process – take your time! Main photo by: https://unsplash.com/@rawpixel\n","permalink":"https://kamilpro.github.io/prepare-windows-10-1607-image/","summary":"\u003cp\u003eSooner or later every company will come to the point when using standard Windows image is just not enough. Manual installation, fetching all updates or installing software etc. etc. takes time, and in IT, we really can use that time for something way more productive.\u003c/p\u003e","title":"How to prepare Windows 10 1607 image"},{"content":"It’s early Monday – the time between the coffee and checking emails – you realise everything’s gone. Files. Videos of your children since they were born. Years of company’s spreadsheets. Gone. It’s not going to be a good week, for sure.\nThere are 2 kinds of people… According to one of the IT jokes, there are two kinds of people: ones who do back up, and the ones who will.\nIf you are in the first group, you’re good and can go and enjoy the sun rain (did I mention I’m based in the UK?), or you can read through and later send this article to your mates.\nIf you are in the “I will do backup” group, better have a seat, and rethink your attitude. Because it’s been very wrong.\nWe usually don’t realise that something’s important to us until we lose it (that’s why there are tons of love songs about that she/he dumped him/her), and while retrieving data might be possible, it will cost you a lot of stress, time and (probably) money. The worst part is, there is no guarantee to successful recovery.\nThe file loss is like a diarrhoea , it comes out of blue The reason might be anything, at any time. It suddenly happens, and when we realise it, it’s already too late.\nThe device or hard drive might die, the files might be ‘accidentally’ damaged deleted by your ex-partner, your online backup might simply disappear – just because it’s been hosted by some 3rd party company.\nImagine a situation when your manager, or (what’s worst) your partner comes to you and asks for some documents/pictures from 5 years ago. At once, with a smile on your face you answer easily: ‘There you go’. A few clicks later you realise the files are not there, and don’t remember moving them anywhere. Typical.\nYou can ask for some time, and remain silent. At the given moment, there’s only hope left (and believe me, that’s a terrible feeling), that the files are somewhere else. The only action you can do is to go through countless number of folders, network share, USB sticks and CDs. How come there’s no any kind of a backup?\nBecause the backup has never been made.\nYou are the only one who knows the best, how much your files are actually worth. So I’m not going to do maths here, instead – I’d like to present you some options. And believe me – once done – you’ll sleep a way better.\nWhat do I need to do backup? There a quite a few options, most of them are one-off payment. Done.\nExternal hard disk Probably the most popular way of doing backups. It’s simple, yet effective and cheap. You can literally copy and paste your stuff if you wish, just to make it safer.\nPros:\nCheapest price/space ratio – you can buy 2TB drive for circa £70 Long lasting – up to 10 years Cons:\nCan only be connected to one computer at the time Works only with computers Optical media – CD/DVD/BR Pros:\nReally cheap Once burnt, cannot be erased (read only memory) Cons:\nQuite low in space Can be easily scratched/bend, and therefore damaged NAS – it’s like your very own cloud drive It’s nothing but a hard drive, but connected to a network rather than a computer. It’s more expensive than external hard drive, but also much more powerful.\nPros:\nAccessible from many devices, including smartphones Some models are even accessible via Internet Some models can handle multiple hard drives, which grants more space and/or redundancy It’s independent, doesn’t need a computer to operate Based on manufacturer, can have extra features e.g. work as media server Cons\nMust be powered on all the time If the device dies, it might not be simple to access files which are stored on HDD (but still, a way easiest than actually recovering data), the reason beign is that NAS usually uses some specialised file system for storing data, which is often not supported by computers without special software. USB Sticks/SD Cards Small and fast, like hard drives you can literally copy and paste onto them, but I wouldn’t keep crucial stuff on it. Think of these like a temporary solution, or a way of moving files from one device to another. While sizes up to 128-256GB can come below £50 these days, all above come still more expensive.\nPros:\nMuch faster than external hard drive You can always carry it with yourself Cons:\nFew times more expensive than ordinary hard drive for given space As they are usually small, they can be easily lost Cloud Storage You can upload your files from any device and download them to any device, as long as you’ve got the Internet access. Often you can “undelete” files for some period of time. It is often subscription based, therefore you must pay a fee to use it and access your files. Usually you must put all your files in one dedicated folder. Then this folder is synchronised across all your devices.\nCloud storage often supports versioning – multiple versions of one file. That means if you’ve been working on one file for some time saving it multiple times, it might allow you to roll it back to the state from couple of months.\nExamples of the free services:\nDropbox – offers 2GB on start, which can further expanded Google Drive – Offers 15GB, requires gmail email account OneDrive – offers 5GB, requires Hotmail/outlook.com account. Comes pre-installed with Windows 8 and 10. Pros:\nFiles accessible across multiple devices Synchronisation and versioning of files Possibility to “undelete” files Cons:\nUsually free on limit size scope (most popular services vary between 2, 5 and 15GB), than subscription is required You entrust your precious files to some 3rd party company Cloud Backup This is my favourite solution. You need to install an application on your system which monitors your hard drive and makes an instant backup to the cloud. It works in the background so it is completely transparent and automatic. Until you need to restore some data, simply fire out the app (or log in to the web interface) and pick what must be recovered. This is like complete peace of mind, but obviously is not free – on the other hand, the store allowance is often unlimited, which is a real value for money.\nSome example services are Carbonite and IDrive.\nPros:\nFully automatic and transparent backup Versioning of files Cons:\nUsually not free Might take your broadband, especially when operating on the massive files Whoah, that was quite a list. I wanted to give you the idea of actual possibilities of backups, on different mediums and price range. My personal favourites are External hard drives, NAS and Online Backup, but whichever you choose, be ensured that you making the world a better place.\nLet’s dispel some myths about backup As always, there are few things spinning around which are worth explaining.\nRAID will not save data RAID – as the abbreviation suggest is – redundant array of independent disks, which means nothing but a multiple hard drives to which one set of data is saved. So if you save a file to a RAID drive, its copy will be on every single hard drive, in the case of failure of one, data is still safe in on the other drive.\nRAID will not save your data, If you delete it. It protects your data only from physical damage of the hard drive. That means if you’ve got a mirror setting made out of 2 hard drives, and one of them dies, data will still be in absolutely perfect shape on the other drive. But if instead, you your cat highlights files and press DELETE button, data will be gone, from every hard drive.\nNo medium would last forever While hard drives are reasonably long lasting, it’s worth to replace them every, say, 5 years. And please, do not store your sensitive files on USB sticks and DVD drives – you wouldn’t believe how many times I’ve seen melancholic person because it’s USB stick suddenly died after a few years. ‘But it was absolutely fine this morning’ well, ‘it was’ is fair enough explanation.\nOne backup is not enough Once you are on the light sight (doing backups I mean) there is one more little secret you might like to know – having only one backup might not be good enough. Misfortune happens in the herds – and so backup drives die in groups. Or data could be damaged long before you’ve realised it. That’s why having extra layer of security can be really a wise choice.\nI personally back up all my data to one central computer, which has attached external hard drive to it. And then I copy all this stuff to another external hard drive, which is only plugged in during the backup, all the other time it remains unused.\nSo even if my laptop dies, my desktop dies, my external drive connected to the desktop dies – I still have this external guy waiting to come in action and save the situation. Pretty smart, eh? Imagine this sort of backup cost me less than £100.\nIn enterprise, not always everything on your computer is being backed up Having a total backup of the entire computer might be a really disk-consuming process. Therefore companies often back up only selected folders like documents, or so called personal folder. Therefore if you are not sure what is backed up in your company, go and ask your friendly IT guy. Make your and his life much easier.\nI hope you’ve realised by now why and how to back up As you can see, it’s not a difficult or expensive task. Especially if you can compare to the worst case scenario when data recovery is necessary (and we might be talking here about hundred and thousands of pounds – not to mention the operational cost lost.) All the tools are built in the operating system you use, or very easy to be configured.\nHowever, if you’d like some further guidance about backup, go ahead and ask me in comments.\nSpread the word about backup go and tell your spouse, colleagues, mates and dog (because, why not!) about the importance of a backup. It’s like a wheel in the boot of the car or first aid kit. You can even refer them to me and this article, I’ll be more than happy to help to understand the whole process! Even if you are an IT Ninja like me, show this to your colleagues, show that you are not just talking about why backup is important!\nNow, once armoured in all this knowledge and experience, what’s your excuse not to back up?\n","permalink":"https://kamilpro.github.io/do-you-even-back-up/","summary":"It’s early Monday – the time between the coffee and checking emails – you realise everything’s gone. Files. Videos of your children since they were born. Years of company’s spreadsheets. Gone. It’s not going to be a good week, for sure.\nThere are 2 kinds of people… According to one of the IT jokes, there are two kinds of people: ones who do back up, and the ones who will.","title":"Do you even back up?"},{"content":"My idea of this place has been changing since I’ve brought it up. It wasn’t even my first blog, in fact, it was a third one. But the main difference was I wanted to get to the world this time. Don’t just write for the sake of writing.\nVery first version of this website was more like a business card or a CV, rather than a blog. I don’t say how proud I was, but also must admit how wrong I was. My business card is my skills and recommendations – it didn’t need a special website pumping it.\nSo I’ve scrapped it, to a blog-only style, with some links to my other work.\nThe idea was great, but blogging wasn’t on my mind at the time given. Firstly, I’ve been hardly studying to move on with my career. Secondly, I’ve been hardly searching for a new job and studying – again – how to do it the best way. Thirdly, I’ve been flipping my personal life upside down.\nIt all worked out beautifully and made me feeling a way better. But my blog was just sitting there, not updated and forgotten.\nSo here comes new The thing that I haven’t been writing, posting and disappeared from social media doesn’t mean that I’ve forgotten about my blog. I’ve been thinking about it, how to bring to all its glory.\nI love it.\nLet me show you around the blog First of all, I’ve asked myself a question – Who am I writing this blog to? And my first thoughts were – to people who like to question why things happen in a certain way. Why we behave like we do. For people who like me, would like to pursue their future and take the best out of it, working hard in achieving these.\nTherefore, I’ve squeezed categories to only 4:\nMe \u0026amp; People – where I write about our behaviour, emotions and my views about these. IT – where I talk about technology, in plain language. I will not bother you with boring nerdy talk – I spend hours on a daily basis on this deep techy stuff, and want to show you what’s the best, most valuable and interesting to you. Let me be your guide here, and I’ll do the dirty stuff for you. Motivation – everything related to work, career and self-development. We spend at least 1/3 part of life in our jobs, let’s squeeze all the sweet juice out of it. Photography – my photos, photo sessions and travels documented mostly by pictures. I can feel comfortable within those topics, and more or less I’ve been writing about them. Now it will easily allow you to find your posts.\nMain page of the blog At the top, you’ve got a massive slider with my best and featured posts. Below you can find most recent posts organised by categories. I think it’s better when it is organised like that, rather than having only most recent posts.\nThoughts are now part of the blog The idea of thoughts is just great. Short views put straights out of my mind onto a piece of paper put a life to the blog. It’s updated more often than ever. But having 2 blogs, even within the same domain, simply wasn’t comfortable. Thoughts is now just a category, so whenever I put something quickly and short, I set it as main category + thoughts.\nSocial media It’s more difficult than I thought. Creating engaging content, reaching more people – it’s not as simple. There is still plenty to learn for me, actually, I think I’m still a newbie here, but hey, I hope one day I will learn it and understand thoroughly. Currently, you can find me mostly on Facebook, Twitter and Instagram.\nAnd here comes my great favour to you: if you read my posts, see my photos and enjoy it – simply give me ‘like’, comment or even share what you see or read. It really helps me to reach out to more people and show them my content. It doesn’t cost much, and can really help me.\nSome time ago I’ve realised that I was selfish. I’ve been reading a lot of blogs or other content of people, but never showed them that I actually liked their work. I never realised that being a “passive” reader wasn’t really nice to them. Therefore, I’ve started giving likes and comments to them, so that they could see that their work wasn’t wasted.\nThat would be it for now.\nI am excited by going through this change. I hope you will join this journey with me and receive the best out of it.\n","permalink":"https://kamilpro.github.io/blog-is-changing/","summary":"My idea of this place has been changing since I’ve brought it up. It wasn’t even my first blog, in fact, it was a third one. But the main difference was I wanted to get to the world this time. Don’t just write for the sake of writing.\nVery first version of this website was more like a business card or a CV, rather than a blog. I don’t say how proud I was, but also must admit how wrong I was.","title":"Blog is changing"},{"content":"Because software was working without the need of downloading tons of patches. Why do we actually need to update software in the first place?\nIn the past, the only way to obtain a software was by delivering the physical media to the recipient. There was a cost of media itself and shipment (and probably much more of which I’m not aware of), it couldn’t be cheap. While comparing to the current times, it is just a matter of uploading an update to the server and push to users.\nThe product had to be fully functional at the first official release. Moreover, if the function has been promised, it was included in the final release. Not, like now, added after some time, with another update/release.\nIt’s like paying for a 3 meal course in the restaurant and receiving only 2 of them. The last course is going to be delivered in “future”, chef will let you know when it’s ready to be picked up.\nEarly access is quite the new thing in the software world. It is nothing but paying for having access to unfinished product before it’s “official” release.\nIn other words, we pay for being a guinea pig. Developers, rather than paying for solid tests performed by professional testers – they sell it (!) to customers. I could understand a free early preview, but paid preview?\nInternet gave us all huge possibilities on being up-to-date with everything. I know that developers love to share their software with the rest of the world as soon as possible. On the one hand you can provide us with the newest and (hopefully!) best versions of your software, on the other hand we can always benefit from your newest inventions.\nDear developers, whenever you decide to take my money for your product, please make sure it’s polished and working as good as on your marketing materials.\n","permalink":"https://kamilpro.github.io/im-really-missing-time-internet/","summary":"Because software was working without the need of downloading tons of patches. Why do we actually need to update software in the first place?\nIn the past, the only way to obtain a software was by delivering the physical media to the recipient. There was a cost of media itself and shipment (and probably much more of which I’m not aware of), it couldn’t be cheap. While comparing to the current times, it is just a matter of uploading an update to the server and push to users.","title":"I’m really missing time before the Internet."},{"content":"We live in a time driven world. We to try to maximise 24 hours every day. Time wasting is not an option.\nTherefore we try to squeeze as much as possible in a schedule. Beginning from very morning.\nEvery morning we start fairly the same, fulfilling daily ritual. Make up, news, coffee – ready, steady, go – everything what make us ready to make a public appearance .\nSo it’s 8 am, and we are certainly ready to leave. Despite the traffic, overcrowded public transport and finally – queues in the coffee shop – we made it through to the office. We can finally sit at the desk at 9 am.\nAgain, consequently, task by task as time passes by we prove that we can make our best and get everything done, on time.\n5:30 pm, time to go home. Quick shopping on the way back. Then we can spend the rest of the day with family, ourselves or just being lazy. Because we can.\nEverything is perfect. Everything is synchronised. We fulfil 24 hours to every second. We make sure that everything happens exactly when it should. Time is one of the greatest, seamless and simple inventions human being ever invented!\nAnd there is Southern.\nAs the world is synchronised and we can arrange a meeting with different people being in different parts of the globe and different time zones. Southern has a difficulty to provide a train according to a schedule. When before going on holiday, we try to close as many projects as possible, Southern simply cancels the trains.\n“Temporary shortage of train crew” lasts for months, and when the train finally arrives, it’s like a can full of sardines – crowded and smelly.\nBut every story should end up well, therefore here’s my take: because of all of these delays I can spend more time reading. It pushed me towards taking up driving lessons, which took me 10 long years to get around to do it.\nEverything has a bright side, it’s just a matter of finding the right angle of looking.\n","permalink":"https://kamilpro.github.io/on-time-to-be-or-not-to-be/","summary":"We live in a time driven world. We to try to maximise 24 hours every day. Time wasting is not an option.\nTherefore we try to squeeze as much as possible in a schedule. Beginning from very morning.\nEvery morning we start fairly the same, fulfilling daily ritual. Make up, news, coffee – ready, steady, go – everything what make us ready to make a public appearance .\nSo it’s 8 am, and we are certainly ready to leave.","title":"On time – to be or not to be"},{"content":"We live in a cram-full world, full of anything we could possibly imagine.\nHaving a choice is a great thing – I can pick stuff which really suits myself. In case I need, say, a teal corner 4 seater bed sofa, it’s just a matter of time and money I am prepared to spend, until I get one.\nBut what happens when I don’t have too many options? When there are 2 things which really suit me, but say, I’ve got space just for 1 sofa?\nI can tell what’s going to happen – I will spend ridiculous amount of time comparing, looking for details I like more, reading and watching an awful lot of reviews. I am terrible at making that kind of decisions, so before I commit, I need to make sure it’s the right one.\nI believe that you, similarly to me, make decisions on daily basis. The only 1st World Problem is like where should I get my lunch today, and we know very well, that this is sometimes a real mission. I really don’t want to mention here much more serious decisions.\nSo it’s 1 pm, that amazing moment when I can start my journey to a sunny to the shops opposite. While most of them have similar assortment, there is always that long awaited question – ‘What are you having, today?’\nWho knows, how could I know?\nActually, at which point do you make decision that you prefer a baguette with tuna chunks, mayo, and sweetcorn from one shop than another? Ok, once tried all possible shops around you can prefer which actually taste better, but before that? All baguettes are “freshly prepared today”, similar sizes and cost – so where is that decision made?\nWell, it all apparently varies. Sometimes I could recall that brand name, sometimes logo appears to more than another, or maybe it is that cashier smiling nicely to you whenever you pass the shop?\nSo I’ve made a decision some time ago, to keep my lunch pretty simple. Monday: Panini, Tuesday: tuna, Wednesday: meatballs, Thursday: ordinary sandwich from a local grocery shop, Friday: it’s Friday, I don’t care.\nLess is simple, less is better, less gives me more time. Did you notice that Steve Jobs or nowadays Mark Zuckerberg always wore the same cloths? Because it was simple, they didn’t need to waste time to decide “What am I wearing today?” Again, less is more.\nAnother great example of less is more is photography – every good shot has a certain message to a viewer. If it is a portrait, then you can see a sharp face on the first plan, and blurred background. That’s it, that’s all about a good portrait. There are obviously other tricks like focusing the view on the eyes, cutting slightly on the top of the hair or so called rule of the thirds – but that’s additions which enhance the portrait.\nEyes, face, action, emotions and expression – that’s the parts of the good portrait. And if you’ve got any other distraction like jewellery, objects or people on the background – then you are ruining your photo.\nOnce again, less distractions is more for the overall photo.\nAnd there are hundreds of other examples like that – less in your CV, will allow the employer to focus on the most important parts of the CV. Doing only 1 task at the time rather than multitasking 10 at once will ensure that you will do the task better and faster, without the headache.\nLess is more, it’s always better to focus on quality. Apart from health, friends, and money – probably it’s better to have more than less of these.\n","permalink":"https://kamilpro.github.io/less-is-more/","summary":"\u003cp\u003eWe live in a cram-full world, full of anything we could possibly imagine.\u003c/p\u003e\n\u003cp\u003eHaving a choice is a great thing – I can pick stuff which really suits myself. In case I need, say, a teal corner 4 seater bed sofa, it’s just a matter of time and money I am prepared to spend, until I get one.\u003c/p\u003e\n\u003cp\u003eBut what happens when I don’t have too many options? When there are 2 things which really suit me, but say, I’ve got space just for 1 sofa?\u003c/p\u003e","title":"Less is more"},{"content":"What an easy life when you are an ignorant!\nDull face. Knows all football matches. Actually, this fellow made an art from sitting in front of a TV with a 4-for-£4 pack and trying to prove that this is his life passion. I think I could made another passion from observing clouds in the garden. I would watch them for hours while they change their shapes, move around in the sky, still sitting in the chair and observing them pointlessly. No hobby, no interests to substitute the pointless activity(!) or rather lack or activity.\nI’m pretty certain you know people like that. They seem to unhappy. But not because something didn’t work out or they’ve just been dumped by their ex. The only reason is their very own ignorance to the rest of the world.\nIn their view, there always could be something better. Certainly they would do something better than you, but somehow they’ve got more important stuff to do. Like watching TV. Or complaining. Or critisising. Or annoying those around them. The kill joy type, in its glory.\nUnless you are really lucky, everything comes with the price. You want your own house? No problem, go ahead and buy one. Oh, you don’t have enough money? Well, you can take mortgage and pay it off over the next three decades. Obviously, you will need to earn money to pay it off. But before they will do that they will moan and complain, undermine others’ achievements just to feel better. Screw you.\nIn my mind things happen only to people who dare to take a risk, instead of passively sitting and wasting their life. I don’t want to be another surprised romantic who at the end of his life the only thing has to say: I’ve just had a bad day. Year. Life.\nIt is not only about money, passion is ignored as well.\nThat football matches. Obviously, a guy knows, Mr Know it all, knows the football inside. Damn! He even knows even at what angle the ball should be kicked, and by who. That’s not important that the last time he played football was years ago, back in high school, probably.\nHe is the biggest supporter of his favourite team and he knows his stuff. Not the footballers who actually spend hours on daily basis sweating out like a horse in a western movie.\nI don’t just get one thing, one simple thing. If you admire something and you are calling yourself a fan, why do you criticise everything on every single occasion? How come that others try and make mistakes, and can live with that. But the football supporter cannot bare it even for a second?\nOh yes, I’ve forgotten, they are like a never polished diamond – maybe there is something marvellous inside, but there’s nobody to cut. Because the only person who can cut your diamond, is yourself.\n","permalink":"https://kamilpro.github.io/the-kill-joy-ready-made-type/","summary":"What an easy life when you are an ignorant!\nDull face. Knows all football matches. Actually, this fellow made an art from sitting in front of a TV with a 4-for-£4 pack and trying to prove that this is his life passion. I think I could made another passion from observing clouds in the garden. I would watch them for hours while they change their shapes, move around in the sky, still sitting in the chair and observing them pointlessly.","title":"The kill joy, ready made type"},{"content":"but I’m certain that 28 will be even better!\nYes, yesterday was my birthday. Another great year has passed but this time with a wonderful woman next to my side. It\u0026#8217;s unbelievable how many good things have happened in the last 365 days. I could now start telling you and show off\u0026#8230; but not on this occasion, this is a celebration time! On the days like these, I think about changing my settings to neutral, stop rushing and just sit calmly and wait for what comes next\u0026#8230;anything\u0026#8230; No. That\u0026#8217;s not going to happen. One of the things I\u0026#8217;ve learnt in life is to keep pushing and keep trying. Results not always come quickly, it usually takes time, effort and patience to develop something marvelous. I know, we live in insta-world and want to have everything now, ideally nicely packed delivered straight to our doorstep. In my view, you don\u0026#8217;t get older, untill you\u0026#8217;d like to learn and try new things. And so I do. ","permalink":"https://kamilpro.github.io/27-was-a-great-number/","summary":"but I’m certain that 28 will be even better!\nYes, yesterday was my birthday. Another great year has passed but this time with a wonderful woman next to my side. It\u0026#8217;s unbelievable how many good things have happened in the last 365 days. I could now start telling you and show off\u0026#8230; but not on this occasion, this is a celebration time! On the days like these, I think about changing my settings to neutral, stop rushing and just sit calmly and wait for what comes next\u0026#8230;anything\u0026#8230; No.","title":"27 was a great number"},{"content":"When we buy a new phone, manufacturers advertise it always as a super fast with superb colours and a long lasting battery.\nUsually it’s true, which we can confirm just after the unboxing ritual when we hold our brand new device in the hands.\nIt’s shiny, without scratches, with a specific smell, plus it’s really fast and battery lasts very long.\nUntil… we actually start using the phone, by this I mean installing the whole lot of our favourite apps. Some of them are just sitting there, not being used.\nBy the way, the apps are comparable to instant messenger. What’s a point of using the best, fastest and most secured instant messenger when actually there is nobody to chat with. Same with mobile apps, if there are no mobile apps, it’s highly likely that we won’t use that mobile phone.\nAs an example, let’s just look at once great and almighty BlackBerry as well as Windows Phone – they actually don’t have the same amount of decent applications as Android or iOS, and due to that reason, they are not that popular these days.\nMy question here is – what is a difference between a brand new phone, and say, one month old one? The latter one will be definitively slower, and the battery will get be getting flat quicker.\nThe core of the problem here is that the mobile phone’s operating systems run all the apps in the background. No matter what you do (OK, unless you try to get so called root rights, but let’s ignore it for the moment, as firstly it’s unofficial, secondly it’s likely to void your warranty. And it might brick your device) as long as the app installed, it runs in the background.\nAnother problem here is, we can’t help that. The app runs in the background. That obviously impacts the performance as well as battery. Have you ever found your phone hot, but it was unused for a longer period of time? That’s what I’m talking about.\nRecently, I have removed the Facebook’s app from my phone (the reason wasn’t the performance, though) and noticed that phone has been working much faster, and has much more juice thought out the day.\nThat lead me to an idea…\nIf there is such a difference between the default system and the one we actually use, why we as customers, cannot have some kind of comparison before buying the phone?\nThere could be a few users profiles: a business, teenager, and a photographer. Each profile would have a set of predefined apps running on it, and we as the customers would be able to see what is the actual phone’s performance and how long it would last on battery.\nI, as a practical guy, I’m rather after the real results than theoretical ones.\n","permalink":"https://kamilpro.github.io/apps-impact-smart-phone/","summary":"When we buy a new phone, manufacturers advertise it always as a super fast with superb colours and a long lasting battery.\nUsually it’s true, which we can confirm just after the unboxing ritual when we hold our brand new device in the hands.\nIt’s shiny, without scratches, with a specific smell, plus it’s really fast and battery lasts very long.\nUntil… we actually start using the phone, by this I mean installing the whole lot of our favourite apps.","title":"Apps, and their impact on the smart phone"},{"content":"Recently I’ve been writing about information overload. That we should avoid it, select only the best information.\nOh well, I have overloaded myself recently.\nI slept 24 hours over the last 2 days! From 8 PM till 8AM. Children don’t sleep that much. My last 2 days had been like: Wake up, shower, work, coffee, home, dinner, coffee, sleep.\nExciting, isn’t it?\nFor the past 2 days my memory was like ROM – Read Only Memory – mission was to think clearly. And of course I was like Pentium 4 class of processor – single threaded. No way of multitasking.\nSo what to do?\nI thought that silent mode was enough to keep me out of distraction. First thing I did was removing Facebook app from my mobile devices.\nIf I think about it now, I had been checking it every time I had I had a spare moment. Waiting for coffee to be served? Quickly check Facebook. Waiting for server to reload data? Quickly check Facebook. Never ending check check check.\nI follow quite a few blogs and other websites on FB, how to actually keep a track of them? I simply added to Feedly.\nFeedly is RSS reader – put it simply – you dump there your favourite websites, and Feedly keeps track of all of them for you, keeping record of all the new articles published on that websites. And you can browse them, whenever you’d like to. Like an email – all messages are waiting for you in your mailbox, until you’ve got time to actually read them.\nBiggest time eater sorted out, what’s next? Notifications on the phone. I just killed them all for all the apps. Do I really need to know about train delays in the middle of the day? Or about another crisis in the world? No, certainly I don’t. I’ll find out when I’d like to.\nAnd I’ve changed my organisation at work as well. I know it will probably sound cliché, but today I started using task feature in Outlook in a different way. Before I used to dump there all things I needed to do. Without dates, priorities, notes. And they had been sitting there. In a few cases – forever.\nToday I’ve organised them by: today, this week, this month, next month. As simple as that. And guess what, I’ve completed all tasks schedule for today!\nThe best thing about it is I don’t need to think about them anymore. Plus, I don’t need to think about upcoming events foe the following weeks, because they are planned just for the next week.\nSatisfaction from completing all planned tasks and having planned next week is obviously big, I know it was a good change.\nA few little twists, and I feel like I’ve recovered plenty of time, as well as the control over it.\nThis is such a good feeling to be writing, I was feeling bad about myself over last 2 days, because I didn’t write a single word.\n","permalink":"https://kamilpro.github.io/overloaded/","summary":"Recently I’ve been writing about information overload. That we should avoid it, select only the best information.\nOh well, I have overloaded myself recently.\nI slept 24 hours over the last 2 days! From 8 PM till 8AM. Children don’t sleep that much. My last 2 days had been like: Wake up, shower, work, coffee, home, dinner, coffee, sleep.\nExciting, isn’t it?\nFor the past 2 days my memory was like ROM – Read Only Memory – mission was to think clearly.","title":"Overloaded"},{"content":"How many times I’ve put my all enthusiasm into something, being convinced that it was the right thing.\nHundreds, maybe thousands of times.\nHow many time afterwards I have realised that my belief was completely wrong. Like 100% wrong. Like back to front feeling.\nI think the most difficult is the moment of making a decision. That very moment when it’s time to commit to a long standing decision. The second when it’s time to reveal self and go public.\nThen, here comes the moment, a short hesitation followed by questions: Am I actually right? Maybe my views are wrong?\nScrew it, let’s do it!\nProbably you’ve heard about comfort zone. About stepping out of your very own comfort zone. Life coaches and other so-called masters ‘Know it all’ say this is the most important step of the whole decision making process. Well, I disagree.\nStepping out of the comfort zone is just the beginning.\nOften we find ourselves not as good as expected. So what, then? What should we do when there is no road full of roses with a rainbow above it? And all these coaches answer their phones with the red button? You will trip and fall, rise and fall again\nWell, keep up. At the end of the day, it’s your life. And nobody will live it better, than you.\n","permalink":"https://kamilpro.github.io/whatever-floats-your-boat/","summary":"How many times I’ve put my all enthusiasm into something, being convinced that it was the right thing.\nHundreds, maybe thousands of times.\nHow many time afterwards I have realised that my belief was completely wrong. Like 100% wrong. Like back to front feeling.\nI think the most difficult is the moment of making a decision. That very moment when it’s time to commit to a long standing decision. The second when it’s time to reveal self and go public.","title":"Whatever floats your boat…"},{"content":"At home while writing, photo editing or just for fun. At work when I need to focus and be effective. At the time when I need a boost or completely opposite – when looking for a way to calm down. Headphones accompany me throughout the day.\nThere is something about sound that keeps me going. When I need to keep up and focus on something certain, I listen to some energy energetic music. Not too loud, because it exhausts too much and causes a headache, and not too quiet because… actually, what’s a point of listening to quiet music? I cannot find 1 reason to listen quietly.\nWhen I need to think about something and take my time, I listen to calm and steady rhythm, not too distractive, though. Somehow the slower tempo allows me to focus even more, which might be funny, because I find it difficult to think in complete silence.\nFinally, when there is nothing what requires extra attention from me, I like to listen to radio or podcasts, because then I can still do my stuff, while meantime listening to something funny or find out something new.\nThe best thing about the headphones is that it allows me to stay focused within my world, have a best sound quality, while not disturbing others. And others don’t disturb me, unless they really need something.\n","permalink":"https://kamilpro.github.io/headphones/","summary":"At home while writing, photo editing or just for fun. At work when I need to focus and be effective. At the time when I need a boost or completely opposite – when looking for a way to calm down. Headphones accompany me throughout the day.\nThere is something about sound that keeps me going. When I need to keep up and focus on something certain, I listen to some energy energetic music.","title":"Headphones"},{"content":"I’m crazy about few things in my life. One of them is self-investment. Something what I do entirely for myself, because I am convinced that it will be beneficial to me, eventually.\nAt the beginning of my IT journey, I sacrificed a lot of time. There were whole weekends with computer as well as late nights during a week. I wasn’t aware that this could have been an actual investment, that I was working towards bettering my future. Because at the time, it was nothing but pure fun.\nA few years later, the rumour spread (as it usually does, in a small town) about a computer whiz-kid who could fix computers. I was getting stopped by acquaintances, with questions type of ‘Could you please bring my computer back to life?’ There was no way I could say no to such question.\nSoon enough I’ve noticed a need in it, that there were more and more people with computers who couldn’t actually maintain them. Therefore, I have started charging clients for my time. Because I could.\nBut, apart from the money aspect there has been something more valuable – knowledge and experience. Any opportunity and any spare time I had I dedicated to widen IT wisdom. Because I wanted to know everything about it. Be the IT Kung-Fu Karate Master, who could answer and resolve people’s issues with computers.\nDo you know what’s the difference between an amateur and a professional? The professional pays a great deal to every single detail, and can understand and explain why things happen in certain way. While the amateur is playing hide-and-seek when things don’t work.\nWe all want to be the best in our professions. But this often has a price, which must be paid to see the benefits in the future. No guarantee, though.\n","permalink":"https://kamilpro.github.io/self-investment/","summary":"I’m crazy about few things in my life. One of them is self-investment. Something what I do entirely for myself, because I am convinced that it will be beneficial to me, eventually.\nAt the beginning of my IT journey, I sacrificed a lot of time. There were whole weekends with computer as well as late nights during a week. I wasn’t aware that this could have been an actual investment, that I was working towards bettering my future.","title":"Self-investment"},{"content":"They say that habits are our second nature. Things which we do repeatedly are like pre-programmed functions which trigger specific time or action.\nMorning coffee. I simply cannot start the day without a cup of a real coffee. That was the reason why I bought the actual bean to coffee machine, because of the taste and smell of real coffee. Prepared in the exact way I like it.\nThis week I’ve ran out of the time in the morning and couldn’t make my favourite coffee, so I used the instant one. Gosh, that was a terrible experience! No smoothness in taste at all, not the same smell, not the same kick in the morning.\nBut hey! I kept my routine, I’ve had my fix for the morning. In fact, it wasn’t that perfect routine, but at least I kept it.\nWell, that was the trouble I believe, my routine wasn’t perfect as normally. Actually, it was fairly below expectations. It was like a cheap replacement. And the baseline was – I like to keep my standards. If I do something seriously, I can only improve my expectations, but never go below them. Maybe that’s why I always try to improve whatever I do? The beauty and curse of perfection is that the more time you spend on something, the more time and effort you need to make an improvement.\nEven in IT, every serious IT department has its own routine. Check backups, review update and patching process or check status of servers. Even such a detail as naming convention is really important and must be consistent – otherwise finding certain rule or group of people might be extremely hard, as the name very can tell what exact thing is doing. And it’s really helpful when there are hundreds of rules, and you are after that specific one.\nHabits, such unconscious things, yet so important.\n","permalink":"https://kamilpro.github.io/routine/","summary":"They say that habits are our second nature. Things which we do repeatedly are like pre-programmed functions which trigger specific time or action.\nMorning coffee. I simply cannot start the day without a cup of a real coffee. That was the reason why I bought the actual bean to coffee machine, because of the taste and smell of real coffee. Prepared in the exact way I like it.\nThis week I’ve ran out of the time in the morning and couldn’t make my favourite coffee, so I used the instant one.","title":"Routine"},{"content":"Trust, hope, relationship. Words which make us feel good, because we can rely on others.\nI remember when sometime ago, I needed to push a new software to about 50 computers. As always, with that kind of operation, there was a very limited time to do this.\nIn normal situation, there is deployment solution in place – a server which distributes the software in an automated way. Obviously, as an administrator I need to prepare the whole process – finding installers, commands and switches for these software and even writing scripts.\nI did prepare everything and tested thoroughly – and at the day of deployment the server decided not to co-op at all. Jobs have been breaking, connections were dropping – the IT nightmare in all it’s glory. The second deployment server was out of question under current circumstances. Tragedy, literally tragedy did happen.\nBecause I couldn’t rely on this any more, I had to override manual mode – a bunch of USB sticks with all the files, scripts on it, that is. Yep, I ended up running around from one end point to another and sticking the flash drives in.\nIt really helps when you are responsible for preparation of the whole process, I tend to observe the whole process when it happens, with every detail that happens. That gives the great idea of how the actual process happens, what are the stages, eases the troubleshooting. In situations like that, adapting a new way of solving the problem is much easier than when everything is done to be faster with cutting the corners.\nThat was a long day and a long night. I came back home much later than expected, but the job was done. That was the most important thing to me. The server was obviously fixed later on, when there was a time for it.\nWhat I’m trying to say is: don’t be like this server. If you promise something, deliver. There’s no worse feeling than letting others down. And if you cannot help it, at least have guts and go to your mates and admit it. They might be disappointed, but at least aware of fault.\n","permalink":"https://kamilpro.github.io/rely/","summary":"Trust, hope, relationship. Words which make us feel good, because we can rely on others.\nI remember when sometime ago, I needed to push a new software to about 50 computers. As always, with that kind of operation, there was a very limited time to do this.\nIn normal situation, there is deployment solution in place – a server which distributes the software in an automated way. Obviously, as an administrator I need to prepare the whole process – finding installers, commands and switches for these software and even writing scripts.","title":"Rely"},{"content":"How many times petty things have ruined your day? Or people? Or, even, yourself? Just admit it.\nWe can take a lot. Our minds are like massive hard drives which store data in a form of memories, feelings and thoughts.\nDid you know that a human is able to erase certain bad memories or push them right back, deep in our subconscious? For example, women are going though unbelievable pain while giving a birth. Pain which lasts for hours, days or even weeks… If the process of erasing unpleasant experiences wouldn’t have happened, we would have had less babies right now…\nMaybe something less extreme? The tooth pain for example. I think everyone at least once had it in their life. Would you be able to recall that pain? Because I’m not able to recall it at all. Or maybe I don’t want to? I remember the need for plenty of drugs to relief the pain. I can even remember my facial expression on my face which demonstrated a great pain and suffering. But the pain itself – not at all.\nSo what about the mental pain?\nNot today. The mental pain can cause a serious damage to psychics or be even fatal if lasts too long. I had been trying to write down more about the mental pain, but I’m feeling like I’m not ready for it.\nOne day, I hope.\n","permalink":"https://kamilpro.github.io/no-pain-no-gain/","summary":"How many times petty things have ruined your day? Or people? Or, even, yourself? Just admit it.\nWe can take a lot. Our minds are like massive hard drives which store data in a form of memories, feelings and thoughts.\nDid you know that a human is able to erase certain bad memories or push them right back, deep in our subconscious? For example, women are going though unbelievable pain while giving a birth.","title":"No pain, no gain."},{"content":"I remember like when I was 10-ish and had been trying to fix my first computer. There was no Internet, there was no one really to ask for advice or share the knowledge with me. It took me days, and at the very end, I found that I didn’t have essential drivers to make my computer really usable. Did I mention that the Internet wasn’t available yet?\nI had to figure this out, and it took me ridiculous amount of time to achieve such a basic task like reinstalling an operating system. It would have been much easier to find that knowledge somewhere, wouldn’t be?\nAfter years, the Internet got popular and I’ve met more people. The knowledge has been waiting to be discovered and absorbed. And so I did. I have been deriving knowledge for years from different sources. But wasn’t really keen to share what was mine.\nUntil this year. Something’s changed in my mind. Maybe because I am surrounded with open-minded people who actually share with the world they knowledge and experience. Certainly, I’ve been impressed by them.\nHow I came to this conclusion? Just this week, I’ve helped a group of people with tasks which for me are obvious, but not for them. I spent some time on preparing the guidelines, the files and even an instructional video on the task, and boom – their job became a way easier.\nSharing is rewarding. Just give it a try, you won’t regret it.\n","permalink":"https://kamilpro.github.io/share/","summary":"I remember like when I was 10-ish and had been trying to fix my first computer. There was no Internet, there was no one really to ask for advice or share the knowledge with me. It took me days, and at the very end, I found that I didn’t have essential drivers to make my computer really usable. Did I mention that the Internet wasn’t available yet?\nI had to figure this out, and it took me ridiculous amount of time to achieve such a basic task like reinstalling an operating system.","title":"Share"},{"content":"A friend visited us yesterday. There was a nice cake, coffee, dinner and conversations thoughtout the night.\nSuddenly the ladies started to talk about navigation apps on mobile devices. K. was complaining about high data usage during browsing on the Internet. J. suggested her to try Here maps as it is free and allows to download the maps, therefore data is completely not needed for navigation to work, plus it is really accurate app.\nObviously followed the suggestion, went to app store and downloaded the application, but couldn’t download the maps… because of low storage space. I was surprised as her phone is equipped with 8GB of storage, while only 5GB is only allowed to the user. It’s quite easy to fill the space, especially these days.\nAfter unsuccessful 30 minutes struggle to find the reason for the mobile to run so slowly I suggested moving her picture to another device which would be only a temporary solution. What to do in that case?\nI showed K. my phone – Xiaomi Mi4 – and presented its functions, how it performs and told her that it was actually one of my best phones I’ve ever had. It didn’t take long when she asked for the price, which was a way much less then she was used. Like 2-3 times lower than other brands.\nIt didn’t take long to order the phone! Boom, the magic was done, there will be another happy Xiaomi user.\nI must admit, K. wasn’t the first person I’ve convinced to the less known brand.\nThat was a clear conscious influence from my side – I wanted to help my friend, but had to change her thinking about possible choices and available opportunities to make THE change. How often do we pick or stay with the same things, just because we are too afraid/lazy/used to the ones we currently use? Or simply sticking to one brand only because it is a well known brand. It’s like buying shoes only from one cobbler, regardless of the quality, they might be good, they might bad – we will never find out what the shoes are really like, if we can’t compare.\n","permalink":"https://kamilpro.github.io/influence/","summary":"A friend visited us yesterday. There was a nice cake, coffee, dinner and conversations thoughtout the night.\nSuddenly the ladies started to talk about navigation apps on mobile devices. K. was complaining about high data usage during browsing on the Internet. J. suggested her to try Here maps as it is free and allows to download the maps, therefore data is completely not needed for navigation to work, plus it is really accurate app.","title":"Influence"},{"content":"Sometimes I am so deep in my thoughts that I have no notion of what time of the day is. I know I should be doing something, anything but wasting my time… Life is too short to waste time but all the possibilities somehow don’t even cross my mind.\nDo you get the same feeling where you can literally stare at the wall opposite while the time stands still? It’s a horrible feeling. It can last forever. Lethargic state of mind.\nThis is the time when I need to talk to myself – what the hell are you doing?! Move, walk, DO something! Anything!\nI remember one day when I was sitting in my room and didn’t have a clue what to do. And there it was, there was my father’s guitar. I asked him whether I could use it, he obviously said I should go for it. And so I did.\nAt that very moment, I just wanted to do something different. I never played before, but that wasn’t a problem, I was just practising. That moment turned into a quite few good years of daily playing, having meeting other people who have been playing instruments and singing. Just because I tried something different.\nThere have been singing in choir, psychology and knowing about peoples’ characters, computer graphics which gave me the foundation of photo processing a few years ago, photography and writing…And I take that this is the reason how you come across his site.\nThere were plenty of others hobbies which I don’t recall at the moment – because they probably didn’t’ last long…\nAt the very last paragraph I’ve left my life time hobby – the game changer of my life – computers and technology. Who could tell, that bringing Commodore Amiga and later on PC would completely consume me, that much that actually I wanted to be a computer geek. Who could tell that it would have shaped my career to be a sysadmin? No one could. But it happened, and that’s one of the things which makes me happy.\nTherefore, if you have nothing better to do, go and do something different.\n","permalink":"https://kamilpro.github.io/do-something-different/","summary":"Sometimes I am so deep in my thoughts that I have no notion of what time of the day is. I know I should be doing something, anything but wasting my time… Life is too short to waste time but all the possibilities somehow don’t even cross my mind.\nDo you get the same feeling where you can literally stare at the wall opposite while the time stands still? It’s a horrible feeling.","title":"Do something different"},{"content":"The world is loud. It’s shouting though. Being expressive and extrovert is the key to the success this times. It doesn’t matter whether the person is good or positive.\nI think we’ve got used to being bombarded on daily basis, everyone and everything want to share with us. It’s up to us whether we’d like to take any of these screams on board, or just ignore them. And obviously, the question is – how much we can accumulate.\nBut what if all we currently need is peace? The utter silence? So called “me time” or “reflection time”? It’s hard to find time for self. Even when no other person is around, there are some devices which are there, armoured with a full range of completely irrelevant stuff.\nSometimes it’s worth being completely alone, even for a short period of time. Just to think, and look into the soul. Miracles can happen afterwards.\n","permalink":"https://kamilpro.github.io/silence/","summary":"The world is loud. It’s shouting though. Being expressive and extrovert is the key to the success this times. It doesn’t matter whether the person is good or positive.\nI think we’ve got used to being bombarded on daily basis, everyone and everything want to share with us. It’s up to us whether we’d like to take any of these screams on board, or just ignore them. And obviously, the question is – how much we can accumulate.","title":"Silence"},{"content":"I’ve got a good memory. I can remember different things quite easily, organise and plan them in my mind. A serious and complex task is not a big deal to me, as long as I can understand it. At times I can be annoying (I guess some might say that), by asking many questions, as understanding of each step is a baseline to completing every task correctly.\nBut there is something magical in writing down the tasks. Using to-do list might be efficient, as the task sits in the screen and stares directly into my eyes. But once finished, I can only click it to mark as completed.\nI can tick the box, feel good that I’ve completed the task, but there is no satisfaction. Just job done, I can move on.\nIn all my nerdish nature, I really am getting into writing on paper. Computer allows me to delete wrong things, like they never existed. It’s such a perfect and soulless thing. Piece of paper on the other hand is something more natural. I can see the process of getting into something, how my thoughts evolve from imperfect first idea to final and mature mind.\nDid you know that writing down things can improve your retention of information by around 40%, because we need to think about what we actually write.\nTherefore I’ve got my tasks. I’ve got my notes related to these tasks. I often circle notes and tasks together so that I can easily recall them. And there is no better joy, then crossing them out as you go. It simply feels good once the task has been completed.\nI think I should get myself a decent notepad.\n","permalink":"https://kamilpro.github.io/the-joy-of-crossing/","summary":"I’ve got a good memory. I can remember different things quite easily, organise and plan them in my mind. A serious and complex task is not a big deal to me, as long as I can understand it. At times I can be annoying (I guess some might say that), by asking many questions, as understanding of each step is a baseline to completing every task correctly.\nBut there is something magical in writing down the tasks.","title":"The joy of crossing"},{"content":"“We are in the process of management change” “The company is in the process of implementing new policies” etc. etc. This is quite a normal term and we don’t pay attention to it, instead we just take this information on board. Whether we like the changes, it’s entirely up to us, despite the fact often we don’t notice any changes in practice. But people are going through “process of a change” as well. Sometimes they make a promise to themselves “I spend too much time at work, therefore I should spend more time with my family.” Sometimes, something happens what drives us to the change “My father died, I should have spent more time with my family.”\nAnd sometimes some people actually do that.\nAt some point each of us has heard the sentence: “You’ve changed”. What does it actually mean? People move on with their lives. No one would like to start the life and stop at the same point. Studies show, that people change their character every 7 years. Personally, I believe that number varies significantly and depends on the person and circumstances around you. That’s why one day we might ask ourselves why actually we are still hanging out with the group of these people. That’s why we lose and gain interest in different hobbies, jobs, partners and gadgets.\nI always say – if you don’t move forward, you go backwards Why? Because others do.\n","permalink":"https://kamilpro.github.io/process/","summary":"“We are in the process of management change” “The company is in the process of implementing new policies” etc. etc. This is quite a normal term and we don’t pay attention to it, instead we just take this information on board. Whether we like the changes, it’s entirely up to us, despite the fact often we don’t notice any changes in practice. But people are going through “process of a change” as well.","title":"Process"},{"content":"I carry with me 2 phones – personal one and work one. On the first one, I store only personal stuff, while on the 0ther one everything what is work related.\nI have been using my phones like probably most of the people – putting them on vibration while in the restaurants, office etc. so that the phones wouldn’t annoy people around me. But, something’s changed when I was sent for a business trip abroad.\nObviously, I didn’t switch on roaming on my personal phone, because what’s the point of paying for the Internet, especially when I had my work mobile with data on. I didn’t even connect to the WiFi in the office, just because.\nBut something has changed. My workflow was going well until I realised what had changed – I wasn’t distracted any more. Because I was not getting notifications of any kind, my phone has been lying silently next to my laptop while I could work without any disturbances. And guess what: I wasn’t even tempted to check my phone for anything.\nIt was a little detail which I have discovered completely by an accident. From that time, my phones are always put on “do not disturb” while I am at work, meeting, or simply need to focus or relax.\nWhile computers or other smart-devices can multitask easily, we can’t. So rather than trying to be on top of everything, I rather focus on current task.\nAnd as we talk about being focused, soundtrack from The Witcher 3 is perfect for staying focused:\n","permalink":"https://kamilpro.github.io/notification/","summary":"I carry with me 2 phones – personal one and work one. On the first one, I store only personal stuff, while on the 0ther one everything what is work related.\nI have been using my phones like probably most of the people – putting them on vibration while in the restaurants, office etc. so that the phones wouldn’t annoy people around me. But, something’s changed when I was sent for a business trip abroad.","title":"Notification"},{"content":"We are all winners, undoubtedly. Whatever we do, whenever we create an action – we must win.\nWell, not really.\nSince the childhood we are taught and pushed to be the best. Get a grade A or B, at least C. Like the D, E or even F don’t exist. We are pushed through countless tests and exams, and being challenged on daily basis.\nAnd there is always somebody, who in a good faith has to say that “you won” even though we actually did not.\nMr Goleman in his book, Emotional Intelligence, presented controversial at the time of publishing, study that the IQ isn’t the determinant of our intelligence. Instead, the emotional intelligence is.\nSo what defines the emotional intelligence? Cutting a long (and brilliant!) story short, emotional intelligence is how the person can understand, express and control emotions of self and others.\nLet’s look around, definitively you can name a few school mates amongst whom some of them had been scoring great grades, some average and some were low. According to IQ, the better the grades, the better the life standard should be, shouldn’t it?\nHowever, life varies, and so often we find those best scoring folks not getting the best positions. Quite often it’s the opposite.\nThe average and average-low scoring fellows often become employers rather than employees or get senior positions whereas, those with high IQs can’t adjust. The first question that comes is: How come? That’s where EI comes.\nPeople who are just “average” very often have a way better emotional skills than the wizz kids, they can handle themselves and people around the in more efficient way. Make their way through the crowd of others not-single-out guys.\nI’ve read that book a few years ago and still can find useful thoughts in it. I’ll read it again, soon.\n","permalink":"https://kamilpro.github.io/a-winner/","summary":"We are all winners, undoubtedly. Whatever we do, whenever we create an action – we must win.\nWell, not really.\nSince the childhood we are taught and pushed to be the best. Get a grade A or B, at least C. Like the D, E or even F don’t exist. We are pushed through countless tests and exams, and being challenged on daily basis.\nAnd there is always somebody, who in a good faith has to say that “you won” even though we actually did not.","title":"A winner!"},{"content":"Spam. Spam everywhere. There isn’t a day without it. Without bombarding us with plenty of information. Way too much of information.\nWhile the original – email spam – is well handled by email providers, the other sources are not.\nOn social media – there is plenty of shared stuff which someone (I hope so!) thought was worth of sharing. News is all over the place – starting from daily free newspapers, through radio and TV and ending up on the Internet. But the problem with the news is simple – there is plenty of repetition. And it is down to us – receivers – to pick best sources which fit us best.\nIt’s really easy to take in too much of information. While we as smart and modern human beings like to always be on top of everything – it’s really important not to put ourselves into information overload. Our brains are only able to handle a certain amount of information. It hadn’t been a big deal for centuries, until the spread of a massive media back in 20th century.\nIt’s pretty easy to select the right information: put on quality rather than quantity. There is no point in reading the same news 5 times a day. But it is smart to use two completely opposite sources, ’cause ya know – the truth lies between the lines.\n","permalink":"https://kamilpro.github.io/spam/","summary":"Spam. Spam everywhere. There isn’t a day without it. Without bombarding us with plenty of information. Way too much of information.\nWhile the original – email spam – is well handled by email providers, the other sources are not.\nOn social media – there is plenty of shared stuff which someone (I hope so!) thought was worth of sharing. News is all over the place – starting from daily free newspapers, through radio and TV and ending up on the Internet.","title":"Spam"},{"content":"Thoughts. Ideas. Things which happen in my head for hours, days, sometimes even longer. My brain is constantly thinking, analysing and making decisions, almost 24/7. The problem is – I don’t share… but I really want to.\nSome time ago I’ve made a decision to create my own website where I could share my thoughts and where they would stay like carved in the stone.\nWhen I reflect on the past year (this is since I brought up my website) I have published less than 10 (TEN!) posts. Damn, that’s pretty low, isn’t it?\nYou can call me an old-school fellow because I connect the idea of writing a blog with recording the life. To me, blog is an online diary which one will to share with the others.\nApparently, blogging doesn’t work for me. I come with ideas which go through my thinking process, and when I am just about to start writing… I cannot make a decision. Is it right? Maybe I should rethink? Is it actually worth it? Etc. Etc. The result is – I don’t write at all. But the whole idea is developed inside my head, where it stays forever.\nTherefore being inspired by others I created Thoughts – my mini blog, the place where I could dump my thoughts.\nI would use social media – but hey! – I wanna keep what’s mine close. Just because. I want to have a full control when developing something new.\nThe problem with social media is that there is no really a way to find anything once it has been posted. Searching one-by-one, browsing through very own timeline is the only way to find a certain post. This is pointless. Content on social media disappears within hours.\nMy aims are simple: write more, express myself and master the English. Wish me good luck.\n","permalink":"https://kamilpro.github.io/lets-get-retar-started/","summary":"Thoughts. Ideas. Things which happen in my head for hours, days, sometimes even longer. My brain is constantly thinking, analysing and making decisions, almost 24/7. The problem is – I don’t share… but I really want to.\nSome time ago I’ve made a decision to create my own website where I could share my thoughts and where they would stay like carved in the stone.\nWhen I reflect on the past year (this is since I brought up my website) I have published less than 10 (TEN!","title":"Let’s get retar… Started!"},{"content":"Recently, Apple (and other big brands) recorded a drop of a smartphone sells. First time in over 10 years. Does it mean something is ending? I’d call it a big change. But let me take you step by step.\nDo you remember that we live in post-PC era? Yep, a few years ago news have been screaming and shouting that that’s it for a computer era – tablets and smartphones were supposed to take over and certainly – as media blindly believed – would be enough for most of the world. But guys forgot to mention that technological progress slightly changed its direction in the last couple of years. Basically, because of two things:\nComputers became really powerful. If you’d like to browse the Internet, watch video in full HD, listen to music, store your photos then well – any PC which was made more or less 8 years ago would do. 8 years! That’s plenty in technology. So, most of the people have had computers which could handle day to day tasks, what’s a point of buying a new toy? For a last few years, the actual performance of computers isn’t raising as rapidly as, say, 15 years ago. Rather than improving speed and performance of computers, manufacturers focus on power efficiency (so that you can take your laptop to work without a charger), miniaturisation (so that when you buy modern PC you can play video in 4K and play even some 3D games), and once again – miniaturisation (so that computers are smaller and lighter). Microsoft is giving away Windows 10 for free for anyone with Windows 7 or 8 licence. That is, for each computer released after July 2009. I know that new version of Windows might not be a reason to buy a new PC, but it was always nice to have a new PC with a shiny new OS on it. Literally, we can have the newest OS on the 7 years old computer. For free and legally. Awesome. And we can see the effect of this on yearly basis – manufacturers sell less and less of computer (e.g. Sony sold Vaio brand 3 years ago, that were really a state of art laptops. Samsung stopped making laptops), and it’s matter of time when the prices will grow up. I don’t want to mention the reductions in staff.\nSo what about the smartphones? Although computers always have been about getting more and more powerful – getting more Gigahertzes and cores, More and faster memory etc. – smartphones were surprising us in many ways. Better camera, better speakers, bigger screen, higher resolution, more memory, amazing design and obviously – more power.\nIn my view the biggest wow in the whole smartphone revolution was first iPhone, back in 2007. You know, a proper multi-touch, gestures, great look, proper applications, flawless workflow – you name it – it was a pure touch of something new. Revolution, which combined many of the features from other phones, put it together, done it better, added some magic and passion – and boom – everyone wanted a smartphone since then.\nEveryone wanted a smartphone since then – because it was something completely new and fresh. Soon enough the competition was joined by Google with android (and Blackberry, Microsoft – but as we know at the moment – not really successful). And again, like with computers a decade before, each year we could see newer, better and bigger smartphones. Moreover, usually we replace them every 2 years during contract extension. Billions of people, billions of smartphones “refreshed” quite often and boom – after almost 10 years since first iPhone and world says (quietly, so far) enough of this.\nYou can easily use 3-4 years old phones this time. Because, seriously – apart from phoning, texting, watching cats and watching videos and taking photos what else do we do with the phones? Functionality stayed the same. Obviously there is still a lot to do with mobile phones, but the improving part is getting slower and slower. Sooner or later we might see optical zooms, wide used VR, maybe holograms and other features – but it doesn’t change the main idea of the phones – keeping people connected.\nFlagship killers make the difference. What is a flagship killer? It’s a phone for price of at least half price of top models, keeping the same quality as the top brands. Have you ever heard about OnePlus or Xaiomi? These companies don’t spend a lot on marketing, or fancy boxes or other not important stuff – they provide you with what’s really important – a cutting edge smartphone, for your weekly wage. Impossible? I have had Xaiomi Mi4 for over a year, and have never seen a better phone. It didn’t cost me more than £170.\nSo, if you don’t need to spend over £500 for a new smartphone like iPhone or Samsung every 2 years, why would you? Check the Internet, do your homework, explore your options and don’t be limited. Think different ;).\n","permalink":"https://kamilpro.github.io/post-smartphone-era-yet/","summary":"\u003cp\u003eRecently, Apple (and other big brands) recorded a drop of a smartphone sells. First time in over 10 years. Does it mean something is ending? I’d call it a big change. But let me take you step by step.\u003c/p\u003e","title":"Post-Smartphone era, yet?"},{"content":"Nothing really makes me angrier than so called friends who remember about you only when they need something. They just wait to get free ride from you – because what’s a point to pay, if they can get it for free instead?\nIt’s nice to be nice when you need something Typical conversation looks like:\n– Oh hi, we haven’t talked for a while, how are you? How’s your life? Still working same place? We should catch up one day.\nEkhm, stop here. Firstly, we haven’t spoken for a while, usually couple of months or even longer, and suddenly you need to know the story of my life. At least the recent one. Secondly, when I tried to get in touch with you – just because – I was ignored.\n– Oh, did you try to call me? I must have been busy, you know, with stuff.\nYeah, spare me that. But hey, don’t think I’m a bad guy. I tend to believe in peoples’ good will. Actually, your intentions might be really genuine (honest) so let’s talk.\n– Hello, all good thanks for asking. I’ve been here and there, done this and that etc. What’s your story?\nNow, here comes the most anticipated part of the discussion. The essence of the intentions. The truthful intentions where selflessness disappears in the thin air…\n– Ah you know, my computer been slow recently, maybe you could have a look?\nOh yeah, now I got you! I have literally nothing better to do than providing charity-based services. Quite often without any kind of thank you word.\nI believe you can guess my answer easily. I honestly don’t understand why people don’t respect others’ time and skills. It’s like going to a shop and asking for a free bottle of single malt. They’ve got plenty of them, one given free shouldn’t make any difference. But for some reason, we know that we cannot do it.\nI learnt, that if you don’t respect yourself, nobody else will. And in this context, I mean value your expertise. There must be a reason why so called friend came to you rather than seek help at the local PC World. Don’t be stupid, charge them as much as you would charge anyone else. No mercy at this opportunity.\nIt’s all about time Out of all the things I can offer to somebody, I value my time the most. It’s quite cliché – when it’s gone, it’s gone, I cannot get my time back, get younger or whatever. I can travel, develop my skills, have fun or earn money, and therefore I don’t see a reason why I should be wasting it because someone is greedy. Not free ride this time, not with me. Sorry. I am sure there are others out there who will either be cheaper, or more naive than me.\nThere are only few people who can have my time:\nMy family, cause they are my family My friends who I spend time with. I help you, you help me. It works both ways. Pretty ladies, just because. All other people, I\u0026#8217;m sorry, but either you pay or I will have more interesting stuff to do e.g. browsing pictures of cats on the Internet. I hope you will understand and/or learn from my words. I really value my time, and in certain areas I spent years in mastering some topics. Sometimes it is better to relax and don’t anything, rather than let others to exploit myself for at the end of the day – nothing. Not a thank you word.\nWhy nothing? Because usually there’s nothing new to learn. Because you don’t earn anything. And the most annoying thing – you don’t gain a new friend. As soon as the job is done, and you close the door behind – your new so-called-friend just forgets you exist. They will be again busy with stuff, have more interesting things to do. Until one day, when they will need your knowledge and expertise again.\nProviding free service you loose twice: Firstly, as I said before, you literally gain nothing. Secondly, you loose your time. Thirdly – you make them think that this is normal, to get a free service, so they will keep trying to find another naive specialist. Therefore, you don’t gain anything, as well as others.\nOh, and coming back to the conversation it ended like:\nMe: ‘Yes of course, but it will cost you £xxx for that kind of service.’\nSo-called-friend: ‘Really? That’s great, but look my lunch break is finished and need to go back to work. I will speak to you later.’\nThat “later” never came. Actually, it never comes. PS. Imagine that you have provided someone with a free service, ’cause you’re a good lad. Imagine that this wasn’t good enough, or got broken or something like that. Therefore your new friend calls you again, and again and again. It’s like never ending story. Therefore if you are not in any of the above categories feel excluded from my service. End of.\n","permalink":"https://kamilpro.github.io/free-ride/","summary":"\u003cp\u003eNothing really makes me angrier than so called friends who remember about you only when they need something. They just wait to get free ride from you – because what’s a point to pay, if they can get it for free instead?\u003c/p\u003e","title":"Free ride"},{"content":"I gained most of my experience by doing and working things out. Quite often I was reinventing the wheel and discovering already discovered lands. Well, that gave me a lot practice, and no doubts, made me who I am now. But how could I actually proof my skills?\nYou can be a specialist… while being an amateur It’s not a secret that I have spent major part of my life providing outsource IT support. This allowed me to understand different industries and make connections with different people. But every single time when the question ‘How did you learn all this stuff’ came up, my answer was ‘I have learnt it myself’. I was proud of it, and I am still proud of it.\nI am proud because I could solve many problems without anybody’s help. Literally. When I was starting my IT journey, 15 years ago, there wasn’t the Internet at home (well, there was, but dial up one, goddamn expensive. And slow.) In addition I was forced to try different ways of solving problems, often I had to identify different hardware problems, or find a way to bring the OS back to working state.\nWhen there is no solution given, you need to provide one. Trying various methods means discovering new possibilities. And because you are doing, working out and learning new solutions, it is more than granted that you will retain the knowledge. Much longer than the actual only read knowledge.\nWe tend to follow one certain path, which we’ve been taught. Usually we don’t even try to question the path, if it is actually the best/easiest/fastest one. We take it for granted, and I think this is very wrong. Instead of finding something what really suits us, or at least improve the current situation, we follow one certain way. Like the lemmings.\nBeing self-taught benefited me a lot. But also limited in certain ways. I knew only areas which I really needed to know without going beyond ….\nCertification will enwiden your views After years of supporting different versions of Windows, I thought I knew it through and through. I couldn’t be more wrong. I was aware of everything what I have learnt (how ironic this sounds?) and nothing else. You don’t know how surprised I was when I started to study for MCSA certification. The whole new world of possibilities has appeared in front of my eyes! Unbelievable, how limited my knowledge was.\nThere are so many features and tools hidden in Windows you wouldn’t believe. I could get rid off so many 3rd party tools because most of them have been already included with Windows.\nCertification will allow you to master the topic You probably passed tens of exams in your life. Each of them proved your knowledge in certain areas. There is no difference in here.\nThere won’t be any doubts when you are certified Take a look at this: we’ve got 2 IT specialists. One of them will claim that he or she can support Windows, recover data, made a migration to newer version of OS, configure the network and is proficient in office applications.\nThe other guy will tell that he or she holds MTA, MCSA, MCP, MOS and CCNA certifications which proves his knowledge. Which one sounds better and which one would you choose? For me, the choice is obvious.\nI literally hated the part when I was meeting a new customer/employer and being questioned about my knowledge. Without certification you may look like an amateur, and therefore be treated as one.\nThis made me think, that despite my self-taught skills I had to provide a piece of paper regardless. “How ridiculous” I thought, “Why won’t ya just let me show you my skill” I said. Well, I soon realised that…\nCertification improves your chances of getting hired This is big. We all need to earn money, so we either try to get employed or get hired. When I had only my NVQ in computer science, I was getting phone calls only from people who heard from other people, that I was good. When I passed few IT exams, I started getting much more calls from people who just saw my CV, LinkedIn profile or my website.\nThis post wouldn’t be completed without this… As you already know, I was studying for my MCSA Windows 8 certification over last year, and guess what, I did it, and passed my second exam on 9th of January 🙂 The exam was such a difficult one, I didn’t believe I passed until I saw the results. I scored over 85% and became certified, here is the proof:\nYou might ask what next? Well, I need to rest a little bit, I spent over 10 months to achieve this. Recently been in Barcelona, am planning to create a post about this with high resolution photos and story alongside. I will definitively start learning about servers as this has been my dream for many years. I also plan a post about how to prepare for IT exams, and successfully pass those exam, as I have already passed myself quite a few. So I know what I am talking about :).\nI believe I have convinced you to my point. Over the last years I was continuously developing my skills and knowledge which go hand in hand with certification.\n","permalink":"https://kamilpro.github.io/why-certification-matters/","summary":"\u003cp\u003eI gained most of my experience by doing and working things out. Quite often I was reinventing the wheel and discovering already discovered lands. Well, that gave me a lot practice, and no doubts, made me who I am now. But how could I actually proof my skills?\u003c/p\u003e","title":"Why certification matters?"},{"content":"Each of us has some ideal places, songs, people and the way how the morning coffee should be prepared. Sometimes the way how negative situations happen describe the way our day, week, life look like. The way we are.\nFunnily enough, very often those things or people are just happening around us, the way we often don’t even notice it. We often can only notice the result of all those things.\nSome call it an energy, some call it the fate, and some simply call it the life. You can call it whatever you like, but it is important to be conscious about how the world affects us. So let’s start from the most important part of the life and choose…\nTHE RIGHT PEOPLE Yes, you read me right – right people. We cannot escape from them. We need to interact with them. So literally, we need to feel comfortable with them. Moreover, they should stimulate us to do more things.\nHave you ever felt that you can do more with certain people; that your approach changes from ‘well, maybe, but not yet‘ to ’Yeah! Let’s do it!’ because somebody next to you is vibrant, full of an energy?\nOr maybe you’ve got somebody who you are not shy to share your personal stuff, like pictures, poems, playing on an instrument. There are so many things that we keep for ourselves from the outside world because we are afraid of rejection and lack of understanding. If you’ve got somebody like that – the right person – you are a very lucky guy. You can develop and reinvent yourself when you are not scared of showing off. You can act, perform and make things working. You can go out, shout ‘This is me, and this stuff I do. And believe me, I am the best’.\nJust look around the Internet – blogs, YouTube, SoundCloud – all those artists are mostly amateurs, or started as the one. They were not scared to show off their skills to the whole world. If there were not, why it cannot be you?\nI hope this is a good reason for you to understand why you should…\nAVOID THE WRONG PEOPLE I believe you could foresee it.\nWho is the wrong person? Anyone who makes you feel uncomfortable. Embarrassing. When it is weird to act as you would normally do.\nObviously, it is not always possible to find the right people around you, especially when you work, study or even party. At least try, because when you will be around positive individuals, sooner or later, just like out of blue, you’ll…\nGET INSPIRED One of the worst feeling in life is when you are getting bored. Have no idea what to do and live in literally monotony-kind-of-life.\nSounds familiar? Looks like this is the best time to try something different, maybe with different people.\nI remember very well when a few years ago I was sitting at home, staring at my screen while scrolling down through some websites full of pictures of funny/sad/grumpy cats and YouTube. Time was passing slowly, I was ending up usually with a headache.\nAnd then I looked at the old guitar, covered with dust. ‘Actually it would be nice to play House of the Rising Sun’ I thought, and tried to play. I didn’t play right for the first time, nor for second but after many attempts I could actually play pretty well. I was just keeping trying.\nOne day I took my guitar outdoors and met with my mates. They didn’t know I was actually playing a guitar. Well, no surprise, I never told them. Then I realised that some of my friends were into music, and guess what happened next? As soon as we started meeting more often, writing songs and playing covers, we knew we were the right people in the town.\nWe played for fun, just for ourselves. It was never a successful band as we were hidden away in the dungeon of our basement (literally ;)).\nAfter few months, when I went abroad, we drifted apart. I actually didn’t play guitar much after this period, but Patrick, the lead singer recently has released his first album! This could never happened if we wouldn’t play together OR If I never left my home with the guitar.\nI know there are hundreds of stories like this on the Internet, but look, even this simple one shows the power of the right people. You can be yourself, enjoy the life and learn something new.\nI would never be where I am now, without the supporting, kind and helpful people. The right people. It’s worth it, believe me.\n","permalink":"https://kamilpro.github.io/the-right-people/","summary":"Each of us has some ideal places, songs, people and the way how the morning coffee should be prepared. Sometimes the way how negative situations happen describe the way our day, week, life look like. The way we are.\nFunnily enough, very often those things or people are just happening around us, the way we often don’t even notice it. We often can only notice the result of all those things.","title":"The right people"},{"content":"Everyone has a computer, tablet, or mobile phone. And we usually have some wallpaper set on it.\nUsually, we set family, pets, beautiful landscapes or build quotes as our wallpaper. And this is fine, because this is the reason why the wallpaper was invented.\nImagine that we needed some easy, cost-effective way to advertise local jobs to our learners (bear in mind I work in the learning centre, with mostly unemployed learners whose ultimate goal is to find a job) so they could easily find the ads and apply for jobs.\nNaturally, we have a job board, job club and time to time annoucements. However, not all learners get the information. Some might be absent, some might forget, some might be too busy with their current work to pay enough attention to any other stuff.\nDuring one of our meeting, it just hit me – why shouldn’t we utilise computer desktop to announce all the jobs and other important event to our learners? Each of them needs to log in to computer every day, each of them will need to look on the screen. This seemed like a perfect solution, at least it was a new approach without the need of extra effort.\nThereafter, I did create a wallpaper, set this up on all of the computers’ desktops and voila! All our learners see our current jobs, some even asked for more details.\nThis is funny how sometimes the simplest ideas might be the best. In addition, it might take very long time before you realise that the solution was right in front your eyes. But trust me, it’s worth trying even when idea doesn’t seem to be the best in the first place. If nobody ever tried this before how could you possibly know, this was wrong?\nSoon, I will prepare for you step by step instructions on how to create the wallpaper for your announcing needs. Stay tuned!\n","permalink":"https://kamilpro.github.io/how-to-utilise-a-computers-desktop/","summary":"\u003cp\u003eEveryone has a computer, tablet, or mobile phone. And we usually have some wallpaper set on it.\u003c/p\u003e\n\u003cp\u003eUsually, we set family, pets, beautiful landscapes or build quotes as our wallpaper. And this is fine, because this is the reason why the wallpaper was invented.\u003c/p\u003e","title":"How to utilise a computer’s desktop"},{"content":"How can you cut the cost of hardware from £200 to £30? And how to avoid unnecessary money and time waste? You need somebody who thinks out of the box, is determined and the most important – has tons of experience. Below you can see how I was gaining experience and how it helped me to be where I am right now.\nI always considered myself as the guy who’s got practical knowledge. When I was setting up my first PC (in times of Windows 98) I learnt by myself how to partition and set up Windows. Well, it was journey full of obstacles, as the words “partition” or “volume” were absolutely new to me. In other words: I didn’t know what they really meant, I just knew I needed them to install OS.\nThese were the dark times without the internet so everything I was doing was done by method called “let’s see what will happen if I select this”. Very often this method was followed by “well, I need to start over, again”. Obviously, after many attempts I managed to set up the OS and realised I couldn’t play my favourites games (I was 10 or even younger that time) because screen resolution and colours were horrible. Later on, I learnt that there is another piece of software, apart from OS, that you need to make your computer fully operative – drivers.\nAnyway, that gave me a lot of practice. And practice is when something is working, but you don’t know why. This is fine, until something breaks down.\nThe birth of an amateur In other words, I became self-learnt-computer-amateur. I was proud and I think I still should be, as nowadays kids are proud of themselves when they manage to install a game on their parents’ mobile phone. Excuse me, I was able to set up the computer and install games apart from that.\nI stayed an amateur for the next few years. Pretty quickly I managed to earn some money in my town as the word did spread quickly. I became a local computer-master. A guy who can do it quicker and better than a local repair centre. I really valued my customers, so as a result I always customised and optimised their computers to their actual needs.\nI could stop there. There was money flow, there were new customers, and new devices were introduced on the market like GPS or smartphones. Yet, it started to be boring: lack of new challenges, lack of new technologies and ideas. I wanted to do and know more.\nWhen I was 19, I made a decision to take up NVQ classes in Computer Science. I wanted to learn something new and become qualified. Being town’s nerdest guy wasn’t enough. I attended classes and learnt a lot of theory the basics of computer networks. Yes, computer network is what I was after since that time. I graduated and was the only one (out of the whole group) who passed the exams successfully.\nI was 21 when this happened with NVQ Level 3 certificate. It still wasn’t enough for me – the town would neither never change, nor give me the new opportunities.\nAll in all, I made another decision – I needed to leave my home town. I needed the city with hundreds of thousands people and companies who will throw challenges into my face. Therefore I went straight to London, where I was surrounded by newest technology and enterprises.\nThat was on 7th of July 2010. An exact month before my 22nd birthday.\nThe real challenge has come London. Big city, with many people and companies. As well with many other guys like me. Here you can be easily replaced. Competition is huge. Therefore you must be conversant with areas of your expertise, plus you must learn quickly. With IT you need to have a lot of experience or much more time and patience to do something properly. The problem is – companies quite often don’t have much time and will be not happy to pay for your wasted time. Imagine a situation when I had a lot of experience solely with computers, but not groups of, e.g. 30, which must be configured simultaneously.\nComputer network was the obvious answer – but how actually does it work? You need a server which controls clients. Windows XP, Vista, 7, 8 – they are all clients. Once again, I had to challenge myself and learn how to actually configure Windows Server. And I did, first of all by setting up virtual labs, following books, online tutorials. And believe me: you cannot predict what will happen in real world, event if you read 10 books. Again, the experience comes up and if you don’t have it, then you are going to have a tough time.\nI could give you lots of examples of why experience is important, but I believe there is no need to do it.\nThe reason why I wrote about experience I was inspired to write this post because of my most recent experience. One of my customers bought a workstation to work with a design application, e.g. AutoCAD. It was jamming all the time when they tried to work on more sophisticated models. A brand new machine couldn’t handle simple daily tasks. It’s worth to mention that it was entry-level workstation for professional purposes.\nI spent hours on the internet to look for an answer, and the answer was only one – a graphic card was way too weak to handle this, and bear in mind professional graphics are a few times more expensive than ordinary ones. I couldn’t believe this. I called my “IT guru”, a guy who has much more experience than me, and described the situation. His question was very simple – did you optimise Windows?\nSo I did optimise – the BIOS, drivers and operating system itself, spent time to check the results, and my jaw dropped when I saw a totally different performance!\nThe use of computer resources decreased by 50-75%, and the workstation could handle all the tasks easily. Just like that. The company saved a few hundred pounds on the computer parts.\nIt’s unbelievable how experience can lead to simple solutions, saving time, effort and money. I will still try to gain new knowledge, because the more I learn, the more I like to learn.\n","permalink":"https://kamilpro.github.io/what-really-matters-experience/","summary":"How can you cut the cost of hardware from £200 to £30? And how to avoid unnecessary money and time waste? You need somebody who thinks out of the box, is determined and the most important – has tons of experience. Below you can see how I was gaining experience and how it helped me to be where I am right now.\nI always considered myself as the guy who’s got practical knowledge.","title":"Experience, that’s what really matters"},{"content":"When I look backwards, I have always been fascinated by a photography for quite a long time. But it really hit me about 4 years ago, when I bought some Panasonic camera with 16x zoom. It was only at that particular time that I thought zoom was the most important feature of a camera. Well, I can now say that it is cool to have zoom, but without vibration reduction you cannot do much on long focal length.\nAnyway, time passed and I was taking some photographs, when I was showed by my old mate what was a macro photography. The view of detailed items really impressed me. But hey, it was all about taking pictures whenever I could, without focusing on advanced options.\nAfter that, I bought my first high-end mobile phone. I was surprised (apart from specs of course) by its camera. Soon I realised that I really did not need the compact camera anymore, so I gave it to my brother. And stayed for good with mobile camera for the next 2 years.\nDuring holiday time, my family came over and guess what – my brother brought the Panasonic camera with him – and obviously we were taking photos. After a day out, we sat in the front of my full HD TV and played some photos. That was it. I realised that camera from mobile phone actually isn’t that great.\nI could clearly see a quality difference between dedicated camera device and mobile phone camera. As photos from my mobile phone were noisy, photos from my brother’s camera were sharp. But something was wrong! My mobile phone was a few times more expensive than this compact camera! Well, life was brutal this time.\nI started to look for another camera. I learned that there are Compact, Bridge, System (or mirror-less) and DSLR cameras. As I wanted good quality of photos, with interchangeable lenses but not big and heavy camera itself, my choice went onto mirror-less camera. To be more specific – I chose Nikon 1 j1 with standard 10-30 mm lens. And it happened over a year ago.\nLike before with previous camera, I was stunned by the quality of pictures. And the speed of taking pictures – this camera was able to take 60 pictures per minute! Anyway, another good piece of hardware made my days for a long time.\nHowever, I found a few websites and blogs which were about photo business and/or hobby. I could see incredible pictures they had been taking. Well, I thought why shouldn’t I try? I armed myself in some online tutorials, YouTube videos and some settings. I did not know what Shutter speed was. Aperture was a mystery word to me. I knew that the higher ISO, the brighter picture, but I did not know high ISO causes noise to the pictures.\nMy proper manual photography education started off with 2 books: “Mastering Digital Photography” by Jason Youn and “The Digital Photography Book: Part 1” by Scott Kelby. The former book gave me all the theory I needed, the latter how to put theory into practise. In the meantime, I understood the reason to use tri-pod and why soft-light (or even golden hour) is what photographer is looking for.\nAs a result, my photo skills rapidly shot up and improved. I took thousands of photos and was never 100% satisfied. There was always something I could have corrected or improved.\nAbout a month ago, I asked my good friend Robert to lend me his DSLR. He has Nikon d80 with 18-135mm lens. The quality of photos (bear in mind this DSLR was 5 years older than my Nikon 1 j1) was stunning. As I was practising my Nikon 1 for over a year, I could take a better quality pictures straight away with Nikon d80, and all the functions were under my fingers. With Nikon 1, when I wanted to change mode from automatic focus to manual, I had to go to special menu, change function, come back to taking photos mode, click ok, adjust focus setting, confirm, and take a picture. I know I missed many great possibilities of taking good photos. With DSLR the manual focus is a matter of switching mode on lens, adjust the ring and take a pic. It takes 2 second in comparison to 20.\nI took me literally very short period of time to realise that what I need is DSLR, and my choice was Nikon d7100 with 18-140mm lens. I ordered it yesterday online, can’t wait to take it outside with me.\nIt was a long, all round journey to find my perfect DSLR. I wonder what it will bring me.\n","permalink":"https://kamilpro.github.io/it-happened-i-ordered-my-first-dslr/","summary":"\u003cp\u003eWhen I look backwards, I have always been fascinated by a photography for quite a long time. But it really hit me about 4 years ago, when I bought some Panasonic camera with 16x zoom. It was only at that particular time that I thought zoom was the most important feature of a camera. Well, I can now say that it is cool to have zoom, but without vibration reduction you cannot do much on long focal length.\u003c/p\u003e","title":"It happened – I ordered my first DSLR."},{"content":"Every proper project should have the “Hello world!”, so does mine ;).\n","permalink":"https://kamilpro.github.io/hello-world/","summary":"Every proper project should have the “Hello world!”, so does mine ;).","title":"Hello world!"}]